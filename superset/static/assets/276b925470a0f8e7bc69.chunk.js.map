{"version":3,"file":"276b925470a0f8e7bc69.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/react-ultimate-pagination/lib/react-ultimate-pagination.js","webpack://superset/./src/components/CertifiedBadge/index.tsx","webpack://superset/./src/components/TableView/TableView.tsx","webpack://superset/./src/features/datasets/DuplicateDatasetModal.tsx","webpack://superset/./src/pages/DatasetList/index.tsx","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination-constants.js","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination-item-factories.js","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination-utils.js","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ITEM_TYPES = exports.createUltimatePagination = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ultimatePagination = require('ultimate-pagination');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar renderItemComponentFunctionFactory = function renderItemComponentFunctionFactory(itemTypeToComponent, currentPage, onChange) {\n  var onItemClickFunctionFactory = function onItemClickFunctionFactory(_ref) {\n    var value = _ref.value,\n        isDisabled = _ref.isDisabled;\n\n    return function () {\n      if (!isDisabled && onChange && currentPage !== value) {\n        onChange(value);\n      }\n    };\n  };\n\n  return function (props) {\n    var ItemComponent = itemTypeToComponent[props.type];\n    var onItemClick = onItemClickFunctionFactory(props);\n    return _react2.default.createElement(ItemComponent, _extends({ onClick: onItemClick }, props));\n  };\n};\n\nvar createUltimatePagination = function createUltimatePagination(_ref2) {\n  var itemTypeToComponent = _ref2.itemTypeToComponent,\n      _ref2$WrapperComponen = _ref2.WrapperComponent,\n      WrapperComponent = _ref2$WrapperComponen === undefined ? 'div' : _ref2$WrapperComponen;\n\n  var UltimatePaginationComponent = function UltimatePaginationComponent(props) {\n    var currentPage = props.currentPage,\n        totalPages = props.totalPages,\n        boundaryPagesRange = props.boundaryPagesRange,\n        siblingPagesRange = props.siblingPagesRange,\n        hideEllipsis = props.hideEllipsis,\n        hidePreviousAndNextPageLinks = props.hidePreviousAndNextPageLinks,\n        hideFirstAndLastPageLinks = props.hideFirstAndLastPageLinks,\n        onChange = props.onChange,\n        disabled = props.disabled,\n        restProps = _objectWithoutProperties(props, ['currentPage', 'totalPages', 'boundaryPagesRange', 'siblingPagesRange', 'hideEllipsis', 'hidePreviousAndNextPageLinks', 'hideFirstAndLastPageLinks', 'onChange', 'disabled']);\n\n    var paginationModel = (0, _ultimatePagination.getPaginationModel)({\n      currentPage: currentPage,\n      totalPages: totalPages,\n      boundaryPagesRange: boundaryPagesRange,\n      siblingPagesRange: siblingPagesRange,\n      hideEllipsis: hideEllipsis,\n      hidePreviousAndNextPageLinks: hidePreviousAndNextPageLinks,\n      hideFirstAndLastPageLinks: hideFirstAndLastPageLinks\n    });\n    var renderItemComponent = renderItemComponentFunctionFactory(itemTypeToComponent, currentPage, onChange);\n    return _react2.default.createElement(\n      WrapperComponent,\n      restProps,\n      paginationModel.map(function (itemModel) {\n        return renderItemComponent(_extends({}, itemModel, {\n          isDisabled: !!disabled\n        }));\n      })\n    );\n  };\n\n  UltimatePaginationComponent.propTypes = {\n    currentPage: _propTypes2.default.number.isRequired,\n    totalPages: _propTypes2.default.number.isRequired,\n    boundaryPagesRange: _propTypes2.default.number,\n    siblingPagesRange: _propTypes2.default.number,\n    hideEllipsis: _propTypes2.default.bool,\n    hidePreviousAndNextPageLinks: _propTypes2.default.bool,\n    hideFirstAndLastPageLinks: _propTypes2.default.bool,\n    onChange: _propTypes2.default.func,\n    disabled: _propTypes2.default.bool\n  };\n\n  return UltimatePaginationComponent;\n};\n\nexports.createUltimatePagination = createUltimatePagination;\nexports.ITEM_TYPES = _ultimatePagination.ITEM_TYPES;","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, useTheme } from '@superset-ui/core';\nimport Icons, { IconType } from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\n\nexport interface CertifiedBadgeProps {\n  certifiedBy?: string;\n  details?: string;\n  size?: IconType['iconSize'];\n}\n\nfunction CertifiedBadge({\n  certifiedBy,\n  details,\n  size = 'l',\n}: CertifiedBadgeProps) {\n  const theme = useTheme();\n\n  return (\n    <Tooltip\n      id=\"certified-details-tooltip\"\n      title={\n        <>\n          {certifiedBy && (\n            <div>\n              <strong>{t('Certified by %s', certifiedBy)}</strong>\n            </div>\n          )}\n          <div>{details}</div>\n        </>\n      }\n    >\n      <Icons.Certified iconColor={theme.colors.primary.base} iconSize={size} />\n    </Tooltip>\n  );\n}\n\nexport default CertifiedBadge;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { memo, useEffect, useRef } from 'react';\nimport { isEqual } from 'lodash';\nimport { styled, t } from '@superset-ui/core';\nimport { useFilters, usePagination, useSortBy, useTable } from 'react-table';\nimport { Empty } from 'src/components';\nimport Pagination from 'src/components/Pagination';\nimport TableCollection from 'src/components/TableCollection';\nimport { SortByType, ServerPagination } from './types';\n\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport enum EmptyWrapperType {\n  Default = 'Default',\n  Small = 'Small',\n}\n\nexport interface TableViewProps {\n  columns: any[];\n  data: any[];\n  pageSize?: number;\n  totalCount?: number;\n  serverPagination?: boolean;\n  onServerPagination?: (args: ServerPagination) => void;\n  initialPageIndex?: number;\n  initialSortBy?: SortByType;\n  loading?: boolean;\n  withPagination?: boolean;\n  emptyWrapperType?: EmptyWrapperType;\n  noDataText?: string;\n  className?: string;\n  isPaginationSticky?: boolean;\n  showRowCount?: boolean;\n  scrollTable?: boolean;\n  scrollTopOnPagination?: boolean;\n  small?: boolean;\n  columnsForWrapText?: string[];\n}\n\nconst EmptyWrapper = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 40}px 0;\n`;\n\nconst TableViewStyles = styled.div<{\n  isPaginationSticky?: boolean;\n  scrollTable?: boolean;\n  small?: boolean;\n}>`\n  ${({ scrollTable, theme }) =>\n    scrollTable &&\n    `\n    flex: 1 1 auto;\n    margin-bottom: ${theme.gridUnit * 4}px;\n    overflow: auto;\n  `}\n\n  .table-row {\n    ${({ theme, small }) => !small && `height: ${theme.gridUnit * 11 - 1}px;`}\n\n    .table-cell {\n      ${({ theme, small }) =>\n        small &&\n        `\n        padding-top: ${theme.gridUnit + 1}px;\n        padding-bottom: ${theme.gridUnit + 1}px;\n        line-height: 1.45;\n      `}\n    }\n  }\n\n  th[role='columnheader'] {\n    z-index: 1;\n    border-bottom: ${({ theme }) =>\n      `${theme.gridUnit - 2}px solid ${theme.colors.grayscale.light2}`};\n    ${({ small }) => small && `padding-bottom: 0;`}\n  }\n`;\n\nconst PaginationStyles = styled.div<{\n  isPaginationSticky?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  ${({ isPaginationSticky }) =>\n    isPaginationSticky &&\n    `\n        position: sticky;\n        bottom: 0;\n        left: 0;\n    `};\n\n  .row-count-container {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nconst TableView = ({\n  columns,\n  data,\n  pageSize: initialPageSize,\n  totalCount = data.length,\n  initialPageIndex,\n  initialSortBy = [],\n  loading = false,\n  withPagination = true,\n  emptyWrapperType = EmptyWrapperType.Default,\n  noDataText,\n  showRowCount = true,\n  serverPagination = false,\n  columnsForWrapText,\n  onServerPagination = () => {},\n  scrollTopOnPagination = false,\n  ...props\n}: TableViewProps) => {\n  const initialState = {\n    pageSize: initialPageSize ?? DEFAULT_PAGE_SIZE,\n    pageIndex: initialPageIndex ?? 0,\n    sortBy: initialSortBy,\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    rows,\n    prepareRow,\n    pageCount,\n    gotoPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState,\n      manualPagination: serverPagination,\n      manualSortBy: serverPagination,\n      pageCount: Math.ceil(totalCount / initialState.pageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n  );\n\n  const content = withPagination ? page : rows;\n\n  let EmptyWrapperComponent;\n  switch (emptyWrapperType) {\n    case EmptyWrapperType.Small:\n      EmptyWrapperComponent = ({ children }: any) => <>{children}</>;\n      break;\n    case EmptyWrapperType.Default:\n    default:\n      EmptyWrapperComponent = ({ children }: any) => (\n        <EmptyWrapper>{children}</EmptyWrapper>\n      );\n  }\n\n  const isEmpty = !loading && content.length === 0;\n  const hasPagination = pageCount > 1 && withPagination;\n  const tableRef = useRef<HTMLTableElement>(null);\n  const handleGotoPage = (p: number) => {\n    if (scrollTopOnPagination) {\n      tableRef?.current?.scroll(0, 0);\n    }\n    gotoPage(p);\n  };\n\n  useEffect(() => {\n    if (serverPagination && pageIndex !== initialState.pageIndex) {\n      onServerPagination({\n        pageIndex,\n      });\n    }\n  }, [pageIndex]);\n\n  useEffect(() => {\n    if (serverPagination && !isEqual(sortBy, initialState.sortBy)) {\n      onServerPagination({\n        pageIndex: 0,\n        sortBy,\n      });\n    }\n  }, [sortBy]);\n\n  return (\n    <>\n      <TableViewStyles {...props} ref={tableRef}>\n        <TableCollection\n          getTableProps={getTableProps}\n          getTableBodyProps={getTableBodyProps}\n          prepareRow={prepareRow}\n          headerGroups={headerGroups}\n          rows={content}\n          columns={columns}\n          loading={loading}\n          columnsForWrapText={columnsForWrapText}\n        />\n        {isEmpty && (\n          <EmptyWrapperComponent>\n            {noDataText ? (\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={noDataText}\n              />\n            ) : (\n              <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n            )}\n          </EmptyWrapperComponent>\n        )}\n      </TableViewStyles>\n      {hasPagination && (\n        <PaginationStyles\n          className=\"pagination-container\"\n          isPaginationSticky={props.isPaginationSticky}\n        >\n          <Pagination\n            totalPages={pageCount || 0}\n            currentPage={pageCount ? pageIndex + 1 : 0}\n            onChange={(p: number) => handleGotoPage(p - 1)}\n            hideFirstAndLastPageLinks\n          />\n          {showRowCount && (\n            <div className=\"row-count-container\">\n              {!loading &&\n                t(\n                  '%s-%s of %s',\n                  pageSize * pageIndex + (page.length && 1),\n                  pageSize * pageIndex + page.length,\n                  totalCount,\n                )}\n            </div>\n          )}\n        </PaginationStyles>\n      )}\n    </>\n  );\n};\n\nexport default memo(TableView);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { FunctionComponent, useEffect, useState, ChangeEvent } from 'react';\nimport { FormLabel } from 'src/components/Form';\nimport { Input } from 'src/components/Input';\nimport Modal from 'src/components/Modal';\nimport Dataset from 'src/types/Dataset';\n\ninterface DuplicateDatasetModalProps {\n  dataset: Dataset | null;\n  onHide: () => void;\n  onDuplicate: (newDatasetName: string) => void;\n}\n\nconst DuplicateDatasetModal: FunctionComponent<DuplicateDatasetModalProps> = ({\n  dataset,\n  onHide,\n  onDuplicate,\n}) => {\n  const [show, setShow] = useState<boolean>(false);\n  const [disableSave, setDisableSave] = useState<boolean>(false);\n  const [newDuplicateDatasetName, setNewDuplicateDatasetName] =\n    useState<string>('');\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const targetValue = event.target.value ?? '';\n    setNewDuplicateDatasetName(targetValue);\n    setDisableSave(targetValue === '');\n  };\n\n  const duplicateDataset = () => {\n    onDuplicate(newDuplicateDatasetName);\n  };\n\n  useEffect(() => {\n    setNewDuplicateDatasetName('');\n    setShow(dataset !== null);\n  }, [dataset]);\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      title={t('Duplicate dataset')}\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={duplicateDataset}\n      primaryButtonName={t('Duplicate')}\n    >\n      <FormLabel htmlFor=\"duplicate\">{t('New dataset name')}</FormLabel>\n      <Input\n        data-test=\"duplicate-modal-input\"\n        type=\"text\"\n        id=\"duplicate\"\n        autoComplete=\"off\"\n        value={newDuplicateDatasetName}\n        onChange={onChange}\n        onPressEnter={duplicateDataset}\n      />\n    </Modal>\n  );\n};\n\nexport default DuplicateDatasetModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  getExtensionsRegistry,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport { FunctionComponent, useState, useMemo, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport rison from 'rison';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n} from 'src/views/CRUD/utils';\nimport { ColumnObject } from 'src/features/datasets/types';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { DatasourceModal } from 'src/components/Datasource';\nimport DeleteModal from 'src/components/DeleteModal';\nimport handleResourceExport from 'src/utils/export';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport Loading from 'src/components/Loading';\nimport SubMenu, { SubMenuProps, ButtonProps } from 'src/features/home/SubMenu';\nimport Owner from 'src/types/Owner';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport FacePile from 'src/components/FacePile';\nimport CertifiedBadge from 'src/components/CertifiedBadge';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport WarningIconWithTooltip from 'src/components/WarningIconWithTooltip';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport { GenericLink } from 'src/components/GenericLink/GenericLink';\n\nimport {\n  PAGE_SIZE,\n  SORT_BY,\n  PASSWORDS_NEEDED_MESSAGE,\n  CONFIRM_OVERWRITE_MESSAGE,\n} from 'src/features/datasets/constants';\nimport DuplicateDatasetModal from 'src/features/datasets/DuplicateDatasetModal';\nimport { useSelector } from 'react-redux';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\nconst DatasetDeleteRelatedExtension = extensionsRegistry.get(\n  'dataset.delete.related',\n);\n\nconst FlexRowContainer = styled.div`\n  align-items: center;\n  display: flex;\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst Actions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n\n  .disabled {\n    svg,\n    i {\n      &:hover {\n        path {\n          fill: ${({ theme }) => theme.colors.grayscale.light1};\n        }\n      }\n    }\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    .ant-menu-item:hover {\n      color: ${({ theme }) => theme.colors.grayscale.light1};\n      cursor: default;\n    }\n    &::after {\n      color: ${({ theme }) => theme.colors.grayscale.light1};\n    }\n  }\n`;\n\ntype Dataset = {\n  changed_by_name: string;\n  changed_by: string;\n  changed_on_delta_humanized: string;\n  database: {\n    id: string;\n    database_name: string;\n  };\n  kind: string;\n  explore_url: string;\n  id: number;\n  owners: Array<Owner>;\n  schema: string;\n  table_name: string;\n};\n\ninterface VirtualDataset extends Dataset {\n  extra: Record<string, any>;\n  sql: string;\n}\n\ninterface DatasetListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst DatasetList: FunctionComponent<DatasetListProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}) => {\n  const history = useHistory();\n  const {\n    state: {\n      loading,\n      resourceCount: datasetCount,\n      resourceCollection: datasets,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Dataset>('dataset', t('dataset'), addDangerToast);\n\n  const [datasetCurrentlyDeleting, setDatasetCurrentlyDeleting] = useState<\n    (Dataset & { chart_count: number; dashboard_count: number }) | null\n  >(null);\n\n  const [datasetCurrentlyEditing, setDatasetCurrentlyEditing] =\n    useState<Dataset | null>(null);\n\n  const [datasetCurrentlyDuplicating, setDatasetCurrentlyDuplicating] =\n    useState<VirtualDataset | null>(null);\n\n  const [importingDataset, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n\n  const PREVENT_UNSAFE_DEFAULT_URLS_ON_DATASET = useSelector<any, boolean>(\n    state =>\n      state.common?.conf?.PREVENT_UNSAFE_DEFAULT_URLS_ON_DATASET || false,\n  );\n\n  const openDatasetImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeDatasetImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleDatasetImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Dataset imported'));\n  };\n\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n  const canDuplicate = hasPerm('can_duplicate');\n  const canExport = hasPerm('can_export');\n\n  const initialSort = SORT_BY;\n\n  const openDatasetEditModal = useCallback(\n    ({ id }: Dataset) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/dataset/${id}`,\n      })\n        .then(({ json = {} }) => {\n          const addCertificationFields = json.result.columns.map(\n            (column: ColumnObject) => {\n              const {\n                certification: { details = '', certified_by = '' } = {},\n              } = JSON.parse(column.extra || '{}') || {};\n              return {\n                ...column,\n                certification_details: details || '',\n                certified_by: certified_by || '',\n                is_certified: details || certified_by,\n              };\n            },\n          );\n          // eslint-disable-next-line no-param-reassign\n          json.result.columns = [...addCertificationFields];\n          setDatasetCurrentlyEditing(json.result);\n        })\n        .catch(() => {\n          addDangerToast(\n            t('An error occurred while fetching dataset related data'),\n          );\n        });\n    },\n    [addDangerToast],\n  );\n\n  const openDatasetDeleteModal = (dataset: Dataset) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/dataset/${dataset.id}/related_objects`,\n    })\n      .then(({ json = {} }) => {\n        setDatasetCurrentlyDeleting({\n          ...dataset,\n          chart_count: json.charts.count,\n          dashboard_count: json.dashboards.count,\n        });\n      })\n      .catch(\n        createErrorHandler(errMsg =>\n          t(\n            'An error occurred while fetching dataset related data: %s',\n            errMsg,\n          ),\n        ),\n      );\n\n  const openDatasetDuplicateModal = (dataset: VirtualDataset) => {\n    setDatasetCurrentlyDuplicating(dataset);\n  };\n\n  const handleBulkDatasetExport = (datasetsToExport: Dataset[]) => {\n    const ids = datasetsToExport.map(({ id }) => id);\n    handleResourceExport('dataset', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { kind },\n          },\n        }: any) => {\n          if (kind === 'physical') {\n            return (\n              <Tooltip\n                id=\"physical-dataset-tooltip\"\n                title={t('Physical dataset')}\n              >\n                <Icons.DatasetPhysical />\n              </Tooltip>\n            );\n          }\n\n          return (\n            <Tooltip id=\"virtual-dataset-tooltip\" title={t('Virtual dataset')}>\n              <Icons.DatasetVirtual />\n            </Tooltip>\n          );\n        },\n        accessor: 'kind_icon',\n        disableSortBy: true,\n        size: 'xs',\n        id: 'id',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              extra,\n              table_name: datasetTitle,\n              description,\n              explore_url: exploreURL,\n            },\n          },\n        }: any) => {\n          let titleLink: JSX.Element;\n          if (PREVENT_UNSAFE_DEFAULT_URLS_ON_DATASET) {\n            titleLink = (\n              <Link data-test=\"internal-link\" to={exploreURL}>\n                {datasetTitle}\n              </Link>\n            );\n          } else {\n            titleLink = (\n              // exploreUrl can be a link to Explore or an external link\n              // in the first case use SPA routing, else use HTML anchor\n              <GenericLink to={exploreURL}>{datasetTitle}</GenericLink>\n            );\n          }\n          try {\n            const parsedExtra = JSON.parse(extra);\n            return (\n              <FlexRowContainer>\n                {parsedExtra?.certification && (\n                  <CertifiedBadge\n                    certifiedBy={parsedExtra.certification.certified_by}\n                    details={parsedExtra.certification.details}\n                    size=\"l\"\n                  />\n                )}\n                {parsedExtra?.warning_markdown && (\n                  <WarningIconWithTooltip\n                    warningMarkdown={parsedExtra.warning_markdown}\n                    size=\"l\"\n                  />\n                )}\n                {titleLink}\n                {description && <InfoTooltip tooltip={description} />}\n              </FlexRowContainer>\n            );\n          } catch {\n            return titleLink;\n          }\n        },\n        Header: t('Name'),\n        accessor: 'table_name',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { kind },\n          },\n        }: any) => (kind === 'physical' ? t('Physical') : t('Virtual')),\n        Header: t('Type'),\n        accessor: 'kind',\n        disableSortBy: true,\n        size: 'md',\n      },\n      {\n        Header: t('Database'),\n        accessor: 'database.database_name',\n        size: 'lg',\n      },\n      {\n        Header: t('Schema'),\n        accessor: 'schema',\n        size: 'lg',\n      },\n      {\n        accessor: 'database',\n        disableSortBy: true,\n        hidden: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        id: 'owners',\n        disableSortBy: true,\n        size: 'lg',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        accessor: 'sql',\n        hidden: true,\n        disableSortBy: true,\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          // Verify owner or isAdmin\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          const handleEdit = () => openDatasetEditModal(original);\n          const handleDelete = () => openDatasetDeleteModal(original);\n          const handleExport = () => handleBulkDatasetExport([original]);\n          const handleDuplicate = () => openDatasetDuplicateModal(original);\n          if (!canEdit && !canDelete && !canExport && !canDuplicate) {\n            return null;\n          }\n          return (\n            <Actions className=\"actions\">\n              {canDelete && (\n                <Tooltip\n                  id=\"delete-action-tooltip\"\n                  title={t('Delete')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleDelete}\n                  >\n                    <Icons.Trash />\n                  </span>\n                </Tooltip>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={\n                    allowEdit\n                      ? t('Edit')\n                      : t(\n                          'You must be a dataset owner in order to edit. Please reach out to a dataset owner to request modifications or edit access.',\n                        )\n                  }\n                  placement=\"bottomRight\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className={allowEdit ? 'action-button' : 'disabled'}\n                    onClick={allowEdit ? handleEdit : undefined}\n                  >\n                    <Icons.EditAlt />\n                  </span>\n                </Tooltip>\n              )}\n              {canDuplicate && original.kind === 'virtual' && (\n                <Tooltip\n                  id=\"duplicate-action-tooltop\"\n                  title={t('Duplicate')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleDuplicate}\n                  >\n                    <Icons.Copy />\n                  </span>\n                </Tooltip>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete && !canDuplicate,\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [canEdit, canDelete, canExport, openDatasetEditModal, canDuplicate, user],\n  );\n\n  const filterTypes: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'table_name',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Type'),\n        key: 'sql',\n        id: 'sql',\n        input: 'select',\n        operator: FilterOperator.DatasetIsNullOrEmpty,\n        unfilteredLabel: 'All',\n        selects: [\n          { label: t('Virtual'), value: false },\n          { label: t('Physical'), value: true },\n        ],\n      },\n      {\n        Header: t('Database'),\n        key: 'database',\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'dataset',\n          'database',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching datasets: %s', errMsg),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Schema'),\n        key: 'schema',\n        id: 'schema',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'dataset',\n          'schema',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching schema values: %s', errMsg),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.RelationManyMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'dataset',\n          'owners',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset owner values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Certified'),\n        key: 'certified',\n        id: 'id',\n        urlDisplay: 'certified',\n        input: 'select',\n        operator: FilterOperator.DatasetIsCertified,\n        unfilteredLabel: t('Any'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'dataset',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [user],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Datasets',\n    name: t('Datasets'),\n  };\n\n  const buttonArr: Array<ButtonProps> = [];\n\n  if (canDelete || canExport) {\n    buttonArr.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  if (canCreate) {\n    buttonArr.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Dataset')}{' '}\n        </>\n      ),\n      onClick: () => {\n        history.push('/dataset/add/');\n      },\n      buttonStyle: 'primary',\n    });\n\n    buttonArr.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import datasets')}\n          placement=\"bottomRight\"\n        >\n          <Icons.Import data-test=\"import-button\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openDatasetImportModal,\n    });\n  }\n\n  menuData.buttons = buttonArr;\n\n  const closeDatasetDeleteModal = () => {\n    setDatasetCurrentlyDeleting(null);\n  };\n\n  const closeDatasetEditModal = () => {\n    setDatasetCurrentlyEditing(null);\n  };\n\n  const closeDatasetDuplicateModal = () => {\n    setDatasetCurrentlyDuplicating(null);\n  };\n\n  const handleDatasetDelete = ({ id, table_name: tableName }: Dataset) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/dataset/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setDatasetCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', tableName));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', tableName, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkDatasetDelete = (datasetsToDelete: Dataset[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/dataset/?q=${rison.encode(\n        datasetsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected datasets: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleDatasetDuplicate = (newDatasetName: string) => {\n    if (datasetCurrentlyDuplicating === null) {\n      addDangerToast(t('There was an issue duplicating the dataset.'));\n    }\n\n    SupersetClient.post({\n      endpoint: `/api/v1/dataset/duplicate`,\n      jsonPayload: {\n        base_model_id: datasetCurrentlyDuplicating?.id,\n        table_name: newDatasetName,\n      },\n    }).then(\n      () => {\n        setDatasetCurrentlyDuplicating(null);\n        refreshData();\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue duplicating the selected datasets: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {datasetCurrentlyDeleting && (\n        <DeleteModal\n          description={\n            <>\n              <p>\n                {t(\n                  'The dataset %s is linked to %s charts that appear on %s dashboards. Are you sure you want to continue? Deleting the dataset will break those objects.',\n                  datasetCurrentlyDeleting.table_name,\n                  datasetCurrentlyDeleting.chart_count,\n                  datasetCurrentlyDeleting.dashboard_count,\n                )}\n              </p>\n              {DatasetDeleteRelatedExtension && (\n                <DatasetDeleteRelatedExtension\n                  dataset={datasetCurrentlyDeleting}\n                />\n              )}\n            </>\n          }\n          onConfirm={() => {\n            if (datasetCurrentlyDeleting) {\n              handleDatasetDelete(datasetCurrentlyDeleting);\n            }\n          }}\n          onHide={closeDatasetDeleteModal}\n          open\n          title={t('Delete Dataset?')}\n        />\n      )}\n      {datasetCurrentlyEditing && (\n        <DatasourceModal\n          datasource={datasetCurrentlyEditing}\n          onDatasourceSave={refreshData}\n          onHide={closeDatasetEditModal}\n          show\n        />\n      )}\n      <DuplicateDatasetModal\n        dataset={datasetCurrentlyDuplicating}\n        onHide={closeDatasetDuplicateModal}\n        onDuplicate={handleDatasetDuplicate}\n      />\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected datasets?',\n        )}\n        onConfirm={handleBulkDatasetDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkDatasetExport,\n            });\n          }\n          return (\n            <ListView<Dataset>\n              className=\"dataset-list-view\"\n              columns={columns}\n              data={datasets}\n              count={datasetCount}\n              pageSize={PAGE_SIZE}\n              fetchData={fetchData}\n              filters={filterTypes}\n              loading={loading}\n              initialSort={initialSort}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              refreshData={refreshData}\n              renderBulkSelectCopy={selected => {\n                const { virtualCount, physicalCount } = selected.reduce(\n                  (acc, e) => {\n                    if (e.original.kind === 'physical') acc.physicalCount += 1;\n                    else if (e.original.kind === 'virtual') {\n                      acc.virtualCount += 1;\n                    }\n                    return acc;\n                  },\n                  { virtualCount: 0, physicalCount: 0 },\n                );\n\n                if (!selected.length) {\n                  return t('0 Selected');\n                }\n                if (virtualCount && !physicalCount) {\n                  return t(\n                    '%s Selected (Virtual)',\n                    selected.length,\n                    virtualCount,\n                  );\n                }\n                if (physicalCount && !virtualCount) {\n                  return t(\n                    '%s Selected (Physical)',\n                    selected.length,\n                    physicalCount,\n                  );\n                }\n\n                return t(\n                  '%s Selected (%s Physical, %s Virtual)',\n                  selected.length,\n                  physicalCount,\n                  virtualCount,\n                );\n              }}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"dataset\"\n        resourceLabel={t('dataset')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleDatasetImport}\n        show={importingDataset}\n        onHide={closeDatasetImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n};\n\nexport default withToasts(DatasetList);\n","\"use strict\";\nexports.ITEM_TYPES = {\n    PAGE: 'PAGE',\n    ELLIPSIS: 'ELLIPSIS',\n    FIRST_PAGE_LINK: 'FIRST_PAGE_LINK',\n    PREVIOUS_PAGE_LINK: 'PREVIOUS_PAGE_LINK',\n    NEXT_PAGE_LINK: 'NEXT_PAGE_LINK',\n    LAST_PAGE_LINK: 'LAST_PAGE_LINK'\n};\nexports.ITEM_KEYS = {\n    FIRST_ELLIPSIS: -1,\n    SECOND_ELLIPSIS: -2,\n    FIRST_PAGE_LINK: -3,\n    PREVIOUS_PAGE_LINK: -4,\n    NEXT_PAGE_LINK: -5,\n    LAST_PAGE_LINK: -6\n};\n//# sourceMappingURL=ultimate-pagination-constants.js.map","\"use strict\";\nvar ultimate_pagination_constants_1 = require(\"./ultimate-pagination-constants\");\nexports.createFirstEllipsis = function (pageNumber) {\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.ELLIPSIS,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.FIRST_ELLIPSIS,\n        value: pageNumber,\n        isActive: false\n    };\n};\nexports.createSecondEllipsis = function (pageNumber) {\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.ELLIPSIS,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.SECOND_ELLIPSIS,\n        value: pageNumber,\n        isActive: false\n    };\n};\nexports.createFirstPageLink = function (options) {\n    var currentPage = options.currentPage;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.FIRST_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.FIRST_PAGE_LINK,\n        value: 1,\n        isActive: currentPage === 1\n    };\n};\nexports.createPreviousPageLink = function (options) {\n    var currentPage = options.currentPage;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.PREVIOUS_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.PREVIOUS_PAGE_LINK,\n        value: Math.max(1, currentPage - 1),\n        isActive: currentPage === 1\n    };\n};\nexports.createNextPageLink = function (options) {\n    var currentPage = options.currentPage, totalPages = options.totalPages;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.NEXT_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.NEXT_PAGE_LINK,\n        value: Math.min(totalPages, currentPage + 1),\n        isActive: currentPage === totalPages\n    };\n};\nexports.createLastPageLink = function (options) {\n    var currentPage = options.currentPage, totalPages = options.totalPages;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.LAST_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.LAST_PAGE_LINK,\n        value: totalPages,\n        isActive: currentPage === totalPages\n    };\n};\nexports.createPageFunctionFactory = function (options) {\n    var currentPage = options.currentPage;\n    return function (pageNumber) {\n        return {\n            type: ultimate_pagination_constants_1.ITEM_TYPES.PAGE,\n            key: pageNumber,\n            value: pageNumber,\n            isActive: pageNumber === currentPage\n        };\n    };\n};\n//# sourceMappingURL=ultimate-pagination-item-factories.js.map","\"use strict\";\nfunction createRange(start, end) {\n    var range = [];\n    for (var i = start; i <= end; i++) {\n        range.push(i);\n    }\n    return range;\n}\nexports.createRange = createRange;\n//# sourceMappingURL=ultimate-pagination-utils.js.map","\"use strict\";\nvar ultimate_pagination_utils_1 = require(\"./ultimate-pagination-utils\");\nvar ultimate_pagination_item_factories_1 = require(\"./ultimate-pagination-item-factories\");\nfunction getPaginationModel(options) {\n    if (options == null) {\n        throw new Error('getPaginationModel(): options object should be a passed');\n    }\n    var totalPages = Number(options.totalPages);\n    if (isNaN(totalPages)) {\n        throw new Error('getPaginationModel(): totalPages should be a number');\n    }\n    if (totalPages < 0) {\n        throw new Error('getPaginationModel(): totalPages shouldn\\'t be a negative number');\n    }\n    var currentPage = Number(options.currentPage);\n    if (isNaN(currentPage)) {\n        throw new Error('getPaginationModel(): currentPage should be a number');\n    }\n    if (currentPage < 0) {\n        throw new Error('getPaginationModel(): currentPage shouldn\\'t be a negative number');\n    }\n    if (currentPage > totalPages) {\n        throw new Error('getPaginationModel(): currentPage shouldn\\'t be greater than totalPages');\n    }\n    var boundaryPagesRange = (options.boundaryPagesRange == null ? 1 : Number(options.boundaryPagesRange));\n    if (isNaN(boundaryPagesRange)) {\n        throw new Error('getPaginationModel(): boundaryPagesRange should be a number');\n    }\n    if (boundaryPagesRange < 0) {\n        throw new Error('getPaginationModel(): boundaryPagesRange shouldn\\'t be a negative number');\n    }\n    var siblingPagesRange = (options.siblingPagesRange == null ? 1 : Number(options.siblingPagesRange));\n    if (isNaN(siblingPagesRange)) {\n        throw new Error('getPaginationModel(): siblingPagesRange should be a number');\n    }\n    if (siblingPagesRange < 0) {\n        throw new Error('getPaginationModel(): siblingPagesRange shouldn\\'t be a negative number');\n    }\n    var hidePreviousAndNextPageLinks = Boolean(options.hidePreviousAndNextPageLinks);\n    var hideFirstAndLastPageLinks = Boolean(options.hideFirstAndLastPageLinks);\n    var hideEllipsis = Boolean(options.hideEllipsis);\n    var ellipsisSize = (hideEllipsis ? 0 : 1);\n    var paginationModel = [];\n    var createPage = ultimate_pagination_item_factories_1.createPageFunctionFactory(options);\n    if (!hideFirstAndLastPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createFirstPageLink(options));\n    }\n    if (!hidePreviousAndNextPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createPreviousPageLink(options));\n    }\n    // Simplify generation of pages if number of available items is equal or greater than total pages to show\n    if (1 + 2 * ellipsisSize + 2 * siblingPagesRange + 2 * boundaryPagesRange >= totalPages) {\n        var allPages = ultimate_pagination_utils_1.createRange(1, totalPages).map(createPage);\n        paginationModel.push.apply(paginationModel, allPages);\n    }\n    else {\n        // Calculate group of first pages\n        var firstPagesStart = 1;\n        var firstPagesEnd = boundaryPagesRange;\n        var firstPages = ultimate_pagination_utils_1.createRange(firstPagesStart, firstPagesEnd).map(createPage);\n        // Calculate group of last pages\n        var lastPagesStart = totalPages + 1 - boundaryPagesRange;\n        var lastPagesEnd = totalPages;\n        var lastPages = ultimate_pagination_utils_1.createRange(lastPagesStart, lastPagesEnd).map(createPage);\n        // Calculate group of main pages\n        var mainPagesStart = Math.min(Math.max(currentPage - siblingPagesRange, firstPagesEnd + ellipsisSize + 1), lastPagesStart - ellipsisSize - 2 * siblingPagesRange - 1);\n        var mainPagesEnd = mainPagesStart + 2 * siblingPagesRange;\n        var mainPages = ultimate_pagination_utils_1.createRange(mainPagesStart, mainPagesEnd).map(createPage);\n        // Add group of first pages\n        paginationModel.push.apply(paginationModel, firstPages);\n        if (!hideEllipsis) {\n            // Calculate and add ellipsis before group of main pages\n            var firstEllipsisPageNumber = mainPagesStart - 1;\n            var showPageInsteadOfFirstEllipsis = (firstEllipsisPageNumber === firstPagesEnd + 1);\n            var createFirstEllipsisOrPage = showPageInsteadOfFirstEllipsis ? createPage : ultimate_pagination_item_factories_1.createFirstEllipsis;\n            var firstEllipsis = createFirstEllipsisOrPage(firstEllipsisPageNumber);\n            paginationModel.push(firstEllipsis);\n        }\n        // Add group of main pages\n        paginationModel.push.apply(paginationModel, mainPages);\n        if (!hideEllipsis) {\n            // Calculate and add ellipsis after group of main pages\n            var secondEllipsisPageNumber = mainPagesEnd + 1;\n            var showPageInsteadOfSecondEllipsis = (secondEllipsisPageNumber === lastPagesStart - 1);\n            var createSecondEllipsisOrPage = showPageInsteadOfSecondEllipsis ? createPage : ultimate_pagination_item_factories_1.createSecondEllipsis;\n            var secondEllipsis = createSecondEllipsisOrPage(secondEllipsisPageNumber);\n            paginationModel.push(secondEllipsis);\n        }\n        // Add group of last pages\n        paginationModel.push.apply(paginationModel, lastPages);\n    }\n    if (!hidePreviousAndNextPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createNextPageLink(options));\n    }\n    if (!hideFirstAndLastPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createLastPageLink(options));\n    }\n    return paginationModel;\n}\nexports.getPaginationModel = getPaginationModel;\nvar ultimate_pagination_constants_1 = require(\"./ultimate-pagination-constants\");\nexports.ITEM_TYPES = ultimate_pagination_constants_1.ITEM_TYPES;\nexports.ITEM_KEYS = ultimate_pagination_constants_1.ITEM_KEYS;\n//# sourceMappingURL=ultimate-pagination.js.map"],"names":["exports","undefined","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react2","_interopRequireDefault","_propTypes2","_ultimatePagination","obj","__esModule","default","_ref2","itemTypeToComponent","_ref2$WrapperComponen","WrapperComponent","UltimatePaginationComponent","props","currentPage","totalPages","boundaryPagesRange","siblingPagesRange","hideEllipsis","hidePreviousAndNextPageLinks","hideFirstAndLastPageLinks","onChange","disabled","restProps","keys","indexOf","_objectWithoutProperties","paginationModel","getPaginationModel","renderItemComponent","_ref","value","isDisabled","ItemComponent","type","onItemClick","createElement","onClick","renderItemComponentFunctionFactory","map","itemModel","propTypes","number","isRequired","bool","func","ITEM_TYPES","certifiedBy","details","size","theme","useTheme","_jsx","Tooltip","id","title","_jsxs","_Fragment","children","t","Icons","Certified","iconColor","colors","primary","base","iconSize","EmptyWrapperType","EmptyWrapper","styled","div","gridUnit","TableViewStyles","scrollTable","small","grayscale","light2","PaginationStyles","light5","isPaginationSticky","TableView","columns","data","pageSize","initialPageSize","totalCount","initialPageIndex","initialSortBy","loading","withPagination","emptyWrapperType","Default","noDataText","showRowCount","serverPagination","columnsForWrapText","onServerPagination","scrollTopOnPagination","initialState","pageIndex","sortBy","getTableProps","getTableBodyProps","headerGroups","page","rows","prepareRow","pageCount","gotoPage","state","useTable","manualPagination","manualSortBy","Math","ceil","useFilters","useSortBy","usePagination","content","EmptyWrapperComponent","Small","isEmpty","hasPagination","tableRef","useRef","useEffect","_isEqual","ref","TableCollection","Empty","image","PRESENTED_IMAGE_SIMPLE","description","className","Pagination","p","handleGotoPage","_tableRef$current","current","scroll","memo","DuplicateDatasetModal","dataset","onHide","onDuplicate","show","setShow","useState","disableSave","setDisableSave","newDuplicateDatasetName","setNewDuplicateDatasetName","duplicateDataset","Modal","disablePrimaryButton","onHandledPrimaryAction","primaryButtonName","FormLabel","htmlFor","Input","autoComplete","event","_event$target$value","targetValue","onPressEnter","DatasetDeleteRelatedExtension","getExtensionsRegistry","get","FlexRowContainer","Actions","light1","withToasts","DatasetList","addDangerToast","addSuccessToast","user","history","useHistory","resourceCount","datasetCount","resourceCollection","datasets","bulkSelectEnabled","hasPerm","fetchData","toggleBulkSelect","refreshData","useListViewResource","datasetCurrentlyDeleting","setDatasetCurrentlyDeleting","datasetCurrentlyEditing","setDatasetCurrentlyEditing","datasetCurrentlyDuplicating","setDatasetCurrentlyDuplicating","importingDataset","showImportModal","passwordFields","setPasswordFields","preparingExport","setPreparingExport","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","PREVENT_UNSAFE_DEFAULT_URLS_ON_DATASET","useSelector","_state$common","_state$common$conf","common","conf","canEdit","canDelete","canCreate","canDuplicate","canExport","initialSort","SORT_BY","openDatasetEditModal","useCallback","SupersetClient","endpoint","then","json","addCertificationFields","result","column","certification","certified_by","JSON","parse","extra","certification_details","is_certified","catch","handleBulkDatasetExport","datasetsToExport","ids","handleResourceExport","useMemo","Cell","row","original","kind","DatasetPhysical","DatasetVirtual","accessor","disableSortBy","table_name","datasetTitle","explore_url","exploreURL","titleLink","Link","to","GenericLink","parsedExtra","CertifiedBadge","warning_markdown","WarningIconWithTooltip","warningMarkdown","InfoTooltip","tooltip","Header","hidden","owners","FacePile","users","changed_on_delta_humanized","changedOn","changed_by","changedBy","ModifiedInfo","date","allowEdit","o","includes","userId","isUserAdmin","placement","role","tabIndex","handleDelete","openDatasetDeleteModal","chart_count","charts","count","dashboard_count","dashboards","createErrorHandler","errMsg","Trash","handleExport","Share","handleEdit","EditAlt","handleDuplicate","Copy","QueryObjectColumns","ChangedBy","filterTypes","input","operator","FilterOperator","Contains","DatasetIsNullOrEmpty","unfilteredLabel","selects","label","RelationOneMany","fetchSelects","createFetchRelated","paginate","Equals","createFetchDistinct","RelationManyMany","urlDisplay","DatasetIsCertified","menuData","activeChild","name","buttonArr","push","buttonStyle","Import","openDatasetImportModal","buttons","SubMenu","DeleteModal","onConfirm","handleDatasetDelete","tableName","delete","closeDatasetDeleteModal","open","DatasourceModal","datasource","onDatasourceSave","closeDatasetEditModal","closeDatasetDuplicateModal","newDatasetName","post","jsonPayload","base_model_id","ConfirmStatusChange","datasetsToDelete","rison","message","confirmDelete","bulkActions","onSelect","ListView","PAGE_SIZE","filters","disableBulkSelect","renderBulkSelectCopy","selected","virtualCount","physicalCount","reduce","acc","e","ImportModelsModal","resourceName","resourceLabel","passwordsNeededMessage","PASSWORDS_NEEDED_MESSAGE","confirmOverwriteMessage","CONFIRM_OVERWRITE_MESSAGE","onModelImport","handleDatasetImport","closeDatasetImportModal","Loading","PAGE","ELLIPSIS","FIRST_PAGE_LINK","PREVIOUS_PAGE_LINK","NEXT_PAGE_LINK","LAST_PAGE_LINK","ITEM_KEYS","FIRST_ELLIPSIS","SECOND_ELLIPSIS","ultimate_pagination_constants_1","createFirstEllipsis","pageNumber","isActive","createSecondEllipsis","createFirstPageLink","options","createPreviousPageLink","max","createNextPageLink","min","createLastPageLink","createPageFunctionFactory","createRange","start","end","range","ultimate_pagination_utils_1","ultimate_pagination_item_factories_1","Error","Number","isNaN","Boolean","ellipsisSize","createPage","allPages","apply","firstPagesEnd","firstPages","lastPagesStart","lastPagesEnd","lastPages","mainPagesStart","mainPagesEnd","mainPages","firstEllipsisPageNumber","firstEllipsis","secondEllipsisPageNumber","secondEllipsis"],"sourceRoot":""}