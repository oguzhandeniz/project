{"version":3,"file":"a49d718b1003b5072e2a.chunk.js","mappings":"iHA2CO,IAAKA,EAuFAC,EAQAC,EAqBAC,E,oCApHZ,SAAYH,GACVA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACD,CAJD,CAAYA,IAAAA,EAAwB,KAuFpC,SAAYC,GACVA,EAAA,kBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,gBACD,CAND,CAAYA,IAAAA,EAAU,KAQtB,SAAYC,GACVA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACD,CAJD,CAAYA,IAAAA,EAAiB,KAqB7B,SAAYC,GACVA,EAAA,yBACAA,EAAA,yBACAA,EAAA,8BACAA,EAAA,2BACAA,EAAA,kCACD,CAND,CAAYA,IAAAA,EAAQ,I,kOC5HpB,MAEMC,EAAeC,EAAAA,GAAOC,GAAG;IAC3B,EAAGC,WAAYC,EAAAA,EAAG;;;;;;qBAMgB,EAAjBD,EAAME;mBACRF,EAAMG,WAAWC,MAAMC;qBACrBL,EAAMG,WAAWG,QAAQC;;;;EAgK9C,GAAeC,EAAAA,EAAAA,KApJf,UAAsB,eACpBC,EAAc,gBACdC,EAAe,gBACfC,IAEA,MAAM,QAAEC,IAAiBC,EAAAA,EAAAA,OAEvBC,OAAO,QAAEC,EAASC,cAAeC,EAAUC,mBAAoBC,GAAM,UACrEC,IACEC,EAAAA,EAAAA,IACF,UAAUT,SACVU,EAAAA,EAAAA,GAAE,OACFb,GACA,IAGAK,OAASC,QAASQ,EAAcC,SAAUC,GAAe,cACzDC,IACEC,EAAAA,EAAAA,IACF,UACAL,EAAAA,EAAAA,GAAE,WACFb,IAGFmB,EAAAA,EAAAA,YAAU,KACQ,OAAZhB,GAAqBW,GACvBG,EAAcd,E,GAEf,CAACA,IAEJ,MACMiB,GAAUC,EAAAA,EAAAA,UACd,IAAM,CACJ,CACEC,KAAMA,EACJC,KACEC,UAAYnB,cAGdoB,EAAAA,EAAAA,IAACC,EAAAA,EAAe,CAACrB,MAAOA,EAAOH,gBAAiBA,IAElDyB,SAAU,QACVC,QAAQf,EAAAA,EAAAA,GAAE,SACVgB,KAAM,KACNC,eAAe,GAEjB,CACER,KAAMA,EACJC,KACEC,UAAYO,KAAMC,OAEVA,EAAcA,EAAYC,MAAM,EAAG,GAAK,OACpDN,SAAU,OACVC,QAAQf,EAAAA,EAAAA,GAAE,gBACVgB,KAAM,KACNC,eAAe,GAEjB,CACER,KAAMA,EACJC,KACEC,UAAYU,eAAgBC,OAG9BC,IAAO,IAAIC,KAAKF,IAAgBG,OAAO,yBACzCX,SAAU,iBACVC,QAAQf,EAAAA,EAAAA,GAAE,uBAEZ,CACES,KAAMA,EACJC,KACEC,UAAYe,WAAYC,OAEjBJ,IAAO,IAAIC,KAAKG,IAAYF,OAAO,yBAC9CV,QAAQf,EAAAA,EAAAA,GAAE,kBACVc,SAAU,cAEZ,CACEL,KAAMA,EACJC,KACEC,UAAYe,WAAYC,EAAWC,SAAUC,QAG/CC,EAAAA,EAAAA,IAAU,IAAIN,KAAKG,GAAWI,UAAW,IAAIP,KAAKK,GAASE,WAC7DhB,QAAQf,EAAAA,EAAAA,GAAE,YACViB,eAAe,GAEjB,CACEH,SAAU,QACVC,QAAQf,EAAAA,EAAAA,GAAE,UAEZ,CACEc,SAAU,gBACVC,QAAQf,EAAAA,EAAAA,GAAE,iBACVS,KAAMA,EACJC,KACEC,UAAYqB,gBAAgB,SAG9BpB,EAAAA,EAAAA,IAACqB,EAAAA,EAAO,CAACC,MAAOF,EAAeG,UAAU,UAASC,UAChDxB,EAAAA,EAAAA,IAAA,QAAAwB,SAAOJ,SAKf,CAAC3C,IAEGgD,EAAO,IAAIhD,EAAkB,SAAW,gBACxCiD,GAAatC,EAAAA,EAAAA,GAAE,SACfuC,GAAcvC,EAAAA,EAAAA,GAAE,UAEtB,OACEwC,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,CAAAL,SAAA,EACExB,EAAAA,EAAAA,IAAC8B,EAAAA,EAAO,CACNC,MACEH,EAAAA,EAAAA,IAACjE,EAAY,CAAA6D,SAAA,EACXI,EAAAA,EAAAA,IAAA,QAAAJ,SAAA,CACGjC,EAC0B,UAAvBA,EAAcyC,KACZ,GAAGN,KACoB,WAAvBnC,EAAcyC,KACZ,GAAGL,KACH,KACJ,KAAM,IACI,MAAbpC,OAAa,EAAbA,EAAewC,SAElB/B,EAAAA,EAAAA,IAAA,QAAAwB,UACExB,EAAAA,EAAAA,IAACiC,EAAAA,GAAI,CAACC,GAAIT,EAAKD,UAAEpC,EAAAA,EAAAA,GAAE,yBAK3BY,EAAAA,EAAAA,IAACmC,EAAAA,EAAQ,CACPC,UAAU,0BACVzC,QAASA,EACT0C,MAAOtD,EACPuD,KAAMrD,EACNC,UAAWA,EACXqD,YA3Gc,CAAC,CAAEC,GAAI,aAAcC,MAAM,IA4GzC5D,QAASA,EACTN,eAAgBA,EAChBC,gBAAiBA,EACjBkE,YAAaA,OACbC,SArKU,OAyKlB,G","sources":["webpack://superset/./src/features/alerts/types.ts","webpack://superset/./src/pages/ExecutionLogList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Owner from 'src/types/Owner';\nimport { NotificationFormats } from 'src/features/reports/types';\n\ntype user = {\n  id: number;\n  first_name: string;\n  last_name: string;\n};\nexport type ChartObject = {\n  id: number;\n  slice_name: string;\n  viz_type: string;\n};\n\nexport type DashboardObject = {\n  dashboard_title: string;\n  id: number;\n};\n\nexport type DatabaseObject = {\n  database_name: string;\n  id: number;\n};\n\nexport enum NotificationMethodOption {\n  Email = 'Email',\n  Slack = 'Slack',\n  SlackV2 = 'SlackV2',\n}\n\nexport type NotificationSetting = {\n  method?: NotificationMethodOption;\n  recipients: string;\n  cc?: string;\n  bcc?: string;\n  options: NotificationMethodOption[];\n};\n\nexport type SlackChannel = {\n  id: string;\n  name: string;\n  is_member: boolean;\n  is_private: boolean;\n};\n\nexport type Recipient = {\n  recipient_config_json: {\n    target: string;\n    ccTarget?: string;\n    bccTarget?: string;\n  };\n  type: NotificationMethodOption;\n};\n\nexport type MetaObject = {\n  id?: number;\n  label?: string;\n  value?: number | string;\n};\n\nexport type Operator = '<' | '>' | '<=' | '>=' | '==' | '!=' | 'not null';\n\nexport type AlertObject = {\n  active?: boolean;\n  creation_method?: string;\n  chart?: MetaObject;\n  changed_by?: user;\n  changed_on_delta_humanized?: string;\n  chart_id: number;\n  created_by?: user;\n  created_on?: string;\n  crontab?: string;\n  custom_width?: number | null;\n  dashboard?: MetaObject;\n  dashboard_id?: number;\n  database?: MetaObject;\n  description?: string;\n  email_subject?: string;\n  error?: string;\n  force_screenshot: boolean;\n  grace_period?: number;\n  id: number;\n  last_eval_dttm?: number;\n  last_state?: 'Success' | 'Working' | 'Error' | 'Not triggered' | 'On Grace';\n  log_retention?: number;\n  name?: string;\n  owners?: Array<Owner | MetaObject>;\n  sql?: string;\n  timezone?: string;\n  recipients?: Array<Recipient>;\n  report_format?: NotificationFormats;\n  type?: string;\n  validator_config_json?: {\n    op?: Operator;\n    threshold?: number;\n  };\n  validator_type?: string;\n  working_timeout?: number;\n};\n\nexport type LogObject = {\n  end_dttm: string;\n  error_message: string;\n  id: number;\n  scheduled_dttm: string;\n  start_dttm: string;\n  state: string;\n  value: string;\n  uuid: string;\n};\n\nexport enum AlertState {\n  Success = 'Success',\n  Working = 'Working',\n  Error = 'Error',\n  Noop = 'Not triggered',\n  Grace = 'On Grace',\n}\n\nexport enum RecipientIconName {\n  Email = 'Email',\n  Slack = 'Slack',\n  SlackV2 = 'SlackV2',\n}\nexport interface AlertsReportsConfig {\n  ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT: number;\n  ALERT_REPORTS_DEFAULT_RETENTION: number;\n  ALERT_REPORTS_DEFAULT_CRON_VALUE: string;\n}\n\nexport type SectionValidationObject = {\n  hasErrors: boolean;\n  errors: string[];\n  name: string;\n};\n\nexport interface ValidationObject {\n  [key: string]: SectionValidationObject;\n}\n\nexport enum Sections {\n  General = 'generalSection',\n  Content = 'contentSection',\n  Alert = 'alertConditionSection',\n  Schedule = 'scheduleSection',\n  Notification = 'notificationSection',\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { css, styled, t } from '@superset-ui/core';\nimport moment from 'moment';\nimport { useEffect, useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport ListView from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SubMenu from 'src/features/home/SubMenu';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { fDuration } from 'src/utils/dates';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { AlertObject, LogObject } from 'src/features/alerts/types';\n\nconst PAGE_SIZE = 25;\n\nconst StyledHeader = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: ${theme.gridUnit * 4}px;\n      font-size: ${theme.typography.sizes.s};\n      font-weight: ${theme.typography.weights.normal};\n      text-decoration: underline;\n    }\n  `}\n`;\n\ninterface ExecutionLogProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n}\n\nfunction ExecutionLog({\n  addDangerToast,\n  addSuccessToast,\n  isReportEnabled,\n}: ExecutionLogProps) {\n  const { alertId }: any = useParams();\n  const {\n    state: { loading, resourceCount: logCount, resourceCollection: logs },\n    fetchData,\n  } = useListViewResource<LogObject>(\n    `report/${alertId}/log`,\n    t('log'),\n    addDangerToast,\n    false,\n  );\n  const {\n    state: { loading: alertLoading, resource: alertResource },\n    fetchResource,\n  } = useSingleViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  useEffect(() => {\n    if (alertId !== null && !alertLoading) {\n      fetchResource(alertId);\n    }\n  }, [alertId]);\n\n  const initialSort = [{ id: 'start_dttm', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { state },\n          },\n        }: any) => (\n          <AlertStatusIcon state={state} isReportEnabled={isReportEnabled} />\n        ),\n        accessor: 'state',\n        Header: t('State'),\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { uuid: executionId },\n          },\n        }: any) => (executionId ? executionId.slice(0, 6) : 'none'),\n        accessor: 'uuid',\n        Header: t('Execution ID'),\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { scheduled_dttm: scheduledDttm },\n          },\n        }: any) =>\n          moment(new Date(scheduledDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n        accessor: 'scheduled_dttm',\n        Header: t('Scheduled at (UTC)'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm },\n          },\n        }: any) => moment(new Date(startDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n        Header: t('Start at (UTC)'),\n        accessor: 'start_dttm',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm, end_dttm: endDttm },\n          },\n        }: any) =>\n          fDuration(new Date(startDttm).getTime(), new Date(endDttm).getTime()),\n        Header: t('Duration'),\n        disableSortBy: true,\n      },\n      {\n        accessor: 'value',\n        Header: t('Value'),\n      },\n      {\n        accessor: 'error_message',\n        Header: t('Error message'),\n        Cell: ({\n          row: {\n            original: { error_message = '' },\n          },\n        }: any) => (\n          <Tooltip title={error_message} placement=\"topLeft\">\n            <span>{error_message}</span>\n          </Tooltip>\n        ),\n      },\n    ],\n    [isReportEnabled],\n  );\n  const path = `/${isReportEnabled ? 'report' : 'alert'}/list/`;\n  const ALERT_TEXT = t('Alert');\n  const REPORT_TEXT = t('Report');\n\n  return (\n    <>\n      <SubMenu\n        name={\n          <StyledHeader>\n            <span>\n              {alertResource\n                ? alertResource.type === 'Alert'\n                  ? `${ALERT_TEXT}:`\n                  : alertResource.type === 'Report'\n                    ? `${REPORT_TEXT}:`\n                    : null\n                : null}{' '}\n              {alertResource?.name}\n            </span>\n            <span>\n              <Link to={path}>{t('Back to all')}</Link>\n            </span>\n          </StyledHeader>\n        }\n      />\n      <ListView<LogObject>\n        className=\"execution-log-list-view\"\n        columns={columns}\n        count={logCount}\n        data={logs}\n        fetchData={fetchData}\n        initialSort={initialSort}\n        loading={loading}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        refreshData={() => {}}\n        pageSize={PAGE_SIZE}\n      />\n    </>\n  );\n}\n\nexport default withToasts(ExecutionLog);\n"],"names":["NotificationMethodOption","AlertState","RecipientIconName","Sections","StyledHeader","styled","div","theme","css","gridUnit","typography","sizes","s","weights","normal","withToasts","addDangerToast","addSuccessToast","isReportEnabled","alertId","useParams","state","loading","resourceCount","logCount","resourceCollection","logs","fetchData","useListViewResource","t","alertLoading","resource","alertResource","fetchResource","useSingleViewResource","useEffect","columns","useMemo","Cell","row","original","_jsx","AlertStatusIcon","accessor","Header","size","disableSortBy","uuid","executionId","slice","scheduled_dttm","scheduledDttm","moment","Date","format","start_dttm","startDttm","end_dttm","endDttm","fDuration","getTime","error_message","Tooltip","title","placement","children","path","ALERT_TEXT","REPORT_TEXT","_jsxs","_Fragment","SubMenu","name","type","Link","to","ListView","className","count","data","initialSort","id","desc","refreshData","pageSize"],"sourceRoot":""}