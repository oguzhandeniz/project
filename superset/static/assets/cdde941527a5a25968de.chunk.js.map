{"version":3,"file":"cdde941527a5a25968de.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/AuditInfo/index.tsx","webpack://superset/./src/components/ConfirmStatusChange/index.tsx","webpack://superset/./src/components/DeleteModal/index.tsx","webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/features/home/SubMenu.tsx","webpack://superset/./src/utils/export.ts","webpack://superset/./src/utils/getOwnerName.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\nimport { Tooltip } from 'src/components/Tooltip';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { t } from '@superset-ui/core';\n\nexport type ModifiedInfoProps = {\n  user?: Owner;\n  date: string;\n};\n\nexport const ModifiedInfo = ({ user, date }: ModifiedInfoProps) => {\n  const dateSpan = (\n    <span className=\"no-wrap\" data-test=\"audit-info-date\">\n      {date}\n    </span>\n  );\n\n  if (user) {\n    const userName = getOwnerName(user);\n    const title = t('Modified by: %s', userName);\n    return (\n      <Tooltip title={title} placement=\"bottom\">\n        {dateSpan}\n      </Tooltip>\n    );\n  }\n  return dateSpan;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, ReactNode } from 'react';\n\nimport DeleteModal from 'src/components/DeleteModal';\n\nexport type Callback = (...args: any[]) => void;\n\nexport interface ConfirmStatusChangeProps {\n  title: ReactNode;\n  description: ReactNode;\n  onConfirm: Callback;\n  children: (showConfirm: Callback) => ReactNode;\n}\n\nexport default function ConfirmStatusChange({\n  title,\n  description,\n  onConfirm,\n  children,\n}: ConfirmStatusChangeProps) {\n  const [open, setOpen] = useState(false);\n  const [currentCallbackArgs, setCurrentCallbackArgs] = useState<any[]>([]);\n\n  const showConfirm = (...callbackArgs: any[]) => {\n    // check if any args are DOM events, if so, call persist\n    callbackArgs.forEach(arg => {\n      if (!arg) {\n        return;\n      }\n      if (typeof arg.persist === 'function') {\n        arg.persist();\n      }\n      if (typeof arg.preventDefault === 'function') {\n        arg.preventDefault();\n      }\n      if (typeof arg.stopPropagation === 'function') {\n        arg.stopPropagation();\n      }\n    });\n    setOpen(true);\n    setCurrentCallbackArgs(callbackArgs);\n  };\n\n  const hide = () => {\n    setOpen(false);\n    setCurrentCallbackArgs([]);\n  };\n\n  const confirm = () => {\n    onConfirm(...currentCallbackArgs);\n    hide();\n  };\n\n  return (\n    <>\n      {children?.(showConfirm)}\n      <DeleteModal\n        description={description}\n        onConfirm={confirm}\n        onHide={hide}\n        open={open}\n        title={title}\n      />\n    </>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, styled } from '@superset-ui/core';\nimport { useState, ReactNode, ChangeEvent } from 'react';\nimport { Input } from 'src/components/Input';\nimport Modal from 'src/components/Modal';\nimport { FormLabel } from 'src/components/Form';\n\nconst StyledDiv = styled.div`\n  padding-top: 8px;\n  width: 50%;\n  label {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    text-transform: uppercase;\n  }\n`;\n\nconst DescriptionContainer = styled.div`\n  line-height: ${({ theme }) => theme.gridUnit * 4}px;\n  padding-top: 16px;\n`;\n\ninterface DeleteModalProps {\n  description: ReactNode;\n  onConfirm: () => void;\n  onHide: () => void;\n  open: boolean;\n  title: ReactNode;\n}\n\nexport default function DeleteModal({\n  description,\n  onConfirm,\n  onHide,\n  open,\n  title,\n}: DeleteModalProps) {\n  const [disableChange, setDisableChange] = useState(true);\n  const [confirmation, setConfirmation] = useState<string>('');\n\n  const hide = () => {\n    setConfirmation('');\n    onHide();\n  };\n\n  const confirm = () => {\n    setConfirmation('');\n    onConfirm();\n  };\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const targetValue = event.target.value ?? '';\n    setDisableChange(targetValue.toUpperCase() !== t('DELETE'));\n    setConfirmation(targetValue);\n  };\n\n  const onPressEnter = () => {\n    if (!disableChange) {\n      confirm();\n    }\n  };\n\n  return (\n    <Modal\n      disablePrimaryButton={disableChange}\n      onHide={hide}\n      onHandledPrimaryAction={confirm}\n      primaryButtonName={t('delete')}\n      primaryButtonType=\"danger\"\n      show={open}\n      title={title}\n    >\n      <DescriptionContainer>{description}</DescriptionContainer>\n      <StyledDiv>\n        <FormLabel htmlFor=\"delete\">\n          {t('Type \"%s\" to confirm', t('DELETE'))}\n        </FormLabel>\n        <Input\n          data-test=\"delete-modal-input\"\n          type=\"text\"\n          id=\"delete\"\n          autoComplete=\"off\"\n          value={confirmation}\n          onChange={onChange}\n          onPressEnter={onPressEnter}\n        />\n      </StyledDiv>\n    </Modal>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FunctionComponent, useEffect, useState, ChangeEvent } from 'react';\n\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n  sshTunnelPasswordFields?: string[];\n  setSSHTunnelPasswordFields?: (sshTunnelPasswordFields: string[]) => void;\n  sshTunnelPrivateKeyFields?: string[];\n  setSSHTunnelPrivateKeyFields?: (sshTunnelPrivateKeyFields: string[]) => void;\n  sshTunnelPrivateKeyPasswordFields?: string[];\n  setSSHTunnelPrivateKeyPasswordFields?: (\n    sshTunnelPrivateKeyPasswordFields: string[],\n  ) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n  sshTunnelPasswordFields = [],\n  setSSHTunnelPasswordFields = () => {},\n  sshTunnelPrivateKeyFields = [],\n  setSSHTunnelPrivateKeyFields = () => {},\n  sshTunnelPrivateKeyPasswordFields = [],\n  setSSHTunnelPrivateKeyPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [sshTunnelPasswords, setSSHTunnelPasswords] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeys, setSSHTunnelPrivateKeys] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeyPasswords, setSSHTunnelPrivateKeyPasswords] =\n    useState<Record<string, string>>({});\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n    setSSHTunnelPasswordFields([]);\n    setSSHTunnelPrivateKeyFields([]);\n    setSSHTunnelPrivateKeyPasswordFields([]);\n    setSSHTunnelPasswords({});\n    setSSHTunnelPrivateKeys({});\n    setSSHTunnelPrivateKeyPasswords({});\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: {\n      alreadyExists,\n      passwordsNeeded,\n      sshPasswordNeeded,\n      sshPrivateKeyNeeded,\n      sshPrivateKeyPasswordNeeded,\n    },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  useEffect(() => {\n    setSSHTunnelPasswordFields(sshPasswordNeeded);\n    if (sshPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPasswordNeeded, setSSHTunnelPasswordFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyFields(sshPrivateKeyNeeded);\n    if (sshPrivateKeyNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyNeeded, setSSHTunnelPrivateKeyFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyPasswordFields(sshPrivateKeyPasswordNeeded);\n    if (sshPrivateKeyPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyPasswordNeeded, setSSHTunnelPrivateKeyPasswordFields]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      sshTunnelPasswords,\n      sshTunnelPrivateKeys,\n      sshTunnelPrivateKeyPasswords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (\n      passwordFields.length === 0 &&\n      sshTunnelPasswordFields.length === 0 &&\n      sshTunnelPrivateKeyFields.length === 0 &&\n      sshTunnelPrivateKeyPasswordFields.length === 0\n    ) {\n      return null;\n    }\n\n    const files = [\n      ...new Set([\n        ...passwordFields,\n        ...sshTunnelPasswordFields,\n        ...sshTunnelPrivateKeyFields,\n        ...sshTunnelPrivateKeyPasswordFields,\n      ]),\n    ];\n\n    return (\n      <>\n        <h5>{t('Database passwords')}</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {files.map(fileName => (\n          <>\n            {passwordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`password-${fileName}`}\n                  autoComplete={`password-${fileName}`}\n                  type=\"password\"\n                  value={passwords[fileName]}\n                  onChange={event =>\n                    setPasswords({\n                      ...passwords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`ssh_tunnel_password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPasswords({\n                      ...sshTunnelPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_password\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <textarea\n                  name={`ssh_tunnel_private_key-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key-${fileName}`}\n                  value={sshTunnelPrivateKeys[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeys({\n                      ...sshTunnelPrivateKeys,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key_password-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_private_key_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPrivateKeyPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeyPasswords({\n                      ...sshTunnelPrivateKeyPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key_password\"\n                />\n              </StyledInputContainer>\n            )}\n          </>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>{t('Select file')}</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={\n            passwordFields.length > 0 ||\n            sshTunnelPasswordFields.length > 0 ||\n            sshTunnelPrivateKeyFields.length > 0 ||\n            sshTunnelPrivateKeyPasswordFields.length > 0\n          }\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode, useState, useEffect, FunctionComponent } from 'react';\n\nimport { Link, useHistory } from 'react-router-dom';\nimport { styled, SupersetTheme, css, t } from '@superset-ui/core';\nimport cx from 'classnames';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { debounce } from 'lodash';\nimport { Row } from 'src/components';\nimport { Menu, MenuMode, MainNav as DropdownMenu } from 'src/components/Menu';\nimport Button, { OnClickHandler } from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport { MenuObjectProps } from 'src/types/bootstrapTypes';\n\nconst StyledHeader = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n  .header {\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    text-align: left;\n    font-size: 18px;\n    padding: ${({ theme }) => theme.gridUnit * 3}px;\n    display: inline-block;\n    line-height: ${({ theme }) => theme.gridUnit * 9}px;\n  }\n  .nav-right {\n    display: flex;\n    align-items: center;\n    padding: ${({ theme }) => theme.gridUnit * 3.5}px 0;\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    float: right;\n    position: absolute;\n    right: 0;\n    ul.ant-menu-root {\n      padding: 0px;\n    }\n    li[role='menuitem'] {\n      border: 0;\n      border-bottom: none;\n      &:hover {\n        border-bottom: transparent;\n      }\n    }\n  }\n  .nav-right-collapse {\n    display: flex;\n    align-items: center;\n    padding: 14px 0;\n    margin-right: 0;\n    float: left;\n    padding-left: 10px;\n  }\n  .menu {\n    background-color: ${({ theme }) => theme.colors.grayscale.light5};\n    .ant-menu-horizontal {\n      line-height: inherit;\n      .ant-menu-item {\n        border-bottom: none;\n        &:hover {\n          border-bottom: none;\n          text-decoration: none;\n        }\n      }\n    }\n    .ant-menu {\n      padding: ${({ theme }) => theme.gridUnit * 4}px 0px;\n    }\n  }\n\n  .ant-menu-horizontal:not(.ant-menu-dark) > .ant-menu-item {\n    margin: 0 ${({ theme }) => theme.gridUnit + 1}px;\n  }\n\n  .menu .ant-menu-item {\n    li,\n    div {\n      a,\n      div {\n        font-size: ${({ theme }) => theme.typography.sizes.s}px;\n        color: ${({ theme }) => theme.colors.secondary.dark1};\n\n        a {\n          margin: 0;\n          padding: ${({ theme }) => theme.gridUnit * 2}px\n            ${({ theme }) => theme.gridUnit * 4}px;\n          line-height: ${({ theme }) => theme.gridUnit * 5}px;\n\n          &:hover {\n            text-decoration: none;\n          }\n        }\n      }\n\n      &.no-router a {\n        padding: ${({ theme }) => theme.gridUnit * 2}px\n          ${({ theme }) => theme.gridUnit * 4}px;\n      }\n\n      &.active a {\n        background: ${({ theme }) => theme.colors.secondary.light4};\n        border-radius: ${({ theme }) => theme.borderRadius}px;\n      }\n    }\n\n    li.active > a,\n    li.active > div,\n    div.active > div,\n    li > a:hover,\n    li > a:focus,\n    li > div:hover,\n    div > div:hover,\n    div > a:hover {\n      background: ${({ theme }) => theme.colors.secondary.light4};\n      border-bottom: none;\n      border-radius: ${({ theme }) => theme.borderRadius}px;\n      margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n      text-decoration: none;\n    }\n  }\n\n  .btn-link {\n    padding: 10px 0;\n  }\n  .ant-menu-horizontal {\n    border: none;\n  }\n  @media (max-width: 767px) {\n    .header,\n    .nav-right {\n      position: relative;\n      margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n  .ant-menu-submenu {\n    span[role='img'] {\n      position: absolute;\n      right: ${({ theme }) => -theme.gridUnit + -2}px;\n      top: ${({ theme }) => theme.gridUnit + 1}px !important;\n    }\n  }\n  .dropdown-menu-links > div.ant-menu-submenu-title,\n  .ant-menu-submenu-open.ant-menu-submenu-active > div.ant-menu-submenu-title {\n    color: ${({ theme }) => theme.colors.primary.dark1};\n  }\n`;\n\nconst styledDisabled = (theme: SupersetTheme) => css`\n  color: ${theme.colors.grayscale.light1};\n  cursor: not-allowed;\n\n  &:hover {\n    color: ${theme.colors.grayscale.light1};\n  }\n\n  .ant-menu-item-selected {\n    background-color: ${theme.colors.grayscale.light1};\n  }\n`;\n\ntype MenuChild = {\n  label: string;\n  name: string;\n  url?: string;\n  usesRouter?: boolean;\n  onClick?: () => void;\n  'data-test'?: string;\n};\n\nexport interface ButtonProps {\n  name: ReactNode;\n  onClick?: OnClickHandler;\n  'data-test'?: string;\n  buttonStyle:\n    | 'primary'\n    | 'secondary'\n    | 'dashed'\n    | 'link'\n    | 'warning'\n    | 'success'\n    | 'tertiary';\n}\n\nexport interface SubMenuProps {\n  buttons?: Array<ButtonProps>;\n  name?: string | ReactNode;\n  tabs?: MenuChild[];\n  activeChild?: MenuChild['name'];\n  /* If usesRouter is true, a react-router <Link> component will be used instead of href.\n   *  ONLY set usesRouter to true if SubMenu is wrapped in a react-router <Router>;\n   *  otherwise, a 'You should not use <Link> outside a <Router>' error will be thrown */\n  usesRouter?: boolean;\n  color?: string;\n  dropDownLinks?: Array<MenuObjectProps>;\n}\n\nconst { SubMenu } = DropdownMenu;\n\nconst SubMenuComponent: FunctionComponent<SubMenuProps> = props => {\n  const [showMenu, setMenu] = useState<MenuMode>('horizontal');\n  const [navRightStyle, setNavRightStyle] = useState('nav-right');\n\n  let hasHistory = true;\n  // If no parent <Router> component exists, useHistory throws an error\n  try {\n    useHistory();\n  } catch (err) {\n    // If error is thrown, we know not to use <Link> in render\n    hasHistory = false;\n  }\n\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth <= 767) setMenu('inline');\n      else setMenu('horizontal');\n\n      if (\n        props.buttons &&\n        props.buttons.length >= 3 &&\n        window.innerWidth >= 795\n      ) {\n        // eslint-disable-next-line no-unused-expressions\n        setNavRightStyle('nav-right');\n      } else if (\n        props.buttons &&\n        props.buttons.length >= 3 &&\n        window.innerWidth <= 795\n      ) {\n        setNavRightStyle('nav-right-collapse');\n      }\n    }\n    handleResize();\n    const resize = debounce(handleResize, 10);\n    window.addEventListener('resize', resize);\n    return () => window.removeEventListener('resize', resize);\n  }, [props.buttons]);\n\n  return (\n    <StyledHeader>\n      <Row className=\"menu\" role=\"navigation\">\n        {props.name && <div className=\"header\">{props.name}</div>}\n        <Menu mode={showMenu} style={{ backgroundColor: 'transparent' }}>\n          {props.tabs?.map(tab => {\n            if ((props.usesRouter || hasHistory) && !!tab.usesRouter) {\n              return (\n                <Menu.Item key={tab.label}>\n                  <div\n                    role=\"tab\"\n                    data-test={tab['data-test']}\n                    className={tab.name === props.activeChild ? 'active' : ''}\n                  >\n                    <div>\n                      <Link to={tab.url || ''}>{tab.label}</Link>\n                    </div>\n                  </div>\n                </Menu.Item>\n              );\n            }\n\n            return (\n              <Menu.Item key={tab.label}>\n                <div\n                  className={cx('no-router', {\n                    active: tab.name === props.activeChild,\n                  })}\n                  role=\"tab\"\n                >\n                  <a href={tab.url} onClick={tab.onClick}>\n                    {tab.label}\n                  </a>\n                </div>\n              </Menu.Item>\n            );\n          })}\n        </Menu>\n        <div className={navRightStyle}>\n          <Menu mode=\"horizontal\" triggerSubMenuAction=\"click\">\n            {props.dropDownLinks?.map((link, i) => (\n              <SubMenu\n                key={i}\n                title={link.label}\n                icon={<Icons.TriangleDown />}\n                popupOffset={[10, 20]}\n                className=\"dropdown-menu-links\"\n              >\n                {link.childs?.map(item => {\n                  if (typeof item === 'object') {\n                    return item.disable ? (\n                      <DropdownMenu.Item\n                        key={item.label}\n                        css={styledDisabled}\n                        disabled\n                      >\n                        <Tooltip\n                          placement=\"top\"\n                          title={t(\n                            \"Enable 'Allow file uploads to database' in any database's settings\",\n                          )}\n                        >\n                          {item.label}\n                        </Tooltip>\n                      </DropdownMenu.Item>\n                    ) : (\n                      <DropdownMenu.Item key={item.label}>\n                        <a href={item.url} onClick={item.onClick}>\n                          {item.label}\n                        </a>\n                      </DropdownMenu.Item>\n                    );\n                  }\n                  return null;\n                })}\n              </SubMenu>\n            ))}\n          </Menu>\n          {props.buttons?.map((btn, i) => (\n            <Button\n              key={i}\n              buttonStyle={btn.buttonStyle}\n              onClick={btn.onClick}\n              data-test={btn['data-test']}\n            >\n              {btn.name}\n            </Button>\n          ))}\n        </div>\n      </Row>\n      {props.children}\n    </StyledHeader>\n  );\n};\n\nexport default SubMenuComponent;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport parseCookie from 'src/utils/parseCookie';\nimport rison from 'rison';\nimport { nanoid } from 'nanoid';\n\nexport default function handleResourceExport(\n  resource: string,\n  ids: number[],\n  done: () => void,\n  interval = 200,\n): void {\n  const token = nanoid();\n  const url = `/api/v1/${resource}/export/?q=${rison.encode(\n    ids,\n  )}&token=${token}`;\n\n  // create new iframe for export\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = url;\n  document.body.appendChild(iframe);\n\n  const timer = window.setInterval(() => {\n    const cookie: { [cookieId: string]: string } = parseCookie();\n    if (cookie[token] === 'done') {\n      window.clearInterval(timer);\n      document.body.removeChild(iframe);\n      done();\n    }\n  }, interval);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n"],"names":["ModifiedInfo","user","date","dateSpan","_jsx","className","children","userName","getOwnerName","title","t","Tooltip","placement","ConfirmStatusChange","description","onConfirm","open","setOpen","useState","currentCallbackArgs","setCurrentCallbackArgs","hide","_jsxs","_Fragment","showConfirm","callbackArgs","forEach","arg","persist","preventDefault","stopPropagation","DeleteModal","confirm","onHide","StyledDiv","styled","div","theme","colors","grayscale","base","DescriptionContainer","gridUnit","disableChange","setDisableChange","confirmation","setConfirmation","Modal","disablePrimaryButton","onHandledPrimaryAction","primaryButtonName","primaryButtonType","show","FormLabel","htmlFor","Input","type","id","autoComplete","value","onChange","event","_event$target$value","targetValue","target","toUpperCase","onPressEnter","HelperMessage","typography","sizes","s","StyledInputContainer","light1","light2","ImportModelsModal","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","passwordFields","setPasswordFields","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","isHidden","setIsHidden","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","sshTunnelPasswords","setSSHTunnelPasswords","sshTunnelPrivateKeys","setSSHTunnelPrivateKeys","sshTunnelPrivateKeyPasswords","setSSHTunnelPrivateKeyPasswords","clearModal","state","alreadyExists","passwordsNeeded","sshPasswordNeeded","sshPrivateKeyNeeded","sshPrivateKeyPasswordNeeded","importResource","useImportResource","msg","useEffect","length","name","onUpload","_fileList$","originFileObj","File","then","result","width","Upload","accept","info","file","status","onRemove","removedFile","filter","uid","customRequest","disabled","Button","loading","ErrorAlert","showDbInstallInstructions","renderPasswordFields","files","Set","map","fileName","indexOf","slice","_event$currentTarget$","_event$currentTarget","currentTarget","StyledHeader","weights","bold","light5","secondary","dark1","light4","borderRadius","primary","styledDisabled","css","SubMenu","DropdownMenu","props","_props$tabs","_props$dropDownLinks","_props$buttons","showMenu","setMenu","navRightStyle","setNavRightStyle","hasHistory","useHistory","err","handleResize","window","innerWidth","buttons","resize","_debounce","addEventListener","removeEventListener","Row","role","Menu","mode","style","backgroundColor","tabs","tab","usesRouter","Item","activeChild","Link","to","url","label","cx","active","href","onClick","triggerSubMenuAction","dropDownLinks","link","i","_link$childs","icon","Icons","TriangleDown","popupOffset","childs","item","disable","btn","buttonStyle","handleResourceExport","resource","ids","done","interval","token","nanoid","rison","iframe","document","createElement","display","src","body","appendChild","timer","setInterval","parseCookie","clearInterval","removeChild","owner","first_name","last_name"],"sourceRoot":""}