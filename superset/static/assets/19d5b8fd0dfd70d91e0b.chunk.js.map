{"version":3,"file":"19d5b8fd0dfd70d91e0b.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/CertifiedBadge/index.tsx","webpack://superset/./src/components/FacePile/index.tsx","webpack://superset/./src/components/FacePile/utils.tsx","webpack://superset/./src/features/allEntities/AllEntitiesTable.tsx","webpack://superset/./src/pages/AllEntities/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, useTheme } from '@superset-ui/core';\nimport Icons, { IconType } from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\n\nexport interface CertifiedBadgeProps {\n  certifiedBy?: string;\n  details?: string;\n  size?: IconType['iconSize'];\n}\n\nfunction CertifiedBadge({\n  certifiedBy,\n  details,\n  size = 'l',\n}: CertifiedBadgeProps) {\n  const theme = useTheme();\n\n  return (\n    <Tooltip\n      id=\"certified-details-tooltip\"\n      title={\n        <>\n          {certifiedBy && (\n            <div>\n              <strong>{t('Certified by %s', certifiedBy)}</strong>\n            </div>\n          )}\n          <div>{details}</div>\n        </>\n      }\n    >\n      <Icons.Certified iconColor={theme.colors.primary.base} iconSize={size} />\n    </Tooltip>\n  );\n}\n\nexport default CertifiedBadge;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  getCategoricalSchemeRegistry,\n  styled,\n  SupersetTheme,\n} from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Avatar } from 'src/components';\nimport { getRandomColor } from './utils';\n\ninterface FacePileProps {\n  users: { first_name: string; last_name: string; id: number }[];\n  maxCount?: number;\n}\n\nconst colorList = getCategoricalSchemeRegistry().get()?.colors ?? [];\n\nconst customAvatarStyler = (theme: SupersetTheme) => {\n  const size = theme.gridUnit * 8;\n  return `\n  width: ${size}px;\n  height: ${size}px;\n  line-height: ${size}px;\n  font-size: ${theme.typography.sizes.s}px;`;\n};\n\nconst StyledAvatar = styled(Avatar)`\n  ${({ theme }) => customAvatarStyler(theme)}\n`;\n\n// to apply styling to the maxCount avatar\nconst StyledGroup = styled(Avatar.Group)`\n  .ant-avatar {\n    ${({ theme }) => customAvatarStyler(theme)}\n  }\n`;\n\nexport default function FacePile({ users, maxCount = 4 }: FacePileProps) {\n  return (\n    <StyledGroup maxCount={maxCount}>\n      {users.map(({ first_name, last_name, id }) => {\n        const name = `${first_name} ${last_name}`;\n        const uniqueKey = `${id}-${first_name}-${last_name}`;\n        const color = getRandomColor(uniqueKey, colorList);\n        const avatarUrl = `/api/v1/user/${id}/avatar.png`;\n        return (\n          <Tooltip key={name} title={name} placement=\"top\">\n            <StyledAvatar\n              key={name}\n              style={{\n                backgroundColor: color,\n                borderColor: color,\n              }}\n              src={avatarUrl}\n            >\n              {first_name?.[0]?.toLocaleUpperCase()}\n              {last_name?.[0]?.toLocaleUpperCase()}\n            </StyledAvatar>\n          </Tooltip>\n        );\n      })}\n    </StyledGroup>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// https://en.wikipedia.org/wiki/Linear_congruential_generator\nfunction stringAsciiPRNG(value: string, m: number) {\n  // Xn+1 = (a * Xn + c) % m\n  // 0 < a < m\n  // 0 <= c < m\n  // 0 <= X0 < m\n\n  const charCodes = [...value].map(letter => letter.charCodeAt(0));\n  const len = charCodes.length;\n\n  const a = (len % (m - 1)) + 1;\n  const c = charCodes.reduce((current, next) => current + next) % m;\n\n  let random = charCodes[0] % m;\n\n  [...new Array(len)].forEach(() => {\n    random = (a * random + c) % m;\n  });\n\n  return random;\n}\n\nexport function getRandomColor(sampleValue: string, colorList: string[]) {\n  // if no value is passed, always return transparent color for consistency\n  if (!sampleValue) return 'transparent';\n\n  // value based random color index,\n  // ensuring the same sampleValue always resolves to the same color\n  return colorList[stringAsciiPRNG(sampleValue, colorList.length)];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport moment from 'moment';\nimport { t, styled } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { TagsList } from 'src/components/Tags';\nimport FacePile from 'src/components/FacePile';\nimport Tag from 'src/types/TagType';\nimport Owner from 'src/types/Owner';\nimport { EmptyStateBig } from 'src/components/EmptyState';\n\nconst MAX_TAGS_TO_SHOW = 3;\nconst PAGE_SIZE = 10;\n\nconst AllEntitiesTableContainer = styled.div`\n  text-align: left;\n  border-radius: ${({ theme }) => theme.gridUnit * 1}px 0;\n  .table {\n    table-layout: fixed;\n  }\n  .td {\n    width: 33%;\n  }\n  .entity-title {\n    font-family: Inter;\n    font-size: ${({ theme }) => theme.typography.sizes.m}px;\n    font-weight: ${({ theme }) => theme.typography.weights.medium};\n    line-height: 17px;\n    letter-spacing: 0px;\n    text-align: left;\n    margin: ${({ theme }) => theme.gridUnit * 4}px 0;\n  }\n`;\n\ninterface TaggedObject {\n  id: number;\n  type: string;\n  name: string;\n  url: string;\n  changed_on: moment.MomentInput;\n  created_by: number | undefined;\n  creator: string;\n  owners: Owner[];\n  tags: Tag[];\n}\n\nexport interface TaggedObjects {\n  dashboard: TaggedObject[];\n  chart: TaggedObject[];\n  query: TaggedObject[];\n}\n\ninterface AllEntitiesTableProps {\n  search?: string;\n  setShowTagModal: (show: boolean) => void;\n  objects: TaggedObjects;\n}\n\nexport default function AllEntitiesTable({\n  search = '',\n  setShowTagModal,\n  objects,\n}: AllEntitiesTableProps) {\n  type objectType = 'dashboard' | 'chart' | 'query';\n\n  const showListViewObjs =\n    objects.dashboard.length > 0 ||\n    objects.chart.length > 0 ||\n    objects.query.length > 0;\n\n  const renderTable = (type: objectType) => {\n    const data = objects[type].map((o: TaggedObject) => ({\n      [type]: <a href={o.url}>{o.name}</a>,\n      modified: moment.utc(o.changed_on).fromNow(),\n      tags: o.tags,\n      owners: o.owners,\n    }));\n\n    return (\n      <TableView\n        className=\"table-condensed\"\n        emptyWrapperType={EmptyWrapperType.Small}\n        data={data}\n        pageSize={PAGE_SIZE}\n        columns={[\n          {\n            accessor: type,\n            Header: 'Title',\n          },\n          {\n            Cell: ({\n              row: {\n                original: { tags = [] },\n              },\n            }: {\n              row: {\n                original: {\n                  tags: Tag[];\n                };\n              };\n            }) => (\n              // Only show custom type tags\n              <TagsList\n                tags={tags.filter(\n                  (tag: Tag) =>\n                    tag.type === 'TagTypes.custom' || tag.type === 1,\n                )}\n                maxTags={MAX_TAGS_TO_SHOW}\n              />\n            ),\n            Header: t('Tags'),\n            accessor: 'tags',\n            disableSortBy: true,\n          },\n          {\n            Cell: ({\n              row: {\n                original: { owners = [] },\n              },\n            }: any) => <FacePile users={owners} />,\n            Header: t('Owners'),\n            accessor: 'owners',\n            disableSortBy: true,\n            size: 'xl',\n          },\n        ]}\n      />\n    );\n  };\n\n  return (\n    <AllEntitiesTableContainer>\n      {showListViewObjs ? (\n        <>\n          <div className=\"entity-title\">{t('Dashboards')}</div>\n          {renderTable('dashboard')}\n          <div className=\"entity-title\">{t('Charts')}</div>\n          {renderTable('chart')}\n          <div className=\"entity-title\">{t('Queries')}</div>\n          {renderTable('query')}\n        </>\n      ) : (\n        <EmptyStateBig\n          image=\"dashboard.svg\"\n          title={t('No entities have this tag currently assigned')}\n          buttonAction={() => setShowTagModal(true)}\n          buttonText={t('Add tag to entities')}\n        />\n      )}\n    </AllEntitiesTableContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { styled, t, css, SupersetTheme } from '@superset-ui/core';\nimport { NumberParam, useQueryParam } from 'use-query-params';\nimport AllEntitiesTable, {\n  TaggedObjects,\n} from 'src/features/allEntities/AllEntitiesTable';\nimport Button from 'src/components/Button';\nimport MetadataBar, {\n  MetadataType,\n  Description,\n  Owner,\n  LastModified,\n} from 'src/components/MetadataBar';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport { Tag } from 'src/views/CRUD/types';\nimport TagModal from 'src/features/tags/TagModal';\nimport withToasts, { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { fetchObjectsByTagIds, fetchSingleTag } from 'src/features/tags/tags';\nimport Loading from 'src/components/Loading';\nimport getOwnerName from 'src/utils/getOwnerName';\n\ninterface TaggedObject {\n  id: number;\n  type: string;\n  name: string;\n  url: string;\n  changed_on: moment.MomentInput;\n  created_by: number | undefined;\n  creator: string;\n  owners: Owner[];\n  tags: Tag[];\n}\n\nconst additionalItemsStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  align-items: center;\n  margin-left: ${theme.gridUnit}px;\n  & > span {\n    margin-right: ${theme.gridUnit * 3}px;\n  }\n`;\n\nconst AllEntitiesContainer = styled.div`\n  ${({ theme }) => `\n  background-color: ${theme.colors.grayscale.light4};\n  .select-control {\n    margin-left: ${theme.gridUnit * 4}px;\n    margin-right: ${theme.gridUnit * 4}px;\n    margin-bottom: ${theme.gridUnit * 2}px;\n  }\n  .select-control-label {\n    text-transform: uppercase;\n    font-size: ${theme.gridUnit * 3}px;\n    color: ${theme.colors.grayscale.base};\n    margin-bottom: ${theme.gridUnit * 1}px;\n  }\n  .entities {\n    margin: ${theme.gridUnit * 6}px; 0px;\n  }\n  .pagination-container {\n    background-color: transparent;\n  }\n  `}\n`;\n\nconst AllEntitiesNav = styled.div`\n  ${({ theme }) => `\n  height: ${theme.gridUnit * 12.5}px;\n  background-color: ${theme.colors.grayscale.light5};\n  margin-bottom: ${theme.gridUnit * 4}px;\n  .navbar-brand {\n    margin-left: ${theme.gridUnit * 2}px;\n    font-weight: ${theme.typography.weights.bold};\n  }\n  .header {\n    font-weight: ${theme.typography.weights.bold};\n    margin-right:  ${theme.gridUnit * 3}px;\n    text-align: left;\n    font-size: ${theme.gridUnit * 4.5}px;\n    padding: ${theme.gridUnit * 3}px;\n    display: inline-block;\n    line-height: ${theme.gridUnit * 9}px;\n  }\n  `};\n`;\n\nfunction AllEntities() {\n  const [tagId] = useQueryParam('id', NumberParam);\n  const [tag, setTag] = useState<Tag | null>(null);\n  const [showTagModal, setShowTagModal] = useState<boolean>(false);\n  const { addSuccessToast, addDangerToast } = useToasts();\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [objects, setObjects] = useState<TaggedObjects>({\n    dashboard: [],\n    chart: [],\n    query: [],\n  });\n\n  const editableTitleProps = {\n    title: tag?.name || '',\n    placeholder: 'testing',\n    onSave: (newDatasetName: string) => {},\n    canEdit: false,\n    label: t('dataset name'),\n  };\n\n  const items = [];\n  if (tag?.description) {\n    const description: Description = {\n      type: MetadataType.Description,\n      value: tag?.description || '',\n    };\n    items.push(description);\n  }\n\n  const owner: Owner = {\n    type: MetadataType.Owner,\n    createdBy: getOwnerName(tag?.created_by),\n    createdOn: tag?.created_on_delta_humanized || '',\n  };\n  items.push(owner);\n\n  const lastModified: LastModified = {\n    type: MetadataType.LastModified,\n    value: tag?.changed_on_delta_humanized || '',\n    modifiedBy: getOwnerName(tag?.changed_by),\n  };\n  items.push(lastModified);\n\n  const fetchTaggedObjects = () => {\n    setLoading(true);\n    if (!tag) {\n      addDangerToast('Error tag object is not referenced!');\n      return;\n    }\n    fetchObjectsByTagIds(\n      { tagIds: [tag?.id] || '', types: null },\n      (data: TaggedObject[]) => {\n        const objects = { dashboard: [], chart: [], query: [] };\n        data.forEach(function (object) {\n          const object_type = object.type;\n          objects[object_type].push(object);\n        });\n        setObjects(objects);\n        setLoading(false);\n      },\n      (error: Response) => {\n        addDangerToast('Error Fetching Tagged Objects');\n        setLoading(false);\n      },\n    );\n  };\n\n  const fetchTag = (tagId: number) => {\n    fetchSingleTag(\n      tagId,\n      (tag: Tag) => {\n        setTag(tag);\n        setLoading(false);\n      },\n      (error: Response) => {\n        addDangerToast(t('Error Fetching Tagged Objects'));\n        setLoading(false);\n      },\n    );\n  };\n\n  useEffect(() => {\n    // fetch single tag met\n    if (tagId) {\n      setLoading(true);\n      fetchTag(tagId);\n    }\n  }, [tagId]);\n\n  useEffect(() => {\n    if (tag) fetchTaggedObjects();\n  }, [tag]);\n\n  if (isLoading) return <Loading />;\n  return (\n    <AllEntitiesContainer>\n      <TagModal\n        show={showTagModal}\n        onHide={() => {\n          setShowTagModal(false);\n        }}\n        editTag={tag}\n        addSuccessToast={addSuccessToast}\n        addDangerToast={addDangerToast}\n        refreshData={() => {\n          fetchTaggedObjects();\n          if (tagId) fetchTag(tagId);\n        }}\n      />\n      <AllEntitiesNav>\n        <PageHeaderWithActions\n          additionalActionsMenu={<></>}\n          editableTitleProps={editableTitleProps}\n          faveStarProps={{ itemId: 1, saveFaveStar: () => {} }}\n          showFaveStar={false}\n          showTitlePanelItems\n          titlePanelAdditionalItems={\n            <div css={additionalItemsStyles}>\n              <MetadataBar items={items} tooltipPlacement=\"bottom\" />\n            </div>\n          }\n          rightPanelAdditionalItems={\n            <>\n              <Button\n                data-test=\"bulk-select-action\"\n                buttonStyle=\"secondary\"\n                onClick={() => setShowTagModal(true)}\n                showMarginRight={false}\n              >\n                {t('Edit Tag')}{' '}\n              </Button>\n            </>\n          }\n          menuDropdownProps={{\n            disabled: true,\n          }}\n          showMenuDropdown={false}\n        />\n      </AllEntitiesNav>\n      <div className=\"entities\">\n        <AllEntitiesTable\n          search={tag?.name || ''}\n          setShowTagModal={setShowTagModal}\n          objects={objects}\n        />\n      </div>\n    </AllEntitiesContainer>\n  );\n}\n\nexport default withToasts(AllEntities);\n"],"names":["certifiedBy","details","size","theme","useTheme","_jsx","Tooltip","id","title","_jsxs","_Fragment","children","t","Icons","Certified","iconColor","colors","primary","base","iconSize","colorList","_getCategoricalScheme","_getCategoricalScheme2","getCategoricalSchemeRegistry","get","customAvatarStyler","gridUnit","typography","sizes","s","StyledAvatar","styled","Avatar","StyledGroup","Group","FacePile","users","maxCount","map","first_name","last_name","_first_name$","_last_name$","name","color","sampleValue","value","m","charCodes","letter","charCodeAt","len","length","a","c","reduce","current","next","random","Array","forEach","stringAsciiPRNG","getRandomColor","avatarUrl","placement","style","backgroundColor","borderColor","src","toLocaleUpperCase","AllEntitiesTableContainer","div","weights","medium","AllEntitiesTable","search","setShowTagModal","objects","showListViewObjs","dashboard","chart","query","renderTable","type","data","o","href","url","modified","moment","changed_on","fromNow","tags","owners","TableView","className","emptyWrapperType","EmptyWrapperType","Small","pageSize","columns","accessor","Header","Cell","row","original","TagsList","filter","tag","maxTags","disableSortBy","EmptyStateBig","image","buttonAction","buttonText","additionalItemsStyles","css","AllEntitiesContainer","grayscale","light4","AllEntitiesNav","light5","bold","withToasts","tagId","useQueryParam","NumberParam","setTag","useState","showTagModal","addSuccessToast","addDangerToast","useToasts","isLoading","setLoading","setObjects","editableTitleProps","placeholder","onSave","newDatasetName","canEdit","label","items","description","MetadataType","Description","push","owner","Owner","createdBy","getOwnerName","created_by","createdOn","created_on_delta_humanized","lastModified","LastModified","changed_on_delta_humanized","modifiedBy","changed_by","fetchTaggedObjects","fetchObjectsByTagIds","tagIds","types","object","object_type","error","fetchTag","fetchSingleTag","useEffect","Loading","TagModal","show","onHide","editTag","refreshData","PageHeaderWithActions","additionalActionsMenu","faveStarProps","itemId","saveFaveStar","showFaveStar","showTitlePanelItems","titlePanelAdditionalItems","MetadataBar","tooltipPlacement","rightPanelAdditionalItems","Button","buttonStyle","onClick","showMarginRight","menuDropdownProps","disabled","showMenuDropdown"],"sourceRoot":""}