{"version":3,"file":"5d6f856246a8c1d3aeda.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListViewCard/ImageLoader.tsx","webpack://superset/./src/dashboard/components/ColorSchemeControlWrapper.jsx","webpack://superset/./src/dashboard/components/PropertiesModal/index.tsx","webpack://superset/./src/dashboard/util/getFilterScopeNodesTree.js","webpack://superset/./src/dashboard/util/getFilterScopeParentNodes.js","webpack://superset/./src/dashboard/util/getKeyForFilterScopeTree.js","webpack://superset/./src/dashboard/util/getSelectedChartIdForFilterScopeTree.js","webpack://superset/./src/dashboard/util/buildFilterScopeTreeEntry.js","webpack://superset/./src/dashboard/util/getFilterScopeFromNodesTree.js","webpack://superset/./src/dashboard/components/filterscope/renderFilterScopeTreeNodes.jsx","webpack://superset/./src/dashboard/components/filterscope/treeIcons.jsx","webpack://superset/./src/dashboard/components/filterscope/FilterScopeTree.jsx","webpack://superset/./src/dashboard/components/filterscope/FilterFieldItem.jsx","webpack://superset/./src/dashboard/components/filterscope/renderFilterFieldTreeNodes.jsx","webpack://superset/./src/dashboard/components/filterscope/FilterFieldTree.jsx","webpack://superset/./src/dashboard/components/filterscope/FilterScopeSelector.jsx","webpack://superset/./src/dashboard/util/getFilterFieldNodesTree.js","webpack://superset/./src/dashboard/util/getRevertedFilterScope.ts","webpack://superset/./src/dashboard/containers/FilterScope.jsx","webpack://superset/./src/dashboard/components/filterscope/FilterScopeModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState, DetailedHTMLProps, HTMLAttributes } from 'react';\n\nimport { styled, logging } from '@superset-ui/core';\n\nexport type BackgroundPosition = 'top' | 'bottom';\ninterface ImageContainerProps {\n  src: string;\n  position: BackgroundPosition;\n}\n\nconst ImageContainer = styled.div<ImageContainerProps>`\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center ${({ position }) => position};\n  display: inline-block;\n  height: calc(100% - 1px);\n  width: calc(100% - 2px);\n  margin: 1px 1px 0 1px;\n`;\ninterface ImageLoaderProps\n  extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  fallback: string;\n  src: string;\n  isLoading?: boolean;\n  position: BackgroundPosition;\n}\n\nexport default function ImageLoader({\n  src,\n  fallback,\n  isLoading,\n  position,\n  ...rest\n}: ImageLoaderProps) {\n  const [imgSrc, setImgSrc] = useState<string>(fallback);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src)\n        .then(response => response.blob())\n        .then(blob => {\n          if (/image/.test(blob.type)) {\n            const imgURL = URL.createObjectURL(blob);\n            setImgSrc(imgURL);\n          }\n        })\n        .catch(errMsg => {\n          logging.error(errMsg);\n          setImgSrc(fallback);\n        });\n    }\n\n    return () => {\n      // theres a very brief period where isLoading is false and this component is about to unmount\n      // where the stale imgSrc is briefly rendered. Setting imgSrc to fallback smoothes the transition.\n      setImgSrc(fallback);\n    };\n  }, [src, fallback]);\n\n  return (\n    <ImageContainer\n      src={isLoading ? fallback : imgSrc}\n      {...rest}\n      position={position}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { getCategoricalSchemeRegistry, t } from '@superset-ui/core';\n\nimport ColorSchemeControl from 'src/explore/components/controls/ColorSchemeControl';\n\nconst propTypes = {\n  onChange: PropTypes.func,\n  labelMargin: PropTypes.number,\n  colorScheme: PropTypes.string,\n  hasCustomLabelsColor: PropTypes.bool,\n};\n\nconst defaultProps = {\n  hasCustomLabelsColor: false,\n  colorScheme: undefined,\n  onChange: () => {},\n};\n\nclass ColorSchemeControlWrapper extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { hovered: false };\n    this.categoricalSchemeRegistry = getCategoricalSchemeRegistry();\n    this.choices = this.categoricalSchemeRegistry.keys().map(s => [s, s]);\n    this.schemes = this.categoricalSchemeRegistry.getMap();\n  }\n\n  setHover(hovered) {\n    this.setState({ hovered });\n  }\n\n  render() {\n    const { colorScheme, labelMargin = 0, hasCustomLabelsColor } = this.props;\n    return (\n      <ColorSchemeControl\n        description={t(\n          \"Any color palette selected here will override the colors applied to this dashboard's individual charts\",\n        )}\n        labelMargin={labelMargin}\n        name=\"color_scheme\"\n        onChange={this.props.onChange}\n        value={colorScheme}\n        choices={this.choices}\n        clearable\n        schemes={this.schemes}\n        hovered={this.state.hovered}\n        hasCustomLabelsColor={hasCustomLabelsColor}\n      />\n    );\n  }\n}\n\nColorSchemeControlWrapper.propTypes = propTypes;\nColorSchemeControlWrapper.defaultProps = defaultProps;\n\nexport default ColorSchemeControlWrapper;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { omit } from 'lodash';\nimport { Input } from 'src/components/Input';\nimport { FormItem } from 'src/components/Form';\nimport jsonStringify from 'json-stringify-pretty-compact';\nimport Button from 'src/components/Button';\nimport { AntdForm, AsyncSelect, Col, Row } from 'src/components';\nimport rison from 'rison';\nimport {\n  ensureIsArray,\n  isFeatureEnabled,\n  FeatureFlag,\n  getCategoricalSchemeRegistry,\n  styled,\n  SupersetClient,\n  t,\n  getClientErrorObject,\n} from '@superset-ui/core';\n\nimport Modal from 'src/components/Modal';\nimport { JsonEditor } from 'src/components/AsyncAceEditor';\n\nimport ColorSchemeControlWrapper from 'src/dashboard/components/ColorSchemeControlWrapper';\nimport FilterScopeModal from 'src/dashboard/components/filterscope/FilterScopeModal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport TagType from 'src/types/TagType';\nimport { fetchTags, OBJECT_TYPES } from 'src/features/tags/tags';\nimport { loadTags } from 'src/components/Tags/utils';\nimport { applyColors, getColorNamespace } from 'src/utils/colorScheme';\n\nconst StyledFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\n\nconst StyledJsonEditor = styled(JsonEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\ntype PropertiesModalProps = {\n  dashboardId: number;\n  dashboardTitle?: string;\n  dashboardInfo?: Record<string, any>;\n  show?: boolean;\n  onHide?: () => void;\n  colorScheme?: string;\n  onSubmit?: (params: Record<string, any>) => void;\n  addSuccessToast: (message: string) => void;\n  addDangerToast: (message: string) => void;\n  onlyApply?: boolean;\n};\n\ntype Roles = { id: number; name: string }[];\ntype Owners = {\n  id: number;\n  full_name?: string;\n  first_name?: string;\n  last_name?: string;\n}[];\ntype DashboardInfo = {\n  id: number;\n  title: string;\n  slug: string;\n  certifiedBy: string;\n  certificationDetails: string;\n  isManagedExternally: boolean;\n};\n\nconst PropertiesModal = ({\n  addSuccessToast,\n  addDangerToast,\n  colorScheme: currentColorScheme,\n  dashboardId,\n  dashboardInfo: currentDashboardInfo,\n  dashboardTitle,\n  onHide = () => {},\n  onlyApply = false,\n  onSubmit = () => {},\n  show = false,\n}: PropertiesModalProps) => {\n  const [form] = AntdForm.useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAdvancedOpen, setIsAdvancedOpen] = useState(false);\n  const [colorScheme, setColorScheme] = useState(currentColorScheme);\n  const [jsonMetadata, setJsonMetadata] = useState('');\n  const [dashboardInfo, setDashboardInfo] = useState<DashboardInfo>();\n  const [owners, setOwners] = useState<Owners>([]);\n  const [roles, setRoles] = useState<Roles>([]);\n  const saveLabel = onlyApply ? t('Apply') : t('Save');\n  const [tags, setTags] = useState<TagType[]>([]);\n  const categoricalSchemeRegistry = getCategoricalSchemeRegistry();\n\n  const tagsAsSelectValues = useMemo(() => {\n    const selectTags = tags.map((tag: { id: number; name: string }) => ({\n      value: tag.id,\n      label: tag.name,\n    }));\n    return selectTags;\n  }, [tags.length]);\n\n  const handleErrorResponse = async (response: Response) => {\n    const { error, statusText, message } = await getClientErrorObject(response);\n    let errorText = error || statusText || t('An error has occurred');\n    if (typeof message === 'object' && 'json_metadata' in message) {\n      errorText = (message as { json_metadata: string }).json_metadata;\n    } else if (typeof message === 'string') {\n      errorText = message;\n\n      if (message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n    }\n\n    Modal.error({\n      title: t('Error'),\n      content: errorText,\n      okButtonProps: { danger: true, className: 'btn-danger' },\n    });\n  };\n\n  const loadAccessOptions = useCallback(\n    (accessType = 'owners', input = '', page: number, pageSize: number) => {\n      const query = rison.encode({\n        filter: input,\n        page,\n        page_size: pageSize,\n      });\n      return SupersetClient.get({\n        endpoint: `/api/v1/dashboard/related/${accessType}?q=${query}`,\n      }).then(response => ({\n        data: response.json.result\n          .filter((item: { extra: { active: boolean } }) =>\n            item.extra.active !== undefined ? item.extra.active : true,\n          )\n          .map((item: { value: number; text: string }) => ({\n            value: item.value,\n            label: item.text,\n          })),\n        totalCount: response.json.count,\n      }));\n    },\n    [],\n  );\n\n  const handleDashboardData = useCallback(\n    dashboardData => {\n      const {\n        id,\n        dashboard_title,\n        slug,\n        certified_by,\n        certification_details,\n        owners,\n        roles,\n        metadata,\n        is_managed_externally,\n      } = dashboardData;\n      const dashboardInfo = {\n        id,\n        title: dashboard_title,\n        slug: slug || '',\n        certifiedBy: certified_by || '',\n        certificationDetails: certification_details || '',\n        isManagedExternally: is_managed_externally || false,\n      };\n\n      form.setFieldsValue(dashboardInfo);\n      setDashboardInfo(dashboardInfo);\n      setOwners(owners);\n      setRoles(roles);\n      setColorScheme(metadata.color_scheme);\n\n      const metaDataCopy = omit(metadata, [\n        'positions',\n        'shared_label_colors',\n        'color_scheme_domain',\n      ]);\n\n      setJsonMetadata(metaDataCopy ? jsonStringify(metaDataCopy) : '');\n    },\n    [form],\n  );\n\n  const fetchDashboardDetails = useCallback(() => {\n    setIsLoading(true);\n    // We fetch the dashboard details because not all code\n    // that renders this component have all the values we need.\n    // At some point when we have a more consistent frontend\n    // datamodel, the dashboard could probably just be passed as a prop.\n    SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${dashboardId}`,\n    }).then(response => {\n      const dashboard = response.json.result;\n      const jsonMetadataObj = dashboard.json_metadata?.length\n        ? JSON.parse(dashboard.json_metadata)\n        : {};\n\n      handleDashboardData({\n        ...dashboard,\n        metadata: jsonMetadataObj,\n      });\n\n      setIsLoading(false);\n    }, handleErrorResponse);\n  }, [dashboardId, handleDashboardData]);\n\n  const getJsonMetadata = () => {\n    try {\n      const jsonMetadataObj = jsonMetadata?.length\n        ? JSON.parse(jsonMetadata)\n        : {};\n      return jsonMetadataObj;\n    } catch (_) {\n      return {};\n    }\n  };\n\n  const handleOnChangeOwners = (owners: { value: number; label: string }[]) => {\n    const parsedOwners: Owners = ensureIsArray(owners).map(o => ({\n      id: o.value,\n      full_name: o.label,\n    }));\n    setOwners(parsedOwners);\n  };\n\n  const handleOnChangeRoles = (roles: { value: number; label: string }[]) => {\n    const parsedRoles: Roles = ensureIsArray(roles).map(r => ({\n      id: r.value,\n      name: r.label,\n    }));\n    setRoles(parsedRoles);\n  };\n\n  const handleOwnersSelectValue = () => {\n    const parsedOwners = (owners || []).map(\n      (owner: {\n        id: number;\n        first_name?: string;\n        last_name?: string;\n        full_name?: string;\n      }) => ({\n        value: owner.id,\n        label: owner.full_name || `${owner.first_name} ${owner.last_name}`,\n      }),\n    );\n    return parsedOwners;\n  };\n\n  const handleRolesSelectValue = () => {\n    const parsedRoles = (roles || []).map(\n      (role: { id: number; name: string }) => ({\n        value: role.id,\n        label: `${role.name}`,\n      }),\n    );\n    return parsedRoles;\n  };\n\n  const onColorSchemeChange = (\n    colorScheme = '',\n    { updateMetadata = true } = {},\n  ) => {\n    // check that color_scheme is valid\n    const colorChoices = categoricalSchemeRegistry.keys();\n    const jsonMetadataObj = getJsonMetadata();\n\n    // only fire if the color_scheme is present and invalid\n    if (colorScheme && !colorChoices.includes(colorScheme)) {\n      Modal.error({\n        title: t('Error'),\n        content: t('A valid color scheme is required'),\n        okButtonProps: { danger: true, className: 'btn-danger' },\n      });\n      throw new Error('A valid color scheme is required');\n    }\n\n    // update metadata to match selection\n    if (updateMetadata) {\n      jsonMetadataObj.color_scheme = colorScheme;\n      jsonMetadataObj.label_colors = jsonMetadataObj.label_colors || {};\n\n      setJsonMetadata(jsonStringify(jsonMetadataObj));\n    }\n    setColorScheme(colorScheme);\n  };\n\n  const onFinish = () => {\n    const { title, slug, certifiedBy, certificationDetails } =\n      form.getFieldsValue();\n    let currentColorScheme = colorScheme;\n    let currentJsonMetadata = jsonMetadata;\n\n    // validate currentJsonMetadata\n    let metadata;\n    try {\n      if (\n        !currentJsonMetadata.startsWith('{') ||\n        !currentJsonMetadata.endsWith('}')\n      ) {\n        throw new Error();\n      }\n      metadata = JSON.parse(currentJsonMetadata);\n    } catch (error) {\n      addDangerToast(t('JSON metadata is invalid!'));\n      return;\n    }\n\n    const copyMetadata = { ...metadata };\n    const colorNamespace = getColorNamespace(metadata?.color_namespace);\n\n    // color scheme in json metadata has precedence over selection\n    currentColorScheme = metadata?.color_scheme || colorScheme;\n\n    // remove information from user facing input\n    if (metadata?.shared_label_colors) {\n      delete metadata.shared_label_colors;\n    }\n    if (metadata?.color_scheme_domain) {\n      delete metadata.color_scheme_domain;\n    }\n\n    // only apply colors, the user has not saved yet\n    applyColors(copyMetadata, true);\n\n    currentJsonMetadata = jsonStringify(metadata);\n\n    onColorSchemeChange(currentColorScheme, {\n      updateMetadata: false,\n    });\n\n    const moreOnSubmitProps: { roles?: Roles } = {};\n    const morePutProps: { roles?: number[]; tags?: (number | undefined)[] } =\n      {};\n    if (isFeatureEnabled(FeatureFlag.DashboardRbac)) {\n      moreOnSubmitProps.roles = roles;\n      morePutProps.roles = (roles || []).map(r => r.id);\n    }\n    if (isFeatureEnabled(FeatureFlag.TaggingSystem)) {\n      morePutProps.tags = tags.map(tag => tag.id);\n    }\n    const onSubmitProps = {\n      id: dashboardId,\n      title,\n      slug,\n      jsonMetadata: currentJsonMetadata,\n      owners,\n      colorScheme: currentColorScheme,\n      colorNamespace,\n      certifiedBy,\n      certificationDetails,\n      ...moreOnSubmitProps,\n    };\n    if (onlyApply) {\n      onSubmit(onSubmitProps);\n      onHide();\n      addSuccessToast(t('Dashboard properties updated'));\n    } else {\n      SupersetClient.put({\n        endpoint: `/api/v1/dashboard/${dashboardId}`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          dashboard_title: title,\n          slug: slug || null,\n          json_metadata: currentJsonMetadata || null,\n          owners: (owners || []).map(o => o.id),\n          certified_by: certifiedBy || null,\n          certification_details:\n            certifiedBy && certificationDetails ? certificationDetails : null,\n          ...morePutProps,\n        }),\n      }).then(() => {\n        onSubmit(onSubmitProps);\n        onHide();\n        addSuccessToast(t('The dashboard has been saved'));\n      }, handleErrorResponse);\n    }\n  };\n\n  const getRowsWithoutRoles = () => {\n    const jsonMetadataObj = getJsonMetadata();\n    const hasCustomLabelsColor = !!Object.keys(\n      jsonMetadataObj?.label_colors || {},\n    ).length;\n\n    return (\n      <Row gutter={16}>\n        <Col xs={24} md={12}>\n          <h3 style={{ marginTop: '1em' }}>{t('Access')}</h3>\n          <StyledFormItem label={t('Owners')}>\n            <AsyncSelect\n              allowClear\n              ariaLabel={t('Owners')}\n              disabled={isLoading}\n              mode=\"multiple\"\n              onChange={handleOnChangeOwners}\n              options={(input, page, pageSize) =>\n                loadAccessOptions('owners', input, page, pageSize)\n              }\n              value={handleOwnersSelectValue()}\n            />\n          </StyledFormItem>\n          <p className=\"help-block\">\n            {t(\n              'Owners is a list of users who can alter the dashboard. Searchable by name or username.',\n            )}\n          </p>\n        </Col>\n        <Col xs={24} md={12}>\n          <h3 style={{ marginTop: '1em' }}>{t('Colors')}</h3>\n          <ColorSchemeControlWrapper\n            hasCustomLabelsColor={hasCustomLabelsColor}\n            onChange={onColorSchemeChange}\n            colorScheme={colorScheme}\n            labelMargin={4}\n          />\n        </Col>\n      </Row>\n    );\n  };\n\n  const getRowsWithRoles = () => {\n    const jsonMetadataObj = getJsonMetadata();\n    const hasCustomLabelsColor = !!Object.keys(\n      jsonMetadataObj?.label_colors || {},\n    ).length;\n\n    return (\n      <>\n        <Row>\n          <Col xs={24} md={24}>\n            <h3 style={{ marginTop: '1em' }}>{t('Access')}</h3>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col xs={24} md={12}>\n            <StyledFormItem label={t('Owners')}>\n              <AsyncSelect\n                allowClear\n                allowNewOptions\n                ariaLabel={t('Owners')}\n                disabled={isLoading}\n                mode=\"multiple\"\n                onChange={handleOnChangeOwners}\n                options={(input, page, pageSize) =>\n                  loadAccessOptions('owners', input, page, pageSize)\n                }\n                value={handleOwnersSelectValue()}\n              />\n            </StyledFormItem>\n            <p className=\"help-block\">\n              {t(\n                'Owners is a list of users who can alter the dashboard. Searchable by name or username.',\n              )}\n            </p>\n          </Col>\n          <Col xs={24} md={12}>\n            <StyledFormItem label={t('Roles')}>\n              <AsyncSelect\n                allowClear\n                ariaLabel={t('Roles')}\n                disabled={isLoading}\n                mode=\"multiple\"\n                onChange={handleOnChangeRoles}\n                options={(input, page, pageSize) =>\n                  loadAccessOptions('roles', input, page, pageSize)\n                }\n                value={handleRolesSelectValue()}\n              />\n            </StyledFormItem>\n            <p className=\"help-block\">\n              {t(\n                'Roles is a list which defines access to the dashboard. Granting a role access to a dashboard will bypass dataset level checks. If no roles are defined, regular access permissions apply.',\n              )}\n            </p>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={24} md={12}>\n            <ColorSchemeControlWrapper\n              hasCustomLabelsColor={hasCustomLabelsColor}\n              onChange={onColorSchemeChange}\n              colorScheme={colorScheme}\n              labelMargin={4}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  };\n\n  useEffect(() => {\n    if (show) {\n      if (!currentDashboardInfo) {\n        fetchDashboardDetails();\n      } else {\n        handleDashboardData(currentDashboardInfo);\n      }\n    }\n\n    JsonEditor.preload();\n  }, [currentDashboardInfo, fetchDashboardDetails, handleDashboardData, show]);\n\n  useEffect(() => {\n    // the title can be changed inline in the dashboard, this catches it\n    if (\n      dashboardTitle &&\n      dashboardInfo &&\n      dashboardInfo.title !== dashboardTitle\n    ) {\n      form.setFieldsValue({\n        ...dashboardInfo,\n        title: dashboardTitle,\n      });\n    }\n  }, [dashboardInfo, dashboardTitle, form]);\n\n  useEffect(() => {\n    if (!isFeatureEnabled(FeatureFlag.TaggingSystem)) return;\n    try {\n      fetchTags(\n        {\n          objectType: OBJECT_TYPES.DASHBOARD,\n          objectId: dashboardId,\n          includeTypes: false,\n        },\n        (tags: TagType[]) => setTags(tags),\n        (error: Response) => {\n          addDangerToast(`Error fetching tags: ${error.text}`);\n        },\n      );\n    } catch (error) {\n      handleErrorResponse(error);\n    }\n  }, [dashboardId]);\n\n  const handleChangeTags = (tags: { label: string; value: number }[]) => {\n    const parsedTags: TagType[] = ensureIsArray(tags).map(r => ({\n      id: r.value,\n      name: r.label,\n    }));\n    setTags(parsedTags);\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      title={t('Dashboard properties')}\n      footer={\n        <>\n          <Button\n            htmlType=\"button\"\n            buttonSize=\"small\"\n            onClick={onHide}\n            data-test=\"properties-modal-cancel-button\"\n            cta\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            data-test=\"properties-modal-apply-button\"\n            onClick={form.submit}\n            buttonSize=\"small\"\n            buttonStyle=\"primary\"\n            className=\"m-r-5\"\n            cta\n            disabled={dashboardInfo?.isManagedExternally}\n            tooltip={\n              dashboardInfo?.isManagedExternally\n                ? t(\n                    \"This dashboard is managed externally, and can't be edited in Superset\",\n                  )\n                : ''\n            }\n          >\n            {saveLabel}\n          </Button>\n        </>\n      }\n      responsive\n    >\n      <AntdForm\n        form={form}\n        onFinish={onFinish}\n        data-test=\"dashboard-edit-properties-form\"\n        layout=\"vertical\"\n        initialValues={dashboardInfo}\n      >\n        <Row>\n          <Col xs={24} md={24}>\n            <h3>{t('Basic information')}</h3>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col xs={24} md={12}>\n            <FormItem label={t('Name')} name=\"title\">\n              <Input\n                data-test=\"dashboard-title-input\"\n                type=\"text\"\n                disabled={isLoading}\n              />\n            </FormItem>\n          </Col>\n          <Col xs={24} md={12}>\n            <StyledFormItem label={t('URL slug')} name=\"slug\">\n              <Input type=\"text\" disabled={isLoading} />\n            </StyledFormItem>\n            <p className=\"help-block\">\n              {t('A readable URL for your dashboard')}\n            </p>\n          </Col>\n        </Row>\n        {isFeatureEnabled(FeatureFlag.DashboardRbac)\n          ? getRowsWithRoles()\n          : getRowsWithoutRoles()}\n        <Row>\n          <Col xs={24} md={24}>\n            <h3>{t('Certification')}</h3>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col xs={24} md={12}>\n            <StyledFormItem label={t('Certified by')} name=\"certifiedBy\">\n              <Input type=\"text\" disabled={isLoading} />\n            </StyledFormItem>\n            <p className=\"help-block\">\n              {t('Person or group that has certified this dashboard.')}\n            </p>\n          </Col>\n          <Col xs={24} md={12}>\n            <StyledFormItem\n              label={t('Certification details')}\n              name=\"certificationDetails\"\n            >\n              <Input type=\"text\" disabled={isLoading} />\n            </StyledFormItem>\n            <p className=\"help-block\">\n              {t('Any additional detail to show in the certification tooltip.')}\n            </p>\n          </Col>\n        </Row>\n        {isFeatureEnabled(FeatureFlag.TaggingSystem) ? (\n          <Row gutter={16}>\n            <Col xs={24} md={12}>\n              <h3 css={{ marginTop: '1em' }}>{t('Tags')}</h3>\n            </Col>\n          </Row>\n        ) : null}\n        {isFeatureEnabled(FeatureFlag.TaggingSystem) ? (\n          <Row gutter={16}>\n            <Col xs={24} md={12}>\n              <StyledFormItem>\n                <AsyncSelect\n                  ariaLabel=\"Tags\"\n                  mode=\"multiple\"\n                  value={tagsAsSelectValues}\n                  options={loadTags}\n                  onChange={handleChangeTags}\n                  allowClear\n                />\n              </StyledFormItem>\n              <p className=\"help-block\">\n                {t('A list of tags that have been applied to this chart.')}\n              </p>\n            </Col>\n          </Row>\n        ) : null}\n        <Row>\n          <Col xs={24} md={24}>\n            <h3 style={{ marginTop: '1em' }}>\n              <Button\n                buttonStyle=\"link\"\n                onClick={() => setIsAdvancedOpen(!isAdvancedOpen)}\n              >\n                <i\n                  className={`fa fa-angle-${isAdvancedOpen ? 'down' : 'right'}`}\n                  style={{ minWidth: '1em' }}\n                />\n                {t('Advanced')}\n              </Button>\n            </h3>\n            {isAdvancedOpen && (\n              <>\n                <StyledFormItem label={t('JSON metadata')}>\n                  <StyledJsonEditor\n                    showLoadingForImport\n                    name=\"json_metadata\"\n                    value={jsonMetadata}\n                    onChange={setJsonMetadata}\n                    tabSize={2}\n                    width=\"100%\"\n                    height=\"200px\"\n                    wrapEnabled\n                  />\n                </StyledFormItem>\n                <p className=\"help-block\">\n                  {t(\n                    'This JSON object is generated dynamically when clicking the save or overwrite button in the dashboard view. It is exposed here for reference and for power users who may want to alter specific parameters.',\n                  )}\n                  {onlyApply && (\n                    <>\n                      {' '}\n                      {t(\n                        'Please DO NOT overwrite the \"filter_scopes\" key.',\n                      )}{' '}\n                      <FilterScopeModal\n                        triggerNode={\n                          <span className=\"alert-link\">\n                            {t('Use \"%(menuName)s\" menu instead.', {\n                              menuName: t('Set filter mapping'),\n                            })}\n                          </span>\n                        }\n                      />\n                    </>\n                  )}\n                </p>\n              </>\n            )}\n          </Col>\n        </Row>\n      </AntdForm>\n    </Modal>\n  );\n};\n\nexport default withToasts(PropertiesModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isEmpty } from 'lodash';\nimport { t } from '@superset-ui/core';\n\nimport { DASHBOARD_ROOT_ID } from './constants';\nimport { CHART_TYPE, DASHBOARD_ROOT_TYPE, TAB_TYPE } from './componentTypes';\n\nconst FILTER_SCOPE_CONTAINER_TYPES = [TAB_TYPE, DASHBOARD_ROOT_TYPE];\n\nfunction traverse({\n  currentNode = {},\n  components = {},\n  filterFields = [],\n  selectedChartId,\n}) {\n  if (!currentNode) {\n    return null;\n  }\n\n  const { type } = currentNode;\n  if (\n    CHART_TYPE === type &&\n    currentNode &&\n    currentNode.meta &&\n    currentNode.meta.chartId\n  ) {\n    const chartNode = {\n      value: currentNode.meta.chartId,\n      label:\n        currentNode.meta.sliceName || `${type} ${currentNode.meta.chartId}`,\n      type,\n      showCheckbox: selectedChartId !== currentNode.meta.chartId,\n    };\n\n    return {\n      ...chartNode,\n      children: [],\n    };\n  }\n\n  let children = [];\n  if (currentNode.children && currentNode.children.length) {\n    currentNode.children.forEach(child => {\n      const childNodeTree = traverse({\n        currentNode: components[child],\n        components,\n        filterFields,\n        selectedChartId,\n      });\n\n      const childType = components[child].type;\n      if (FILTER_SCOPE_CONTAINER_TYPES.includes(childType)) {\n        children.push(childNodeTree);\n      } else {\n        children = children.concat(childNodeTree);\n      }\n    });\n  }\n\n  if (FILTER_SCOPE_CONTAINER_TYPES.includes(type)) {\n    let label = null;\n    if (type === DASHBOARD_ROOT_TYPE) {\n      label = t('All charts');\n    } else {\n      label =\n        currentNode.meta && currentNode.meta.text\n          ? currentNode.meta.text\n          : `${type} ${currentNode.id}`;\n    }\n\n    return {\n      value: currentNode.id,\n      label,\n      type,\n      children,\n    };\n  }\n\n  return children;\n}\n\nexport default function getFilterScopeNodesTree({\n  components = {},\n  filterFields = [],\n  selectedChartId,\n}) {\n  if (isEmpty(components)) {\n    return [];\n  }\n\n  const root = traverse({\n    currentNode: components[DASHBOARD_ROOT_ID],\n    components,\n    filterFields,\n    selectedChartId,\n  });\n  return [\n    {\n      ...root,\n    },\n  ];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function getFilterScopeParentNodes(nodes = [], depthLimit = -1) {\n  const parentNodes = [];\n  const traverse = (currentNode, depth) => {\n    if (!currentNode) {\n      return;\n    }\n\n    if (currentNode.children && (depthLimit === -1 || depth < depthLimit)) {\n      parentNodes.push(currentNode.value);\n      currentNode.children.forEach(child => traverse(child, depth + 1));\n    }\n  };\n\n  if (nodes.length > 0) {\n    nodes.forEach(node => {\n      traverse(node, 0);\n    });\n  }\n\n  return parentNodes;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { safeStringify } from '../../utils/safeStringify';\n\nexport default function getKeyForFilterScopeTree({\n  activeFilterField,\n  checkedFilterFields,\n}) {\n  return safeStringify(\n    activeFilterField ? [activeFilterField] : checkedFilterFields,\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getChartIdAndColumnFromFilterKey } from './getDashboardFilterKey';\n\nexport default function getSelectedChartIdForFilterScopeTree({\n  activeFilterField,\n  checkedFilterFields,\n}) {\n  // this function returns chart id based on current filter scope selector local state:\n  // 1. if in single-edit mode, return the chart id for selected filter field.\n  // 2. if in multi-edit mode, if all filter fields are from same chart id,\n  // return the single chart id.\n  // otherwise, there is no chart to disable.\n  if (activeFilterField) {\n    return getChartIdAndColumnFromFilterKey(activeFilterField).chartId;\n  }\n\n  if (checkedFilterFields.length) {\n    const { chartId } = getChartIdAndColumnFromFilterKey(\n      checkedFilterFields[0],\n    );\n\n    if (\n      checkedFilterFields.some(\n        filterKey =>\n          getChartIdAndColumnFromFilterKey(filterKey).chartId !== chartId,\n      )\n    ) {\n      return null;\n    }\n    return chartId;\n  }\n\n  return null;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getFilterScopeNodesTree from './getFilterScopeNodesTree';\nimport getFilterScopeParentNodes from './getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from './getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from './getSelectedChartIdForFilterScopeTree';\n\nexport default function buildFilterScopeTreeEntry({\n  checkedFilterFields = [],\n  activeFilterField,\n  filterScopeMap = {},\n  layout = {},\n}) {\n  const key = getKeyForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField,\n  });\n  const editingList = activeFilterField\n    ? [activeFilterField]\n    : checkedFilterFields;\n  const selectedChartId = getSelectedChartIdForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField,\n  });\n  const nodes = getFilterScopeNodesTree({\n    components: layout,\n    filterFields: editingList,\n    selectedChartId,\n  });\n  const checkedChartIdSet = new Set();\n  editingList.forEach(filterField => {\n    (filterScopeMap[filterField].checked || []).forEach(chartId => {\n      checkedChartIdSet.add(`${chartId}:${filterField}`);\n    });\n  });\n  const checked = [...checkedChartIdSet];\n  const expanded = filterScopeMap[key]\n    ? filterScopeMap[key].expanded\n    : getFilterScopeParentNodes(nodes, 1);\n\n  return {\n    [key]: {\n      nodes,\n      nodesFiltered: [...nodes],\n      checked,\n      expanded,\n    },\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { flow, keyBy, mapValues } from 'lodash/fp';\nimport { flatMap, isEmpty } from 'lodash';\n\nimport { CHART_TYPE, TAB_TYPE } from './componentTypes';\nimport { getChartIdAndColumnFromFilterKey } from './getDashboardFilterKey';\n\nfunction getImmuneChartIdsFromTabsNotInScope({ tabs = [], tabsInScope = [] }) {\n  const chartsNotInScope = [];\n  tabs.forEach(({ value: tab, children: tabChildren }) => {\n    if (tabChildren && !tabsInScope.includes(tab)) {\n      tabChildren.forEach(({ value: subTab, children: subTabChildren }) => {\n        if (subTabChildren && !tabsInScope.includes(subTab)) {\n          chartsNotInScope.push(\n            ...subTabChildren.filter(({ type }) => type === CHART_TYPE),\n          );\n        }\n      });\n    }\n  });\n\n  // return chartId only\n  return chartsNotInScope.map(({ value }) => value);\n}\nfunction getTabChildrenScope({\n  tabScopes,\n  parentNodeValue,\n  forceAggregate = false,\n  hasChartSiblings = false,\n  tabChildren = [],\n  immuneChartSiblings = [],\n}) {\n  // if all sub-tabs are in scope, or forceAggregate =  true\n  // aggregate scope to parentNodeValue\n  if (\n    forceAggregate ||\n    (!hasChartSiblings &&\n      Object.entries(tabScopes).every(\n        ([key, { scope }]) => scope && scope.length && key === scope[0],\n      ))\n  ) {\n    // get all charts from tabChildren that is not in scope\n    const immuneChartIdsFromTabsNotInScope =\n      getImmuneChartIdsFromTabsNotInScope({\n        tabs: tabChildren,\n        tabsInScope: flatMap(tabScopes, ({ scope }) => scope),\n      });\n    const immuneChartIdsFromTabsInScope = flatMap(\n      Object.values(tabScopes),\n      ({ immune }) => immune,\n    );\n    const immuneCharts = [\n      ...new Set([\n        ...immuneChartIdsFromTabsNotInScope,\n        ...immuneChartIdsFromTabsInScope,\n      ]),\n    ];\n    return {\n      scope: [parentNodeValue],\n      immune: immuneCharts,\n    };\n  }\n\n  const componentsInScope = Object.values(tabScopes).filter(\n    ({ scope }) => scope && scope.length,\n  );\n  return {\n    scope: flatMap(componentsInScope, ({ scope }) => scope),\n    immune: componentsInScope.length\n      ? flatMap(componentsInScope, ({ immune }) => immune)\n      : flatMap(Object.values(tabScopes), ({ immune }) => immune).concat(\n          immuneChartSiblings,\n        ),\n  };\n}\n\nfunction traverse({ currentNode = {}, filterId, checkedChartIds = [] }) {\n  if (!currentNode) {\n    return {};\n  }\n\n  const { value: currentValue, children } = currentNode;\n  const chartChildren = children.filter(({ type }) => type === CHART_TYPE);\n  const tabChildren = children.filter(({ type }) => type === TAB_TYPE);\n\n  const chartsImmune = chartChildren\n    .filter(\n      ({ value }) => filterId !== value && !checkedChartIds.includes(value),\n    )\n    .map(({ value }) => value);\n  const tabScopes = flow(\n    keyBy(child => child.value),\n    mapValues(child =>\n      traverse({\n        currentNode: child,\n        filterId,\n        checkedChartIds,\n      }),\n    ),\n  )(tabChildren);\n\n  // if any chart type child is in scope,\n  // no matter has tab children or not, current node should be scope\n  if (\n    !isEmpty(chartChildren) &&\n    chartChildren.some(({ value }) => checkedChartIds.includes(value))\n  ) {\n    if (isEmpty(tabChildren)) {\n      return { scope: [currentValue], immune: chartsImmune };\n    }\n\n    const { scope, immune } = getTabChildrenScope({\n      tabScopes,\n      parentNodeValue: currentValue,\n      forceAggregate: true,\n      tabChildren,\n    });\n    return {\n      scope,\n      immune: chartsImmune.concat(immune),\n    };\n  }\n\n  // has tab children but only some sub-tab in scope\n  if (tabChildren.length) {\n    return getTabChildrenScope({\n      tabScopes,\n      parentNodeValue: currentValue,\n      hasChartSiblings: !isEmpty(chartChildren),\n      tabChildren,\n      immuneChartSiblings: chartsImmune,\n    });\n  }\n\n  // no tab children and no chart children in scope\n  return {\n    scope: [],\n    immune: chartsImmune,\n  };\n}\n\nexport default function getFilterScopeFromNodesTree({\n  filterKey,\n  nodes = [],\n  checkedChartIds = [],\n}) {\n  if (nodes.length) {\n    const { chartId } = getChartIdAndColumnFromFilterKey(filterKey);\n    return traverse({\n      currentNode: nodes[0],\n      filterId: chartId,\n      checkedChartIds,\n    });\n  }\n\n  return {};\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport cx from 'classnames';\nimport { styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { CHART_TYPE } from 'src/dashboard/util/componentTypes';\n\nconst ChartIcon = styled(Icons.BarChartOutlined)`\n  ${({ theme }) => `\n    position: relative;\n    top: ${theme.gridUnit - 1}px;\n    color: ${theme.colors.primary.base};\n    margin-right: ${theme.gridUnit * 2}px;\n  `}\n`;\n\nfunction traverse({ currentNode = {}, selectedChartId }) {\n  if (!currentNode) {\n    return null;\n  }\n\n  const { label, value, type, children } = currentNode;\n  if (children && children.length) {\n    const updatedChildren = children.map(child =>\n      traverse({ currentNode: child, selectedChartId }),\n    );\n    return {\n      ...currentNode,\n      label: (\n        <span\n          className={cx(`filter-scope-type ${type.toLowerCase()}`, {\n            'selected-filter': selectedChartId === value,\n          })}\n        >\n          {type === CHART_TYPE && <ChartIcon />}\n          {label}\n        </span>\n      ),\n      children: updatedChildren,\n    };\n  }\n  return {\n    ...currentNode,\n    label: (\n      <span\n        className={cx(`filter-scope-type ${type.toLowerCase()}`, {\n          'selected-filter': selectedChartId === value,\n        })}\n      >\n        {label}\n      </span>\n    ),\n  };\n}\n\nexport default function renderFilterScopeTreeNodes({ nodes, selectedChartId }) {\n  if (!nodes) {\n    return [];\n  }\n\n  return nodes.map(node => traverse({ currentNode: node, selectedChartId }));\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\n\nimport {\n  CheckboxChecked,\n  CheckboxUnchecked,\n  CheckboxHalfChecked,\n} from 'src/components/Checkbox/CheckboxIcons';\n\nconst treeIcons = {\n  check: <CheckboxChecked />,\n  uncheck: <CheckboxUnchecked />,\n  halfCheck: <CheckboxHalfChecked />,\n  expandClose: <span className=\"rct-icon rct-icon-expand-close\" />,\n  expandOpen: <span className=\"rct-icon rct-icon-expand-open\" />,\n  expandAll: (\n    <span className=\"rct-icon rct-icon-expand-all\">{t('Expand all')}</span>\n  ),\n  collapseAll: (\n    <span className=\"rct-icon rct-icon-collapse-all\">{t('Collapse all')}</span>\n  ),\n  parentClose: <span className=\"rct-icon rct-icon-parent-close\" />,\n  parentOpen: <span className=\"rct-icon rct-icon-parent-open\" />,\n  leaf: <span className=\"rct-icon rct-icon-leaf\" />,\n};\n\nexport default treeIcons;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { filterScopeSelectorTreeNodePropShape } from 'src/dashboard/util/propShapes';\nimport renderFilterScopeTreeNodes from './renderFilterScopeTreeNodes';\nimport treeIcons from './treeIcons';\n\nconst propTypes = {\n  nodes: PropTypes.arrayOf(filterScopeSelectorTreeNodePropShape).isRequired,\n  checked: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ).isRequired,\n  expanded: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ).isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  selectedChartId: PropTypes.number,\n};\n\nconst defaultProps = {\n  selectedChartId: null,\n};\n\nconst NOOP = () => {};\n\nexport default function FilterScopeTree({\n  nodes = [],\n  checked = [],\n  expanded = [],\n  onCheck,\n  onExpand,\n  selectedChartId,\n}) {\n  return (\n    <CheckboxTree\n      showExpandAll\n      expandOnClick\n      showNodeIcon={false}\n      nodes={renderFilterScopeTreeNodes({ nodes, selectedChartId })}\n      checked={checked}\n      expanded={expanded}\n      onCheck={onCheck}\n      onExpand={onExpand}\n      onClick={NOOP}\n      icons={treeIcons}\n    />\n  );\n}\n\nFilterScopeTree.propTypes = propTypes;\nFilterScopeTree.defaultProps = defaultProps;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { FormLabel } from 'src/components/Form';\n\nconst propTypes = {\n  label: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n};\n\nexport default function FilterFieldItem({ label, isSelected }) {\n  return (\n    <span\n      className={cx('filter-field-item filter-container', {\n        'is-selected': isSelected,\n      })}\n    >\n      <FormLabel htmlFor={label}>{label}</FormLabel>\n    </span>\n  );\n}\n\nFilterFieldItem.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport FilterFieldItem from './FilterFieldItem';\n\nexport default function renderFilterFieldTreeNodes({ nodes, activeKey }) {\n  if (!nodes) {\n    return [];\n  }\n\n  const root = nodes[0];\n  const allFilterNodes = root.children;\n  const children = allFilterNodes.map(node => ({\n    ...node,\n    children: node.children.map(child => {\n      const { label, value } = child;\n      return {\n        ...child,\n        label: (\n          <FilterFieldItem isSelected={value === activeKey} label={label} />\n        ),\n      };\n    }),\n  }));\n\n  return [\n    {\n      ...root,\n      label: <span className=\"root\">{root.label}</span>,\n      children,\n    },\n  ];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { filterScopeSelectorTreeNodePropShape } from 'src/dashboard/util/propShapes';\nimport treeIcons from './treeIcons';\nimport renderFilterFieldTreeNodes from './renderFilterFieldTreeNodes';\n\nconst propTypes = {\n  activeKey: PropTypes.string,\n  nodes: PropTypes.arrayOf(filterScopeSelectorTreeNodePropShape).isRequired,\n  checked: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ).isRequired,\n  expanded: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ).isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  activeKey: null,\n};\n\nexport default function FilterFieldTree({\n  activeKey,\n  nodes = [],\n  checked = [],\n  expanded = [],\n  onClick,\n  onCheck,\n  onExpand,\n}) {\n  return (\n    <CheckboxTree\n      showExpandAll\n      showNodeIcon={false}\n      expandOnClick\n      nodes={renderFilterFieldTreeNodes({ nodes, activeKey })}\n      checked={checked}\n      expanded={expanded}\n      onClick={onClick}\n      onCheck={onCheck}\n      onExpand={onExpand}\n      icons={treeIcons}\n    />\n  );\n}\n\nFilterFieldTree.propTypes = propTypes;\nFilterFieldTree.defaultProps = defaultProps;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport { css, t, styled } from '@superset-ui/core';\n\nimport buildFilterScopeTreeEntry from 'src/dashboard/util/buildFilterScopeTreeEntry';\nimport getFilterScopeNodesTree from 'src/dashboard/util/getFilterScopeNodesTree';\nimport getFilterFieldNodesTree from 'src/dashboard/util/getFilterFieldNodesTree';\nimport getFilterScopeParentNodes from 'src/dashboard/util/getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from 'src/dashboard/util/getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from 'src/dashboard/util/getSelectedChartIdForFilterScopeTree';\nimport getFilterScopeFromNodesTree from 'src/dashboard/util/getFilterScopeFromNodesTree';\nimport getRevertedFilterScope from 'src/dashboard/util/getRevertedFilterScope';\nimport { getChartIdsInFilterScope } from 'src/dashboard/util/activeDashboardFilters';\nimport {\n  getChartIdAndColumnFromFilterKey,\n  getDashboardFilterKey,\n} from 'src/dashboard/util/getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from 'src/dashboard/util/constants';\nimport { dashboardFilterPropShape } from 'src/dashboard/util/propShapes';\nimport FilterScopeTree from './FilterScopeTree';\nimport FilterFieldTree from './FilterFieldTree';\n\nconst propTypes = {\n  dashboardFilters: PropTypes.objectOf(dashboardFilterPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n\n  updateDashboardFiltersScope: PropTypes.func.isRequired,\n  setUnsavedChanges: PropTypes.func.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n};\n\nconst ScopeContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n    height: 80%;\n    margin-right: ${theme.gridUnit * -6}px;\n    font-size: ${theme.typography.sizes.m}px;\n\n    & .nav.nav-tabs {\n      border: none;\n    }\n\n    & .filter-scope-body {\n      flex: 1;\n      max-height: calc(100% - ${theme.gridUnit * 32}px);\n\n      .filter-field-pane,\n      .filter-scope-pane {\n        overflow-y: auto;\n      }\n    }\n\n    & .warning-message {\n      padding: ${theme.gridUnit * 6}px;\n    }\n  `}\n`;\n\nconst ScopeBody = styled.div`\n  ${({ theme }) => css`\n    &.filter-scope-body {\n      flex: 1;\n      max-height: calc(100% - ${theme.gridUnit * 32}px);\n\n      .filter-field-pane,\n      .filter-scope-pane {\n        overflow-y: auto;\n      }\n    }\n  `}\n`;\n\nconst ScopeHeader = styled.div`\n  ${({ theme }) => css`\n    height: ${theme.gridUnit * 16}px;\n    border-bottom: 1px solid ${theme.colors.grayscale.light2};\n    padding-left: ${theme.gridUnit * 6}px;\n    margin-left: ${theme.gridUnit * -6}px;\n\n    h4 {\n      margin-top: 0;\n    }\n\n    .selected-fields {\n      margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 4}px;\n      visibility: hidden;\n\n      &.multi-edit-mode {\n        visibility: visible;\n      }\n\n      .selected-scopes {\n        padding-left: ${theme.gridUnit}px;\n      }\n    }\n  `}\n`;\n\nconst ScopeSelector = styled.div`\n  ${({ theme }) => css`\n    &.filters-scope-selector {\n      display: flex;\n      flex-direction: row;\n      position: relative;\n      height: 100%;\n\n      a,\n      a:active,\n      a:hover {\n        color: inherit;\n        text-decoration: none;\n      }\n\n      .react-checkbox-tree .rct-icon.rct-icon-expand-all,\n      .react-checkbox-tree .rct-icon.rct-icon-collapse-all {\n        font-family: ${theme.typography.families.sansSerif};\n        font-size: ${theme.typography.sizes.m}px;\n        color: ${theme.colors.primary.base};\n\n        &::before {\n          content: '';\n        }\n\n        &:hover {\n          text-decoration: underline;\n        }\n\n        &:focus {\n          outline: none;\n        }\n      }\n\n      .filter-field-pane {\n        position: relative;\n        width: 40%;\n        padding: ${theme.gridUnit * 4}px;\n        padding-left: 0;\n        border-right: 1px solid ${theme.colors.grayscale.light2};\n\n        .filter-container label {\n          font-weight: ${theme.typography.weights.normal};\n          margin: 0 0 0 ${theme.gridUnit * 4}px;\n          word-break: break-all;\n        }\n\n        .filter-field-item {\n          height: ${theme.gridUnit * 9}px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          padding: 0 ${theme.gridUnit * 6}px;\n          margin-left: ${theme.gridUnit * -6}px;\n\n          &.is-selected {\n            border: 1px solid ${theme.colors.text.label};\n            border-radius: ${theme.borderRadius}px;\n            background-color: ${theme.colors.grayscale.light4};\n            margin-left: ${theme.gridUnit * -6}px;\n          }\n        }\n\n        .react-checkbox-tree {\n          .rct-title .root {\n            font-weight: ${theme.typography.weights.bold};\n          }\n\n          .rct-text {\n            height: ${theme.gridUnit * 10}px;\n          }\n        }\n      }\n\n      .filter-scope-pane {\n        position: relative;\n        flex: 1;\n        padding: ${theme.gridUnit * 4}px;\n        padding-right: ${theme.gridUnit * 6}px;\n      }\n\n      .react-checkbox-tree {\n        flex-direction: column;\n        color: ${theme.colors.grayscale.dark1};\n        font-size: ${theme.typography.sizes.m}px;\n\n        .filter-scope-type {\n          padding: ${theme.gridUnit * 2}px 0;\n          display: flex;\n          align-items: center;\n\n          &.chart {\n            font-weight: ${theme.typography.weights.normal};\n          }\n\n          &.selected-filter {\n            padding-left: ${theme.gridUnit * 7}px;\n            position: relative;\n            color: ${theme.colors.text.label};\n\n            &::before {\n              content: ' ';\n              position: absolute;\n              left: 0;\n              top: 50%;\n              width: ${theme.gridUnit * 4}px;\n              height: ${theme.gridUnit * 4}px;\n              border-radius: ${theme.borderRadius}px;\n              margin-top: ${theme.gridUnit * -2}px;\n              box-shadow: inset 0 0 0 2px ${theme.colors.grayscale.light2};\n              background: ${theme.colors.grayscale.light3};\n            }\n          }\n\n          &.root {\n            font-weight: ${theme.typography.weights.bold};\n          }\n        }\n\n        .rct-checkbox {\n          svg {\n            position: relative;\n            top: 3px;\n            width: ${theme.gridUnit * 4.5}px;\n          }\n        }\n\n        .rct-node-leaf {\n          .rct-bare-label {\n            &::before {\n              padding-left: ${theme.gridUnit}px;\n            }\n          }\n        }\n\n        .rct-options {\n          text-align: left;\n          margin-left: 0;\n          margin-bottom: ${theme.gridUnit * 2}px;\n        }\n\n        .rct-text {\n          margin: 0;\n          display: flex;\n        }\n\n        .rct-title {\n          display: block;\n        }\n\n        // disable style from react-checkbox-trees.css\n        .rct-node-clickable:hover,\n        .rct-node-clickable:focus,\n        label:hover,\n        label:active {\n          background: none !important;\n        }\n      }\n\n      .multi-edit-mode {\n        .filter-field-item {\n          padding: 0 ${theme.gridUnit * 4}px 0 ${theme.gridUnit * 12}px;\n          margin-left: ${theme.gridUnit * -12}px;\n\n          &.is-selected {\n            margin-left: ${theme.gridUnit * -13}px;\n          }\n        }\n      }\n\n      .scope-search {\n        position: absolute;\n        right: ${theme.gridUnit * 4}px;\n        top: ${theme.gridUnit * 4}px;\n        border-radius: ${theme.borderRadius}px;\n        border: 1px solid ${theme.colors.grayscale.light2};\n        padding: ${theme.gridUnit}px ${theme.gridUnit * 2}px;\n        font-size: ${theme.typography.sizes.m}px;\n        outline: none;\n\n        &:focus {\n          border: 1px solid ${theme.colors.primary.base};\n        }\n      }\n    }\n  `}\n`;\n\nconst ActionsContainer = styled.div`\n  ${({ theme }) => `\n    height: ${theme.gridUnit * 16}px;\n\n    border-top: ${theme.gridUnit / 4}px solid ${theme.colors.primary.light3};\n    padding: ${theme.gridUnit * 6}px;\n    margin: 0 0 0 ${-theme.gridUnit * 6}px;\n    text-align: right;\n\n    .btn {\n      margin-right: ${theme.gridUnit * 4}px;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  `}\n`;\n\nexport default class FilterScopeSelector extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { dashboardFilters, layout } = props;\n\n    if (Object.keys(dashboardFilters).length > 0) {\n      // display filter fields in tree structure\n      const filterFieldNodes = getFilterFieldNodesTree({\n        dashboardFilters,\n      });\n      // filterFieldNodes root node is dashboard_root component,\n      // so that we can offer a select/deselect all link\n      const filtersNodes = filterFieldNodes[0].children;\n      this.allfilterFields = [];\n      filtersNodes.forEach(({ children }) => {\n        children.forEach(child => {\n          this.allfilterFields.push(child.value);\n        });\n      });\n      this.defaultFilterKey = filtersNodes[0].children[0].value;\n\n      // build FilterScopeTree object for each filterKey\n      const filterScopeMap = Object.values(dashboardFilters).reduce(\n        (map, { chartId: filterId, columns }) => {\n          const filterScopeByChartId = Object.keys(columns).reduce(\n            (mapByChartId, columnName) => {\n              const filterKey = getDashboardFilterKey({\n                chartId: filterId,\n                column: columnName,\n              });\n              const nodes = getFilterScopeNodesTree({\n                components: layout,\n                filterFields: [filterKey],\n                selectedChartId: filterId,\n              });\n              const expanded = getFilterScopeParentNodes(nodes, 1);\n              const chartIdsInFilterScope = (\n                getChartIdsInFilterScope({\n                  filterScope: dashboardFilters[filterId].scopes[columnName],\n                }) || []\n              ).filter(id => id !== filterId);\n\n              return {\n                ...mapByChartId,\n                [filterKey]: {\n                  // unfiltered nodes\n                  nodes,\n                  // filtered nodes in display if searchText is not empty\n                  nodesFiltered: [...nodes],\n                  checked: chartIdsInFilterScope,\n                  expanded,\n                },\n              };\n            },\n            {},\n          );\n\n          return {\n            ...map,\n            ...filterScopeByChartId,\n          };\n        },\n        {},\n      );\n\n      // initial state: active defaultFilerKey\n      const { chartId } = getChartIdAndColumnFromFilterKey(\n        this.defaultFilterKey,\n      );\n      const checkedFilterFields = [];\n      const activeFilterField = this.defaultFilterKey;\n      // expand defaultFilterKey in filter field tree\n      const expandedFilterIds = [ALL_FILTERS_ROOT].concat(chartId);\n\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField,\n        filterScopeMap,\n        layout,\n      });\n      this.state = {\n        showSelector: true,\n        activeFilterField,\n        searchText: '',\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry,\n        },\n        filterFieldNodes,\n        checkedFilterFields,\n        expandedFilterIds,\n      };\n    } else {\n      this.state = {\n        showSelector: false,\n      };\n    }\n\n    this.filterNodes = this.filterNodes.bind(this);\n    this.onChangeFilterField = this.onChangeFilterField.bind(this);\n    this.onCheckFilterScope = this.onCheckFilterScope.bind(this);\n    this.onExpandFilterScope = this.onExpandFilterScope.bind(this);\n    this.onSearchInputChange = this.onSearchInputChange.bind(this);\n    this.onCheckFilterField = this.onCheckFilterField.bind(this);\n    this.onExpandFilterField = this.onExpandFilterField.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onSave = this.onSave.bind(this);\n  }\n\n  onCheckFilterScope(checked = []) {\n    const { activeFilterField, filterScopeMap, checkedFilterFields } =\n      this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n    const editingList = activeFilterField\n      ? [activeFilterField]\n      : checkedFilterFields;\n    const updatedEntry = {\n      ...filterScopeMap[key],\n      checked,\n    };\n\n    const updatedFilterScopeMap = getRevertedFilterScope({\n      checked,\n      filterFields: editingList,\n      filterScopeMap,\n    });\n\n    this.setState(() => ({\n      filterScopeMap: {\n        ...filterScopeMap,\n        ...updatedFilterScopeMap,\n        [key]: updatedEntry,\n      },\n    }));\n  }\n\n  onExpandFilterScope(expanded = []) {\n    const { activeFilterField, checkedFilterFields, filterScopeMap } =\n      this.state;\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n    const updatedEntry = {\n      ...filterScopeMap[key],\n      expanded,\n    };\n    this.setState(() => ({\n      filterScopeMap: {\n        ...filterScopeMap,\n        [key]: updatedEntry,\n      },\n    }));\n  }\n\n  onCheckFilterField(checkedFilterFields = []) {\n    const { layout } = this.props;\n    const { filterScopeMap } = this.state;\n    const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n      checkedFilterFields,\n      activeFilterField: null,\n      filterScopeMap,\n      layout,\n    });\n\n    this.setState(() => ({\n      activeFilterField: null,\n      checkedFilterFields,\n      filterScopeMap: {\n        ...filterScopeMap,\n        ...filterScopeTreeEntry,\n      },\n    }));\n  }\n\n  onExpandFilterField(expandedFilterIds = []) {\n    this.setState(() => ({\n      expandedFilterIds,\n    }));\n  }\n\n  onChangeFilterField(filterField = {}) {\n    const { layout } = this.props;\n    const nextActiveFilterField = filterField.value;\n    const {\n      activeFilterField: currentActiveFilterField,\n      checkedFilterFields,\n      filterScopeMap,\n    } = this.state;\n\n    // we allow single edit and multiple edit in the same view.\n    // if user click on the single filter field,\n    // will show filter scope for the single field.\n    // if user click on the same filter filed again,\n    // will toggle off the single filter field,\n    // and allow multi-edit all checked filter fields.\n    if (nextActiveFilterField === currentActiveFilterField) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: null,\n        filterScopeMap,\n        layout,\n      });\n\n      this.setState({\n        activeFilterField: null,\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry,\n        },\n      });\n    } else if (this.allfilterFields.includes(nextActiveFilterField)) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap,\n        layout,\n      });\n\n      this.setState({\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry,\n        },\n      });\n    }\n  }\n\n  onSearchInputChange(e) {\n    this.setState({ searchText: e.target.value }, this.filterTree);\n  }\n\n  onClose() {\n    this.props.onCloseModal();\n  }\n\n  onSave() {\n    const { filterScopeMap } = this.state;\n\n    const allFilterFieldScopes = this.allfilterFields.reduce(\n      (map, filterKey) => {\n        const { nodes } = filterScopeMap[filterKey];\n        const checkedChartIds = filterScopeMap[filterKey].checked;\n\n        return {\n          ...map,\n          [filterKey]: getFilterScopeFromNodesTree({\n            filterKey,\n            nodes,\n            checkedChartIds,\n          }),\n        };\n      },\n      {},\n    );\n\n    this.props.updateDashboardFiltersScope(allFilterFieldScopes);\n    this.props.setUnsavedChanges(true);\n\n    // click Save button will do save and close modal\n    this.props.onCloseModal();\n  }\n\n  filterTree() {\n    // Reset nodes back to unfiltered state\n    if (!this.state.searchText) {\n      this.setState(prevState => {\n        const { activeFilterField, checkedFilterFields, filterScopeMap } =\n          prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields,\n        });\n\n        const updatedEntry = {\n          ...filterScopeMap[key],\n          nodesFiltered: filterScopeMap[key].nodes,\n        };\n        return {\n          filterScopeMap: {\n            ...filterScopeMap,\n            [key]: updatedEntry,\n          },\n        };\n      });\n    } else {\n      const updater = prevState => {\n        const { activeFilterField, checkedFilterFields, filterScopeMap } =\n          prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields,\n        });\n\n        const nodesFiltered = filterScopeMap[key].nodes.reduce(\n          this.filterNodes,\n          [],\n        );\n        const expanded = getFilterScopeParentNodes([...nodesFiltered]);\n        const updatedEntry = {\n          ...filterScopeMap[key],\n          nodesFiltered,\n          expanded,\n        };\n\n        return {\n          filterScopeMap: {\n            ...filterScopeMap,\n            [key]: updatedEntry,\n          },\n        };\n      };\n\n      this.setState(updater);\n    }\n  }\n\n  filterNodes(filtered = [], node = {}) {\n    const { searchText } = this.state;\n    const children = (node.children || []).reduce(this.filterNodes, []);\n\n    if (\n      // Node's label matches the search string\n      node.label.toLocaleLowerCase().indexOf(searchText.toLocaleLowerCase()) >\n        -1 ||\n      // Or a children has a matching node\n      children.length\n    ) {\n      filtered.push({ ...node, children });\n    }\n\n    return filtered;\n  }\n\n  renderFilterFieldList() {\n    const {\n      activeFilterField,\n      filterFieldNodes,\n      checkedFilterFields,\n      expandedFilterIds,\n    } = this.state;\n    return (\n      <FilterFieldTree\n        activeKey={activeFilterField}\n        nodes={filterFieldNodes}\n        checked={checkedFilterFields}\n        expanded={expandedFilterIds}\n        onClick={this.onChangeFilterField}\n        onCheck={this.onCheckFilterField}\n        onExpand={this.onExpandFilterField}\n      />\n    );\n  }\n\n  renderFilterScopeTree() {\n    const {\n      filterScopeMap,\n      activeFilterField,\n      checkedFilterFields,\n      searchText,\n    } = this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n\n    const selectedChartId = getSelectedChartIdForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n    return (\n      <>\n        <input\n          className=\"filter-text scope-search multi-edit-mode\"\n          placeholder={t('Search...')}\n          type=\"text\"\n          value={searchText}\n          onChange={this.onSearchInputChange}\n        />\n        <FilterScopeTree\n          nodes={filterScopeMap[key].nodesFiltered}\n          checked={filterScopeMap[key].checked}\n          expanded={filterScopeMap[key].expanded}\n          onCheck={this.onCheckFilterScope}\n          onExpand={this.onExpandFilterScope}\n          // pass selectedFilterId prop to FilterScopeTree component,\n          // to hide checkbox for selected filter field itself\n          selectedChartId={selectedChartId}\n        />\n      </>\n    );\n  }\n\n  renderEditingFiltersName() {\n    const { dashboardFilters } = this.props;\n    const { activeFilterField, checkedFilterFields } = this.state;\n    const currentFilterLabels = []\n      .concat(activeFilterField || checkedFilterFields)\n      .map(key => {\n        const { chartId, column } = getChartIdAndColumnFromFilterKey(key);\n        return dashboardFilters[chartId].labels[column] || column;\n      });\n\n    return (\n      <div className=\"selected-fields multi-edit-mode\">\n        {currentFilterLabels.length === 0 && t('No filter is selected.')}\n        {currentFilterLabels.length === 1 && t('Editing 1 filter:')}\n        {currentFilterLabels.length > 1 &&\n          t('Batch editing %d filters:', currentFilterLabels.length)}\n        <span className=\"selected-scopes\">\n          {currentFilterLabels.join(', ')}\n        </span>\n      </div>\n    );\n  }\n\n  render() {\n    const { showSelector } = this.state;\n\n    return (\n      <ScopeContainer>\n        <ScopeHeader>\n          <h4>{t('Configure filter scopes')}</h4>\n          {showSelector && this.renderEditingFiltersName()}\n        </ScopeHeader>\n\n        <ScopeBody className=\"filter-scope-body\">\n          {!showSelector ? (\n            <div className=\"warning-message\">\n              {t('There are no filters in this dashboard.')}\n            </div>\n          ) : (\n            <ScopeSelector className=\"filters-scope-selector\">\n              <div className={cx('filter-field-pane multi-edit-mode')}>\n                {this.renderFilterFieldList()}\n              </div>\n              <div className=\"filter-scope-pane multi-edit-mode\">\n                {this.renderFilterScopeTree()}\n              </div>\n            </ScopeSelector>\n          )}\n        </ScopeBody>\n\n        <ActionsContainer>\n          <Button buttonSize=\"small\" onClick={this.onClose}>\n            {t('Close')}\n          </Button>\n          {showSelector && (\n            <Button\n              buttonSize=\"small\"\n              buttonStyle=\"primary\"\n              onClick={this.onSave}\n            >\n              {t('Save')}\n            </Button>\n          )}\n        </ActionsContainer>\n      </ScopeContainer>\n    );\n  }\n}\n\nFilterScopeSelector.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nimport { getDashboardFilterKey } from './getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from './constants';\nimport { DASHBOARD_ROOT_TYPE } from './componentTypes';\n\nexport default function getFilterFieldNodesTree({ dashboardFilters = {} }) {\n  const allFilters = Object.values(dashboardFilters).map(dashboardFilter => {\n    const { chartId, filterName, columns, labels } = dashboardFilter;\n    const children = Object.keys(columns).map(column => ({\n      value: getDashboardFilterKey({ chartId, column }),\n      label: labels[column] || column,\n    }));\n    return {\n      value: chartId,\n      label: filterName,\n      children,\n      showCheckbox: true,\n    };\n  });\n\n  return [\n    {\n      value: ALL_FILTERS_ROOT,\n      type: DASHBOARD_ROOT_TYPE,\n      label: t('All filters'),\n      children: allFilters,\n    },\n  ];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\ninterface FilterScopeMap {\n  [key: string]: number[];\n}\n\ninterface GetRevertFilterScopeProps {\n  checked: string[];\n  filterFields: string[];\n  filterScopeMap: FilterScopeMap;\n}\n\nexport default function getRevertedFilterScope({\n  checked = [],\n  filterFields = [],\n  filterScopeMap = {},\n}: GetRevertFilterScopeProps) {\n  const checkedChartIdsByFilterField = checked.reduce<FilterScopeMap>(\n    (map, value) => {\n      const [chartId, filterField] = value.split(':');\n      return {\n        ...map,\n        [filterField]: (map[filterField] || []).concat(parseInt(chartId, 10)),\n      };\n    },\n    {},\n  );\n\n  return filterFields.reduce<FilterScopeMap>(\n    (map, filterField) => ({\n      ...map,\n      [filterField]: {\n        ...filterScopeMap[filterField],\n        checked: checkedChartIdsByFilterField[filterField] || [],\n      },\n    }),\n    {},\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { updateDashboardFiltersScope } from '../actions/dashboardFilters';\nimport { setUnsavedChanges } from '../actions/dashboardState';\nimport FilterScopeSelector from '../components/filterscope/FilterScopeSelector';\n\nfunction mapStateToProps({ dashboardLayout, dashboardFilters }) {\n  return {\n    dashboardFilters,\n    layout: dashboardLayout.present,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      updateDashboardFiltersScope,\n      setUnsavedChanges,\n    },\n    dispatch,\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(FilterScopeSelector);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createRef, PureComponent } from 'react';\nimport { styled } from '@superset-ui/core';\nimport ModalTrigger, { ModalTriggerRef } from 'src/components/ModalTrigger';\nimport FilterScope from 'src/dashboard/containers/FilterScope';\n\ntype FilterScopeModalProps = {\n  triggerNode: JSX.Element;\n};\n\nconst FilterScopeModalBody = styled.div(({ theme: { gridUnit } }) => ({\n  padding: gridUnit * 2,\n  paddingBottom: gridUnit * 3,\n}));\n\nexport default class FilterScopeModal extends PureComponent<\n  FilterScopeModalProps,\n  {}\n> {\n  modal: ModalTriggerRef;\n\n  constructor(props: FilterScopeModalProps) {\n    super(props);\n\n    this.modal = createRef() as ModalTriggerRef;\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  handleCloseModal(): void {\n    this?.modal?.current?.close?.();\n  }\n\n  render() {\n    const filterScopeProps = {\n      onCloseModal: this.handleCloseModal,\n    };\n\n    return (\n      <ModalTrigger\n        ref={this.modal}\n        triggerNode={this.props.triggerNode}\n        modalBody={\n          <FilterScopeModalBody>\n            <FilterScope {...filterScopeProps} />\n          </FilterScopeModalBody>\n        }\n        width=\"80%\"\n      />\n    );\n  }\n}\n"],"names":["ImageContainer","styled","div","src","position","ImageLoader","fallback","isLoading","rest","imgSrc","setImgSrc","useState","useEffect","fetch","then","response","blob","test","type","imgURL","URL","createObjectURL","catch","errMsg","logging","error","_jsx","propTypes","onChange","PropTypes","labelMargin","colorScheme","hasCustomLabelsColor","ColorSchemeControlWrapper","PureComponent","constructor","props","super","this","state","hovered","categoricalSchemeRegistry","getCategoricalSchemeRegistry","choices","keys","map","s","schemes","getMap","setHover","setState","render","ColorSchemeControl","description","t","name","value","clearable","defaultProps","undefined","StyledFormItem","FormItem","StyledJsonEditor","JsonEditor","theme","borderRadius","colors","secondary","light2","_ref","styles","withToasts","PropertiesModal","addSuccessToast","addDangerToast","currentColorScheme","dashboardId","dashboardInfo","currentDashboardInfo","dashboardTitle","onHide","onlyApply","onSubmit","show","form","AntdForm","useForm","setIsLoading","isAdvancedOpen","setIsAdvancedOpen","setColorScheme","jsonMetadata","setJsonMetadata","setDashboardInfo","owners","setOwners","roles","setRoles","saveLabel","tags","setTags","tagsAsSelectValues","useMemo","tag","id","label","length","handleErrorResponse","async","statusText","message","getClientErrorObject","errorText","json_metadata","Modal","title","content","okButtonProps","danger","className","loadAccessOptions","useCallback","accessType","input","page","pageSize","query","rison","filter","page_size","SupersetClient","get","endpoint","data","json","result","item","extra","active","text","totalCount","count","handleDashboardData","dashboardData","dashboard_title","slug","certified_by","certification_details","metadata","is_managed_externally","certifiedBy","certificationDetails","isManagedExternally","setFieldsValue","color_scheme","metaDataCopy","_omit","jsonStringify","fetchDashboardDetails","_dashboard$json_metad","dashboard","jsonMetadataObj","JSON","parse","getJsonMetadata","_","handleOnChangeOwners","parsedOwners","ensureIsArray","o","full_name","handleOnChangeRoles","parsedRoles","r","handleOwnersSelectValue","owner","first_name","last_name","onColorSchemeChange","updateMetadata","colorChoices","includes","Error","label_colors","preload","isFeatureEnabled","FeatureFlag","TaggingSystem","fetchTags","objectType","OBJECT_TYPES","DASHBOARD","objectId","includeTypes","footer","_jsxs","_Fragment","children","Button","htmlType","buttonSize","onClick","cta","submit","buttonStyle","disabled","tooltip","responsive","onFinish","_metadata","_metadata2","_metadata3","_metadata4","getFieldsValue","currentJsonMetadata","startsWith","endsWith","copyMetadata","colorNamespace","getColorNamespace","color_namespace","shared_label_colors","color_scheme_domain","applyColors","moreOnSubmitProps","morePutProps","DashboardRbac","onSubmitProps","put","headers","body","stringify","layout","initialValues","Row","Col","xs","md","gutter","Input","getRowsWithRoles","Object","style","marginTop","AsyncSelect","allowClear","allowNewOptions","ariaLabel","mode","options","role","getRowsWithoutRoles","css","loadTags","parsedTags","minWidth","showLoadingForImport","tabSize","width","height","wrapEnabled","FilterScopeModal","triggerNode","menuName","FILTER_SCOPE_CONTAINER_TYPES","TAB_TYPE","DASHBOARD_ROOT_TYPE","traverse","currentNode","components","filterFields","selectedChartId","CHART_TYPE","meta","chartId","sliceName","showCheckbox","forEach","child","childNodeTree","childType","push","concat","getFilterScopeNodesTree","_isEmpty","DASHBOARD_ROOT_ID","getFilterScopeParentNodes","nodes","depthLimit","parentNodes","depth","node","getKeyForFilterScopeTree","activeFilterField","checkedFilterFields","safeStringify","getSelectedChartIdForFilterScopeTree","getChartIdAndColumnFromFilterKey","some","filterKey","buildFilterScopeTreeEntry","filterScopeMap","key","editingList","checkedChartIdSet","Set","filterField","checked","add","expanded","nodesFiltered","getTabChildrenScope","tabScopes","parentNodeValue","forceAggregate","hasChartSiblings","tabChildren","immuneChartSiblings","entries","every","scope","immuneChartIdsFromTabsNotInScope","tabs","tabsInScope","chartsNotInScope","tab","subTab","subTabChildren","getImmuneChartIdsFromTabsNotInScope","_flatMap","immuneChartIdsFromTabsInScope","values","immune","componentsInScope","filterId","checkedChartIds","currentValue","chartChildren","chartsImmune","_flow","_keyBy","_mapValues","getFilterScopeFromNodesTree","ChartIcon","Icons","BarChartOutlined","gridUnit","primary","base","updatedChildren","cx","toLowerCase","renderFilterScopeTreeNodes","check","CheckboxChecked","uncheck","CheckboxUnchecked","halfCheck","CheckboxHalfChecked","expandClose","expandOpen","expandAll","collapseAll","parentClose","parentOpen","leaf","filterScopeSelectorTreeNodePropShape","isRequired","onCheck","onExpand","NOOP","FilterScopeTree","CheckboxTree","showExpandAll","expandOnClick","showNodeIcon","icons","treeIcons","isSelected","FilterFieldItem","FormLabel","htmlFor","renderFilterFieldTreeNodes","activeKey","root","FilterFieldTree","dashboardFilters","dashboardFilterPropShape","updateDashboardFiltersScope","setUnsavedChanges","onCloseModal","ScopeContainer","typography","sizes","m","ScopeBody","ScopeHeader","grayscale","ScopeSelector","families","sansSerif","weights","normal","light4","bold","dark1","light3","ActionsContainer","FilterScopeSelector","filterFieldNodes","allFilters","dashboardFilter","filterName","columns","labels","column","getDashboardFilterKey","ALL_FILTERS_ROOT","getFilterFieldNodesTree","filtersNodes","allfilterFields","defaultFilterKey","reduce","mapByChartId","columnName","chartIdsInFilterScope","getChartIdsInFilterScope","filterScope","scopes","expandedFilterIds","filterScopeTreeEntry","showSelector","searchText","filterNodes","bind","onChangeFilterField","onCheckFilterScope","onExpandFilterScope","onSearchInputChange","onCheckFilterField","onExpandFilterField","onClose","onSave","updatedEntry","updatedFilterScopeMap","checkedChartIdsByFilterField","split","parseInt","getRevertedFilterScope","nextActiveFilterField","currentActiveFilterField","e","target","filterTree","allFilterFieldScopes","updater","prevState","filtered","toLocaleLowerCase","indexOf","renderFilterFieldList","renderFilterScopeTree","placeholder","renderEditingFiltersName","currentFilterLabels","join","connect","dashboardLayout","present","dispatch","bindActionCreators","FilterScopeModalBody","padding","paddingBottom","modal","createRef","handleCloseModal","_this$modal","_this$modal$current","current","close","filterScopeProps","ModalTrigger","ref","modalBody","FilterScope"],"sourceRoot":""}