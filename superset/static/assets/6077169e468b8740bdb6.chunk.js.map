{"version":3,"file":"6077169e468b8740bdb6.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/lodash/uniqBy.js","webpack://superset/./packages/superset-ui-core/src/hooks/useTruncation/useChildElementTruncation.ts","webpack://superset/./src/components/ListViewCard/ImageLoader.tsx","webpack://superset/./src/dashboard/components/nativeFilters/utils.ts","webpack://superset/./src/features/charts/ChartCard.tsx","webpack://superset/./src/components/ListView/CrossLinksTooltip.tsx","webpack://superset/./src/components/ListView/CrossLinks.tsx","webpack://superset/./src/components/ListView/DashboardCrossLinks.tsx","webpack://superset/./src/pages/ChartList/index.tsx"],"sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useLayoutEffect, useRef, useState } from 'react';\n\n/**\n * This hook encapsulates logic to support truncation of child HTML\n * elements contained in a fixed-width parent HTML element.  Given\n * a ref to the parent element and optionally a ref to the \"+x\"\n * component that shows the number of truncated items, this hook\n * will return the number of elements that are not fully visible\n * (including those completely hidden) and whether any elements\n * are completely hidden.\n */\nconst useChildElementTruncation = () => {\n  const [elementsTruncated, setElementsTruncated] = useState(0);\n  const [hasHiddenElements, setHasHiddenElements] = useState(false);\n  const elementRef = useRef<HTMLDivElement>(null);\n  const plusRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    const onResize = () => {\n      const currentElement = elementRef.current;\n      if (!currentElement) {\n        return;\n      }\n      const plusRefElement = plusRef.current;\n      const { scrollWidth, clientWidth, childNodes } = currentElement;\n\n      if (scrollWidth > clientWidth) {\n        // \"...\" is around 6px wide\n        const truncationWidth = 6;\n        const plusSize = plusRefElement?.offsetWidth || 0;\n        const maxWidth = clientWidth - truncationWidth;\n        const elementsCount = childNodes.length;\n\n        let width = 0;\n        let hiddenElements = 0;\n        for (let i = 0; i < elementsCount; i += 1) {\n          const itemWidth = (childNodes[i] as HTMLElement).offsetWidth;\n          const remainingWidth = maxWidth - width - plusSize;\n\n          // assures it shows +{number} only when the item is not visible\n          if (remainingWidth <= 0) {\n            hiddenElements += 1;\n          }\n          width += itemWidth;\n        }\n\n        if (elementsCount > 1 && hiddenElements) {\n          setHasHiddenElements(true);\n          setElementsTruncated(hiddenElements);\n        } else {\n          setHasHiddenElements(false);\n          setElementsTruncated(1);\n        }\n      } else {\n        setHasHiddenElements(false);\n        setElementsTruncated(0);\n      }\n    };\n    const obs = new ResizeObserver(onResize);\n\n    const element = elementRef.current?.parentElement;\n    if (element) {\n      obs.observe(element);\n    }\n\n    onResize();\n\n    return () => {\n      obs.disconnect();\n    };\n  }, [plusRef.current]); // plus is rendered dynamically - the component rerenders the hook when plus appears, this makes sure that useLayoutEffect is rerun\n\n  return [elementRef, plusRef, elementsTruncated, hasHiddenElements] as const;\n};\n\nexport default useChildElementTruncation;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState, DetailedHTMLProps, HTMLAttributes } from 'react';\n\nimport { styled, logging } from '@superset-ui/core';\n\nexport type BackgroundPosition = 'top' | 'bottom';\ninterface ImageContainerProps {\n  src: string;\n  position: BackgroundPosition;\n}\n\nconst ImageContainer = styled.div<ImageContainerProps>`\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center ${({ position }) => position};\n  display: inline-block;\n  height: calc(100% - 1px);\n  width: calc(100% - 2px);\n  margin: 1px 1px 0 1px;\n`;\ninterface ImageLoaderProps\n  extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  fallback: string;\n  src: string;\n  isLoading?: boolean;\n  position: BackgroundPosition;\n}\n\nexport default function ImageLoader({\n  src,\n  fallback,\n  isLoading,\n  position,\n  ...rest\n}: ImageLoaderProps) {\n  const [imgSrc, setImgSrc] = useState<string>(fallback);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src)\n        .then(response => response.blob())\n        .then(blob => {\n          if (/image/.test(blob.type)) {\n            const imgURL = URL.createObjectURL(blob);\n            setImgSrc(imgURL);\n          }\n        })\n        .catch(errMsg => {\n          logging.error(errMsg);\n          setImgSrc(fallback);\n        });\n    }\n\n    return () => {\n      // theres a very brief period where isLoading is false and this component is about to unmount\n      // where the stale imgSrc is briefly rendered. Setting imgSrc to fallback smoothes the transition.\n      setImgSrc(fallback);\n    };\n  }, [src, fallback]);\n\n  return (\n    <ImageContainer\n      src={isLoading ? fallback : imgSrc}\n      {...rest}\n      position={position}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AdhocFilter,\n  Behavior,\n  DataMaskStateWithId,\n  EXTRA_FORM_DATA_APPEND_KEYS,\n  EXTRA_FORM_DATA_OVERRIDE_KEYS,\n  ExtraFormData,\n  isFeatureEnabled,\n  FeatureFlag,\n  Filter,\n  getChartMetadataRegistry,\n  QueryFormData,\n  t,\n} from '@superset-ui/core';\nimport { DashboardLayout } from 'src/dashboard/types';\nimport extractUrlParams from 'src/dashboard/util/extractUrlParams';\nimport { CHART_TYPE, TAB_TYPE } from '../../util/componentTypes';\nimport { DASHBOARD_GRID_ID, DASHBOARD_ROOT_ID } from '../../util/constants';\nimport getBootstrapData from '../../../utils/getBootstrapData';\n\nconst getDefaultRowLimit = (): number => {\n  const bootstrapData = getBootstrapData();\n  const nativeFilterDefaultRowLimit =\n    bootstrapData?.common?.conf?.NATIVE_FILTER_DEFAULT_ROW_LIMIT;\n  return nativeFilterDefaultRowLimit || 1000;\n};\n\nexport const getFormData = ({\n  datasetId,\n  dependencies = {},\n  groupby,\n  defaultDataMask,\n  controlValues,\n  filterType,\n  sortMetric,\n  adhoc_filters,\n  time_range,\n  granularity_sqla,\n  type,\n  dashboardId,\n  id,\n}: Partial<Filter> & {\n  dashboardId: number;\n  datasetId?: number;\n  dependencies?: object;\n  groupby?: string;\n  adhoc_filters?: AdhocFilter[];\n  time_range?: string;\n}): Partial<QueryFormData> => {\n  const otherProps: {\n    datasource?: string;\n    groupby?: string[];\n    sortMetric?: string;\n  } = {};\n  if (datasetId) {\n    otherProps.datasource = `${datasetId}__table`;\n  }\n  if (groupby) {\n    otherProps.groupby = [groupby];\n  }\n  if (sortMetric) {\n    otherProps.sortMetric = sortMetric;\n  }\n  return {\n    ...controlValues,\n    ...otherProps,\n    adhoc_filters: adhoc_filters ?? [],\n    extra_filters: [],\n    extra_form_data: dependencies,\n    granularity_sqla,\n    metrics: ['count'],\n    row_limit: getDefaultRowLimit(),\n    showSearch: true,\n    defaultValue: defaultDataMask?.filterState?.value,\n    time_range,\n    url_params: extractUrlParams('regular'),\n    inView: true,\n    viz_type: filterType,\n    type,\n    dashboardId,\n    native_filter_id: id,\n  };\n};\n\nexport function mergeExtraFormData(\n  originalExtra: ExtraFormData = {},\n  newExtra: ExtraFormData = {},\n): ExtraFormData {\n  const mergedExtra: ExtraFormData = {};\n  EXTRA_FORM_DATA_APPEND_KEYS.forEach((key: string) => {\n    const mergedValues = [\n      ...(originalExtra[key] || []),\n      ...(newExtra[key] || []),\n    ];\n    if (mergedValues.length) {\n      mergedExtra[key] = mergedValues;\n    }\n  });\n  EXTRA_FORM_DATA_OVERRIDE_KEYS.forEach((key: string) => {\n    const originalValue = originalExtra[key];\n    if (originalValue !== undefined) {\n      mergedExtra[key] = originalValue;\n    }\n    const newValue = newExtra[key];\n    if (newValue !== undefined) {\n      mergedExtra[key] = newValue;\n    }\n  });\n  return mergedExtra;\n}\n\nexport function isCrossFilter(vizType: string) {\n  // @ts-ignore need export from superset-ui `ItemWithValue`\n  return getChartMetadataRegistry().items[vizType]?.value.behaviors?.includes(\n    Behavior.InteractiveChart,\n  );\n}\n\nexport function getExtraFormData(\n  dataMask: DataMaskStateWithId,\n  filterIdsAppliedOnChart: string[],\n): ExtraFormData {\n  let extraFormData: ExtraFormData = {};\n  filterIdsAppliedOnChart.forEach(key => {\n    extraFormData = mergeExtraFormData(\n      extraFormData,\n      dataMask[key]?.extraFormData ?? {},\n    );\n  });\n  return extraFormData;\n}\n\nexport function nativeFilterGate(behaviors: Behavior[]): boolean {\n  return (\n    !behaviors.includes(Behavior.NativeFilter) ||\n    (isFeatureEnabled(FeatureFlag.DashboardCrossFilters) &&\n      behaviors.includes(Behavior.InteractiveChart))\n  );\n}\n\nconst isComponentATab = (\n  dashboardLayout: DashboardLayout,\n  componentId: string,\n) => dashboardLayout?.[componentId]?.type === TAB_TYPE;\n\nconst findTabsWithChartsInScopeHelper = (\n  dashboardLayout: DashboardLayout,\n  chartsInScope: number[],\n  componentId: string,\n  tabIds: string[],\n  tabsToHighlight: Set<string>,\n  visited: Set<string>,\n) => {\n  if (visited.has(componentId)) {\n    return;\n  }\n  visited.add(componentId);\n  if (\n    dashboardLayout?.[componentId]?.type === CHART_TYPE &&\n    chartsInScope.includes(dashboardLayout[componentId]?.meta?.chartId)\n  ) {\n    tabIds.forEach(tabsToHighlight.add, tabsToHighlight);\n  }\n  if (\n    dashboardLayout?.[componentId]?.children?.length === 0 ||\n    (isComponentATab(dashboardLayout, componentId) &&\n      tabsToHighlight.has(componentId))\n  ) {\n    return;\n  }\n  dashboardLayout[componentId]?.children.forEach(childId =>\n    findTabsWithChartsInScopeHelper(\n      dashboardLayout,\n      chartsInScope,\n      childId,\n      isComponentATab(dashboardLayout, childId) ? [...tabIds, childId] : tabIds,\n      tabsToHighlight,\n      visited,\n    ),\n  );\n};\n\nexport const findTabsWithChartsInScope = (\n  dashboardLayout: DashboardLayout,\n  chartsInScope: number[],\n) => {\n  const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n  const rootChildId = dashboardRoot.children[0];\n  const hasTopLevelTabs = rootChildId !== DASHBOARD_GRID_ID;\n  const tabsInScope = new Set<string>();\n  const visited = new Set<string>();\n  if (hasTopLevelTabs) {\n    dashboardLayout[rootChildId]?.children?.forEach(tabId =>\n      findTabsWithChartsInScopeHelper(\n        dashboardLayout,\n        chartsInScope,\n        tabId,\n        [tabId],\n        tabsInScope,\n        visited,\n      ),\n    );\n  } else {\n    Object.values(dashboardLayout)\n      .filter(element => element?.type === TAB_TYPE)\n      .forEach(element =>\n        findTabsWithChartsInScopeHelper(\n          dashboardLayout,\n          chartsInScope,\n          element.id,\n          [element.id],\n          tabsInScope,\n          visited,\n        ),\n      );\n  }\n  return tabsInScope;\n};\n\nexport const getFilterValueForDisplay = (\n  value?: string[] | null | string | number | object,\n): string => {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  if (typeof value === 'string' || typeof value === 'number') {\n    return `${value}`;\n  }\n  if (Array.isArray(value)) {\n    return value.join(', ');\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  return t('Unknown value');\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isFeatureEnabled, FeatureFlag, t, useTheme } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport Icons from 'src/components/Icons';\nimport Chart from 'src/types/Chart';\n\nimport ListViewCard from 'src/components/ListViewCard';\nimport Label from 'src/components/Label';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport FaveStar from 'src/components/FaveStar';\nimport FacePile from 'src/components/FacePile';\nimport { handleChartDelete, CardStyles } from 'src/views/CRUD/utils';\n\ninterface ChartCardProps {\n  chart: Chart;\n  hasPerm: (perm: string) => boolean;\n  openChartEditModal: (chart: Chart) => void;\n  bulkSelectEnabled: boolean;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  refreshData: () => void;\n  loading?: boolean;\n  saveFavoriteStatus: (id: number, isStarred: boolean) => void;\n  favoriteStatus: boolean;\n  chartFilter?: string;\n  userId?: string | number;\n  showThumbnails?: boolean;\n  handleBulkChartExport: (chartsToExport: Chart[]) => void;\n}\n\nexport default function ChartCard({\n  chart,\n  hasPerm,\n  openChartEditModal,\n  bulkSelectEnabled,\n  addDangerToast,\n  addSuccessToast,\n  refreshData,\n  loading,\n  showThumbnails,\n  saveFavoriteStatus,\n  favoriteStatus,\n  chartFilter,\n  userId,\n  handleBulkChartExport,\n}: ChartCardProps) {\n  const history = useHistory();\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n  const theme = useTheme();\n\n  const menu = (\n    <Menu>\n      {canDelete && (\n        <Menu.Item>\n          <ConfirmStatusChange\n            title={t('Please confirm')}\n            description={\n              <>\n                {t('Are you sure you want to delete')} <b>{chart.slice_name}</b>\n                ?\n              </>\n            }\n            onConfirm={() =>\n              handleChartDelete(\n                chart,\n                addSuccessToast,\n                addDangerToast,\n                refreshData,\n                chartFilter,\n                userId,\n              )\n            }\n          >\n            {confirmDelete => (\n              <div\n                data-test=\"chart-list-delete-option\"\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                onClick={confirmDelete}\n              >\n                <Icons.Trash iconSize=\"l\" /> {t('Delete')}\n              </div>\n            )}\n          </ConfirmStatusChange>\n        </Menu.Item>\n      )}\n      {canExport && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => handleBulkChartExport([chart])}\n          >\n            <Icons.Share iconSize=\"l\" /> {t('Export')}\n          </div>\n        </Menu.Item>\n      )}\n      {canEdit && (\n        <Menu.Item>\n          <div\n            data-test=\"chart-list-edit-option\"\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => openChartEditModal(chart)}\n          >\n            <Icons.EditAlt iconSize=\"l\" /> {t('Edit')}\n          </div>\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n  return (\n    <CardStyles\n      onClick={() => {\n        if (!bulkSelectEnabled && chart.url) {\n          history.push(chart.url);\n        }\n      }}\n    >\n      <ListViewCard\n        loading={loading}\n        title={chart.slice_name}\n        certifiedBy={chart.certified_by}\n        certificationDetails={chart.certification_details}\n        cover={\n          !isFeatureEnabled(FeatureFlag.Thumbnails) || !showThumbnails ? (\n            <></>\n          ) : null\n        }\n        url={bulkSelectEnabled ? undefined : chart.url}\n        imgURL={chart.thumbnail_url || ''}\n        imgFallbackURL=\"/static/assets/images/chart-card-fallback.svg\"\n        description={t('Modified %s', chart.changed_on_delta_humanized)}\n        coverLeft={<FacePile users={chart.owners || []} />}\n        coverRight={\n          <Label type=\"secondary\">{chart.datasource_name_text}</Label>\n        }\n        linkComponent={Link}\n        actions={\n          <ListViewCard.Actions\n            onClick={e => {\n              e.stopPropagation();\n              e.preventDefault();\n            }}\n          >\n            {userId && (\n              <FaveStar\n                itemId={chart.id}\n                saveFaveStar={saveFavoriteStatus}\n                isStarred={favoriteStatus}\n              />\n            )}\n            <AntdDropdown overlay={menu}>\n              <Icons.MoreVert iconColor={theme.colors.grayscale.base} />\n            </AntdDropdown>\n          </ListViewCard.Actions>\n        }\n      />\n    </CardStyles>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Link } from 'react-router-dom';\n\nexport type CrossLinksTooltipProps = {\n  children: ReactNode;\n  crossLinks: { to: string; title: string }[];\n  moreItems?: number;\n  show: boolean;\n};\n\nconst StyledLinkedTooltip = styled.div`\n  .link {\n    color: ${({ theme }) => theme.colors.grayscale.light5};\n    display: block;\n    text-decoration: underline;\n  }\n`;\n\nexport default function CrossLinksTooltip({\n  children,\n  crossLinks = [],\n  moreItems = undefined,\n  show = false,\n}: CrossLinksTooltipProps) {\n  return (\n    <Tooltip\n      placement=\"top\"\n      data-test=\"crosslinks-tooltip\"\n      title={\n        show && (\n          <StyledLinkedTooltip>\n            {crossLinks.map(link => (\n              <Link\n                className=\"link\"\n                key={link.to}\n                to={link.to}\n                target=\"_blank\"\n                rel=\"noreferer noopener\"\n              >\n                {link.title}\n              </Link>\n            ))}\n            {moreItems && (\n              <span data-test=\"plus-more\">{t('+ %s more', moreItems)}</span>\n            )}\n          </StyledLinkedTooltip>\n        )\n      }\n    >\n      {children}\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { memo, useMemo } from 'react';\nimport { styled, useTruncation } from '@superset-ui/core';\nimport { Link } from 'react-router-dom';\nimport CrossLinksTooltip from './CrossLinksTooltip';\n\nexport type CrossLinkProps = {\n  title: string;\n  id: number;\n};\n\nexport type CrossLinksProps = {\n  crossLinks: Array<CrossLinkProps>;\n  maxLinks?: number;\n  linkPrefix?: string;\n};\n\nconst StyledCrossLinks = styled.div`\n  ${({ theme }) => `\n    & > span {\n      width: 100%;\n      display: flex;\n\n      .ant-tooltip-open {\n        display: inline;\n      }\n\n      .truncated {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        display: inline-block;\n        width: 100%;\n        vertical-align: bottom;\n      }\n\n      .count {\n        cursor: pointer;\n        color: ${theme.colors.grayscale.base};\n        font-weight: ${theme.typography.weights.bold};\n      }\n    }\n  `}\n`;\n\nfunction CrossLinks({\n  crossLinks,\n  maxLinks = 20,\n  linkPrefix = '/superset/dashboard/',\n}: CrossLinksProps) {\n  const [crossLinksRef, plusRef, elementsTruncated, hasHiddenElements] =\n    useTruncation();\n  const hasMoreItems = useMemo(\n    () =>\n      crossLinks.length > maxLinks ? crossLinks.length - maxLinks : undefined,\n    [crossLinks, maxLinks],\n  );\n  const links = useMemo(\n    () => (\n      <span className=\"truncated\" ref={crossLinksRef} data-test=\"crosslinks\">\n        {crossLinks.map((link, index) => (\n          <Link key={link.id} to={linkPrefix + link.id}>\n            {index === 0 ? link.title : `, ${link.title}`}\n          </Link>\n        ))}\n      </span>\n    ),\n    [crossLinks, crossLinksRef, linkPrefix],\n  );\n  const tooltipLinks = useMemo(\n    () =>\n      crossLinks.slice(0, maxLinks).map(l => ({\n        title: l.title,\n        to: linkPrefix + l.id,\n      })),\n    [crossLinks, linkPrefix, maxLinks],\n  );\n\n  return (\n    <StyledCrossLinks>\n      <CrossLinksTooltip\n        moreItems={hasMoreItems}\n        crossLinks={tooltipLinks}\n        show={!!elementsTruncated}\n      >\n        {links}\n        {hasHiddenElements && (\n          <span ref={plusRef} className=\"count\" data-test=\"count-crosslinks\">\n            +{elementsTruncated}\n          </span>\n        )}\n      </CrossLinksTooltip>\n    </StyledCrossLinks>\n  );\n}\n\nexport default memo(CrossLinks);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { memo, useMemo } from 'react';\nimport { ensureIsArray } from '@superset-ui/core';\nimport { ChartLinkedDashboard } from 'src/types/Chart';\nimport CrossLinks from './CrossLinks';\n\nexport const DashboardCrossLinks = memo(\n  ({ dashboards }: { dashboards: ChartLinkedDashboard[] }) => {\n    const crossLinks = useMemo(\n      () =>\n        ensureIsArray(dashboards).map((d: ChartLinkedDashboard) => ({\n          title: d.dashboard_title,\n          id: d.id,\n        })),\n      [dashboards],\n    );\n    return <CrossLinks crossLinks={crossLinks} />;\n  },\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  JsonResponse,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport { useState, useMemo, useCallback } from 'react';\nimport rison from 'rison';\nimport { uniqBy } from 'lodash';\nimport { useSelector } from 'react-redux';\nimport {\n  createErrorHandler,\n  createFetchRelated,\n  handleChartDelete,\n} from 'src/views/CRUD/utils';\nimport {\n  useChartEditModal,\n  useFavoriteStatus,\n  useListViewResource,\n} from 'src/views/CRUD/hooks';\nimport handleResourceExport from 'src/utils/export';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { TagsList } from 'src/components/Tags';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport FaveStar from 'src/components/FaveStar';\nimport { Link, useHistory } from 'react-router-dom';\nimport ListView, {\n  Filter,\n  FilterOperator,\n  Filters,\n  ListViewProps,\n  SelectOption,\n} from 'src/components/ListView';\nimport Loading from 'src/components/Loading';\nimport { dangerouslyGetItemDoNotUse } from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport Chart from 'src/types/Chart';\nimport Tag from 'src/types/TagType';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { nativeFilterGate } from 'src/dashboard/components/nativeFilters/utils';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport CertifiedBadge from 'src/components/CertifiedBadge';\nimport { GenericLink } from 'src/components/GenericLink/GenericLink';\nimport { loadTags } from 'src/components/Tags/utils';\nimport FacePile from 'src/components/FacePile';\nimport ChartCard from 'src/features/charts/ChartCard';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { findPermission } from 'src/utils/findPermission';\nimport { DashboardCrossLinks } from 'src/components/ListView/DashboardCrossLinks';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst FlexRowContainer = styled.div`\n  align-items: center;\n  display: flex;\n\n  a {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 1.2;\n  }\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the charts. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more charts that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\nconst registry = getChartMetadataRegistry();\n\nconst createFetchDatasets = async (\n  filterValue = '',\n  page: number,\n  pageSize: number,\n) => {\n  // add filters if filterValue\n  const filters = filterValue\n    ? { filters: [{ col: 'table_name', opr: 'sw', value: filterValue }] }\n    : {};\n  const queryParams = rison.encode({\n    columns: ['datasource_name', 'datasource_id'],\n    keys: ['none'],\n    order_column: 'table_name',\n    order_direction: 'asc',\n    page,\n    page_size: pageSize,\n    ...filters,\n  });\n\n  const { json = {} } = await SupersetClient.get({\n    endpoint: `/api/v1/dataset/?q=${queryParams}`,\n  });\n\n  const datasets = json?.result?.map(\n    ({ table_name: tableName, id }: { table_name: string; id: number }) => ({\n      label: tableName,\n      value: id,\n    }),\n  );\n\n  return {\n    data: uniqBy<SelectOption>(datasets, 'value'),\n    totalCount: json?.count,\n  };\n};\n\ninterface ChartListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst StyledActions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nfunction ChartList(props: ChartListProps) {\n  const {\n    addDangerToast,\n    addSuccessToast,\n    user: { userId },\n  } = props;\n\n  const history = useHistory();\n\n  const {\n    state: {\n      loading,\n      resourceCount: chartCount,\n      resourceCollection: charts,\n      bulkSelectEnabled,\n    },\n    setResourceCollection: setCharts,\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Chart>('chart', t('chart'), addDangerToast);\n\n  const chartIds = useMemo(() => charts.map(c => c.id), [charts]);\n  const { roles } = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const canReadTag = findPermission('can_read', 'Tag', roles);\n\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus(\n    'chart',\n    chartIds,\n    addDangerToast,\n  );\n  const {\n    sliceCurrentlyEditing,\n    handleChartUpdated,\n    openChartEditModal,\n    closeChartEditModal,\n  } = useChartEditModal(setCharts, charts);\n\n  const [importingChart, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n\n  // TODO: Fix usage of localStorage keying on the user id\n  const userSettings = dangerouslyGetItemDoNotUse(userId?.toString(), null) as {\n    thumbnails: boolean;\n  };\n\n  const openChartImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeChartImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleChartImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Chart imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const handleBulkChartExport = (chartsToExport: Chart[]) => {\n    const ids = chartsToExport.map(({ id }) => id);\n    handleResourceExport('chart', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  function handleBulkChartDelete(chartsToDelete: Chart[]) {\n    SupersetClient.delete({\n      endpoint: `/api/v1/chart/?q=${rison.encode(\n        chartsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected charts: %s', errMsg),\n        ),\n      ),\n    );\n  }\n  const fetchDashboards = async (\n    filterValue = '',\n    page: number,\n    pageSize: number,\n  ) => {\n    // add filters if filterValue\n    const filters = filterValue\n      ? {\n          filters: [\n            {\n              col: 'dashboard_title',\n              opr: FilterOperator.StartsWith,\n              value: filterValue,\n            },\n          ],\n        }\n      : {};\n    const queryParams = rison.encode({\n      columns: ['dashboard_title', 'id'],\n      keys: ['none'],\n      order_column: 'dashboard_title',\n      order_direction: 'asc',\n      page,\n      page_size: pageSize,\n      ...filters,\n    });\n    const response: void | JsonResponse = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/?q=${queryParams}`,\n    }).catch(() =>\n      addDangerToast(t('An error occurred while fetching dashboards')),\n    );\n    const dashboards = response?.json?.result?.map(\n      ({\n        dashboard_title: dashboardTitle,\n        id,\n      }: {\n        dashboard_title: string;\n        id: number;\n      }) => ({\n        label: dashboardTitle,\n        value: id,\n      }),\n    );\n    return {\n      data: uniqBy<SelectOption>(dashboards, 'value'),\n      totalCount: response?.json?.count,\n    };\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) =>\n          userId && (\n            <FaveStar\n              itemId={id}\n              saveFaveStar={saveFavoriteStatus}\n              isStarred={favoriteStatus[id]}\n            />\n          ),\n        Header: '',\n        id: 'id',\n        disableSortBy: true,\n        size: 'xs',\n        hidden: !userId,\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              url,\n              slice_name: sliceName,\n              certified_by: certifiedBy,\n              certification_details: certificationDetails,\n              description,\n            },\n          },\n        }: any) => (\n          <FlexRowContainer>\n            <Link to={url} data-test={`${sliceName}-list-chart-title`}>\n              {certifiedBy && (\n                <>\n                  <CertifiedBadge\n                    certifiedBy={certifiedBy}\n                    details={certificationDetails}\n                  />{' '}\n                </>\n              )}\n              {sliceName}\n            </Link>\n            {description && <InfoTooltip tooltip={description} />}\n          </FlexRowContainer>\n        ),\n        Header: t('Name'),\n        accessor: 'slice_name',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { viz_type: vizType },\n          },\n        }: any) => registry.get(vizType)?.name || vizType,\n        Header: t('Type'),\n        accessor: 'viz_type',\n        size: 'xxl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              datasource_name_text: dsNameTxt,\n              datasource_url: dsUrl,\n            },\n          },\n        }: any) => <GenericLink to={dsUrl}>{dsNameTxt}</GenericLink>,\n        Header: t('Dataset'),\n        accessor: 'datasource_id',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { dashboards },\n          },\n        }: any) => <DashboardCrossLinks dashboards={dashboards} />,\n        Header: t('On dashboards'),\n        accessor: 'dashboards',\n        disableSortBy: true,\n        size: 'xxl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { tags = [] },\n          },\n        }: any) => (\n          // Only show custom type tags\n          <TagsList\n            tags={tags.filter((tag: Tag) =>\n              tag.type\n                ? tag.type === 1 || tag.type === 'TagTypes.custom'\n                : true,\n            )}\n            maxTags={3}\n          />\n        ),\n        Header: t('Tags'),\n        accessor: 'tags',\n        disableSortBy: true,\n        hidden: !isFeatureEnabled(FeatureFlag.TaggingSystem),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        accessor: 'owners',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'last_saved_at',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleDelete = () =>\n            handleChartDelete(\n              original,\n              addSuccessToast,\n              addDangerToast,\n              refreshData,\n            );\n          const openEditModal = () => openChartEditModal(original);\n          const handleExport = () => handleBulkChartExport([original]);\n          if (!canEdit && !canDelete && !canExport) {\n            return null;\n          }\n\n          return (\n            <StyledActions className=\"actions\">\n              {canDelete && (\n                <ConfirmStatusChange\n                  title={t('Please confirm')}\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{original.slice_name}</b>?\n                    </>\n                  }\n                  onConfirm={handleDelete}\n                >\n                  {confirmDelete => (\n                    <Tooltip\n                      id=\"delete-action-tooltip\"\n                      title={t('Delete')}\n                      placement=\"bottom\"\n                    >\n                      <span\n                        data-test=\"trash\"\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"action-button\"\n                        onClick={confirmDelete}\n                      >\n                        <Icons.Trash />\n                      </span>\n                    </Tooltip>\n                  )}\n                </ConfirmStatusChange>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={openEditModal}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </StyledActions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [\n      userId,\n      canEdit,\n      canDelete,\n      canExport,\n      saveFavoriteStatus,\n      favoriteStatus,\n      refreshData,\n      addSuccessToast,\n      addDangerToast,\n    ],\n  );\n\n  const favoritesFilter: Filter = useMemo(\n    () => ({\n      Header: t('Favorite'),\n      key: 'favorite',\n      id: 'id',\n      urlDisplay: 'favorite',\n      input: 'select',\n      operator: FilterOperator.ChartIsFav,\n      unfilteredLabel: t('Any'),\n      selects: [\n        { label: t('Yes'), value: true },\n        { label: t('No'), value: false },\n      ],\n    }),\n    [],\n  );\n\n  const filters: Filters = useMemo(() => {\n    const filters_list = [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'slice_name',\n        input: 'search',\n        operator: FilterOperator.ChartAllText,\n      },\n      {\n        Header: t('Type'),\n        key: 'viz_type',\n        id: 'viz_type',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: t('All'),\n        selects: registry\n          .keys()\n          .filter(k => nativeFilterGate(registry.get(k)?.behaviors || []))\n          .map(k => ({ label: registry.get(k)?.name || k, value: k }))\n          .sort((a, b) => {\n            if (!a.label || !b.label) {\n              return 0;\n            }\n\n            if (a.label > b.label) {\n              return 1;\n            }\n            if (a.label < b.label) {\n              return -1;\n            }\n\n            return 0;\n          }),\n      },\n      {\n        Header: t('Dataset'),\n        key: 'dataset',\n        id: 'datasource_id',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchDatasets,\n        paginate: true,\n      },\n      ...(isFeatureEnabled(FeatureFlag.TaggingSystem) && canReadTag\n        ? [\n            {\n              Header: t('Tag'),\n              key: 'tags',\n              id: 'tags',\n              input: 'select',\n              operator: FilterOperator.ChartTagById,\n              unfilteredLabel: t('All'),\n              fetchSelects: loadTags,\n            },\n          ]\n        : []),\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.RelationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'chart',\n          'owners',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching chart owners values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Dashboard'),\n        key: 'dashboards',\n        id: 'dashboards',\n        input: 'select',\n        operator: FilterOperator.RelationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: fetchDashboards,\n        paginate: true,\n      },\n      ...(userId ? [favoritesFilter] : []),\n      {\n        Header: t('Certified'),\n        key: 'certified',\n        id: 'id',\n        urlDisplay: 'certified',\n        input: 'select',\n        operator: FilterOperator.ChartIsCertified,\n        unfilteredLabel: t('Any'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'chart',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n    ] as Filters;\n    return filters_list;\n  }, [addDangerToast, favoritesFilter, props.user]);\n\n  const sortTypes = [\n    {\n      desc: false,\n      id: 'slice_name',\n      label: t('Alphabetical'),\n      value: 'alphabetical',\n    },\n    {\n      desc: true,\n      id: 'changed_on_delta_humanized',\n      label: t('Recently modified'),\n      value: 'recently_modified',\n    },\n    {\n      desc: false,\n      id: 'changed_on_delta_humanized',\n      label: t('Least recently modified'),\n      value: 'least_recently_modified',\n    },\n  ];\n\n  const renderCard = useCallback(\n    (chart: Chart) => (\n      <ChartCard\n        chart={chart}\n        showThumbnails={\n          userSettings\n            ? userSettings.thumbnails\n            : isFeatureEnabled(FeatureFlag.Thumbnails)\n        }\n        hasPerm={hasPerm}\n        openChartEditModal={openChartEditModal}\n        bulkSelectEnabled={bulkSelectEnabled}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        refreshData={refreshData}\n        userId={userId}\n        loading={loading}\n        favoriteStatus={favoriteStatus[chart.id]}\n        saveFavoriteStatus={saveFavoriteStatus}\n        handleBulkChartExport={handleBulkChartExport}\n      />\n    ),\n    [\n      addDangerToast,\n      addSuccessToast,\n      bulkSelectEnabled,\n      favoriteStatus,\n      hasPerm,\n      loading,\n    ],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n  if (canDelete || canExport) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect,\n    });\n  }\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Chart')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        history.push('/chart/add');\n      },\n    });\n\n    subMenuButtons.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import charts')}\n          placement=\"bottomRight\"\n        >\n          <Icons.Import data-test=\"import-button\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openChartImportModal,\n    });\n  }\n\n  return (\n    <>\n      <SubMenu name={t('Charts')} buttons={subMenuButtons} />\n      {sliceCurrentlyEditing && (\n        <PropertiesModal\n          onHide={closeChartEditModal}\n          onSave={handleChartUpdated}\n          show\n          slice={sliceCurrentlyEditing}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected charts?')}\n        onConfirm={handleBulkChartDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              type: 'danger',\n              onSelect: confirmDelete,\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkChartExport,\n            });\n          }\n          return (\n            <ListView<Chart>\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              cardSortSelectOptions={sortTypes}\n              className=\"chart-list-view\"\n              columns={columns}\n              count={chartCount}\n              data={charts}\n              disableBulkSelect={toggleBulkSelect}\n              refreshData={refreshData}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              renderCard={renderCard}\n              enableBulkTag\n              bulkTagResourceName=\"chart\"\n              addSuccessToast={addSuccessToast}\n              addDangerToast={addDangerToast}\n              showThumbnails={\n                userSettings\n                  ? userSettings.thumbnails\n                  : isFeatureEnabled(FeatureFlag.Thumbnails)\n              }\n              defaultViewMode={\n                isFeatureEnabled(FeatureFlag.ListviewsDefaultCardView)\n                  ? 'card'\n                  : 'table'\n              }\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"chart\"\n        resourceLabel={t('chart')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleChartImport}\n        show={importingChart}\n        onHide={closeChartImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(ChartList);\n"],"names":["baseIteratee","baseUniq","module","exports","array","iteratee","length","useChildElementTruncation","elementsTruncated","setElementsTruncated","useState","hasHiddenElements","setHasHiddenElements","elementRef","useRef","plusRef","useLayoutEffect","_elementRef$current","onResize","currentElement","current","plusRefElement","scrollWidth","clientWidth","childNodes","truncationWidth","plusSize","offsetWidth","maxWidth","elementsCount","width","hiddenElements","i","obs","ResizeObserver","element","parentElement","observe","disconnect","ImageContainer","styled","div","src","position","ImageLoader","fallback","isLoading","rest","imgSrc","setImgSrc","useEffect","fetch","then","response","blob","test","type","imgURL","URL","createObjectURL","catch","errMsg","logging","error","_jsx","getDefaultRowLimit","_bootstrapData$common","_bootstrapData$common2","bootstrapData","getBootstrapData","common","conf","NATIVE_FILTER_DEFAULT_ROW_LIMIT","getFormData","datasetId","dependencies","groupby","defaultDataMask","controlValues","filterType","sortMetric","adhoc_filters","time_range","granularity_sqla","dashboardId","id","_defaultDataMask$filt","otherProps","datasource","extra_filters","extra_form_data","metrics","row_limit","showSearch","defaultValue","filterState","value","url_params","extractUrlParams","inView","viz_type","native_filter_id","mergeExtraFormData","originalExtra","newExtra","mergedExtra","EXTRA_FORM_DATA_APPEND_KEYS","forEach","key","mergedValues","EXTRA_FORM_DATA_OVERRIDE_KEYS","originalValue","undefined","newValue","getExtraFormData","dataMask","filterIdsAppliedOnChart","extraFormData","_dataMask$key$extraFo","_dataMask$key","nativeFilterGate","behaviors","includes","Behavior","NativeFilter","isFeatureEnabled","FeatureFlag","DashboardCrossFilters","InteractiveChart","isComponentATab","dashboardLayout","componentId","_dashboardLayout$comp","TAB_TYPE","findTabsWithChartsInScopeHelper","chartsInScope","tabIds","tabsToHighlight","visited","_dashboardLayout$comp2","_dashboardLayout$comp3","_dashboardLayout$comp4","_dashboardLayout$comp5","_dashboardLayout$comp6","_dashboardLayout$comp7","has","add","CHART_TYPE","meta","chartId","children","childId","findTabsWithChartsInScope","rootChildId","DASHBOARD_ROOT_ID","hasTopLevelTabs","DASHBOARD_GRID_ID","tabsInScope","Set","_dashboardLayout$root","_dashboardLayout$root2","tabId","Object","values","filter","getFilterValueForDisplay","Array","isArray","join","JSON","stringify","t","ChartCard","chart","hasPerm","openChartEditModal","bulkSelectEnabled","addDangerToast","addSuccessToast","refreshData","loading","showThumbnails","saveFavoriteStatus","favoriteStatus","chartFilter","userId","handleBulkChartExport","history","useHistory","canEdit","canDelete","canExport","theme","useTheme","menu","_jsxs","Menu","Item","ConfirmStatusChange","title","description","_Fragment","slice_name","onConfirm","handleChartDelete","confirmDelete","role","tabIndex","className","onClick","Icons","Trash","iconSize","Share","EditAlt","CardStyles","url","push","ListViewCard","certifiedBy","certified_by","certificationDetails","certification_details","cover","Thumbnails","thumbnail_url","imgFallbackURL","changed_on_delta_humanized","coverLeft","FacePile","users","owners","coverRight","Label","datasource_name_text","linkComponent","Link","actions","Actions","e","stopPropagation","preventDefault","FaveStar","itemId","saveFaveStar","isStarred","AntdDropdown","overlay","MoreVert","iconColor","colors","grayscale","base","StyledLinkedTooltip","light5","CrossLinksTooltip","crossLinks","moreItems","show","Tooltip","placement","map","link","to","target","rel","StyledCrossLinks","typography","weights","bold","CrossLinks","maxLinks","linkPrefix","crossLinksRef","useTruncation","hasMoreItems","useMemo","links","ref","index","tooltipLinks","slice","l","memo","DashboardCrossLinks","dashboards","ensureIsArray","d","dashboard_title","FlexRowContainer","gridUnit","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","registry","getChartMetadataRegistry","createFetchDatasets","async","filterValue","page","pageSize","_json$result","filters","col","opr","queryParams","rison","columns","keys","order_column","order_direction","page_size","json","SupersetClient","get","endpoint","datasets","result","table_name","tableName","label","data","_uniqBy","totalCount","count","StyledActions","withToasts","props","user","state","resourceCount","chartCount","resourceCollection","charts","setResourceCollection","setCharts","fetchData","toggleBulkSelect","useListViewResource","chartIds","c","roles","useSelector","canReadTag","findPermission","useFavoriteStatus","sliceCurrentlyEditing","handleChartUpdated","closeChartEditModal","useChartEditModal","importingChart","showImportModal","passwordFields","setPasswordFields","preparingExport","setPreparingExport","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","userSettings","dangerouslyGetItemDoNotUse","toString","canCreate","initialSort","desc","chartsToExport","ids","handleResourceExport","fetchDashboards","_response$json","_response$json$result","_response$json2","FilterOperator","StartsWith","dashboardTitle","Cell","row","original","Header","disableSortBy","size","hidden","sliceName","CertifiedBadge","details","InfoTooltip","tooltip","accessor","vizType","_registry$get","name","dsNameTxt","datasource_url","dsUrl","GenericLink","tags","TagsList","tag","maxTags","TaggingSystem","changedOn","changed_by","changedBy","ModifiedInfo","date","handleDelete","handleExport","openEditModal","QueryObjectColumns","ChangedBy","favoritesFilter","urlDisplay","input","operator","ChartIsFav","unfilteredLabel","selects","ChartAllText","Equals","k","_registry$get2","_registry$get3","sort","a","b","fetchSelects","paginate","ChartTagById","loadTags","RelationManyMany","createFetchRelated","createErrorHandler","ChartIsCertified","RelationOneMany","sortTypes","renderCard","useCallback","thumbnails","subMenuButtons","buttonStyle","Import","openChartImportModal","SubMenu","buttons","PropertiesModal","onHide","onSave","chartsToDelete","delete","message","bulkActions","onSelect","ListView","cardSortSelectOptions","disableBulkSelect","enableBulkTag","bulkTagResourceName","defaultViewMode","ListviewsDefaultCardView","ImportModelsModal","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","handleChartImport","closeChartImportModal","Loading"],"sourceRoot":""}