{"version":3,"file":"a24f5ffa4f6cf82f4696.chunk.js","mappings":"gHAEA,IAAIA,EAAyB,iBAC7BC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAA,QAGA,SAASE,EAAQC,GACf,IAAIC,EAASC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC9EG,EAAM,GAaV,OAZAC,EAAOC,QAAQC,SAASC,QAAQT,GAAU,SAAUU,IAC9C,MAACA,GAA2CT,EAAOU,aAGnDC,MAAMC,QAAQH,GAChBL,EAAMA,EAAIS,OAAOf,EAAQW,KAChB,EAAIK,EAASC,YAAYN,IAAUA,EAAMO,MAClDZ,EAAMA,EAAIS,OAAOf,EAAQW,EAAMO,MAAMjB,SAAUC,IAE/CI,EAAIa,KAAKR,GAEb,IACOL,CACT,EAlBA,IAAIC,EAASZ,EAAuB,EAAQ,QACxCqB,EAAW,EAAQ,M,kBCNvB,IAAIrB,EAAyB,iBAC7BC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAA,QAEA,SAA8BsB,EAAQC,EAAWC,EAAIpB,GAEnD,IAAIqB,EAAWC,EAAUhB,QAAQiB,wBAA0B,SAAaC,GACtEF,EAAUhB,QAAQiB,wBAAwBH,EAAII,EAChD,EAAIJ,EAIJ,OAHIF,SAAwCA,EAAOO,kBACjDP,EAAOO,iBAAiBN,EAAWE,EAAUrB,GAExC,CACL0B,OAAQ,WACFR,SAAwCA,EAAOS,qBACjDT,EAAOS,oBAAoBR,EAAWE,EAAUrB,EAEpD,EAEJ,EAhBA,IAAIsB,EAAY7B,EAAuB,EAAQ,O,gBCL/CC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQgC,IAqCR,SAAaC,EAAMC,GACjB,IAAI5B,EAASD,UAAUC,OACnB6B,EAAQC,EAAiBH,GAE7B,OADAC,EAAOG,EAASH,GAAQ,aAAcD,EAAKE,MAAQ,WAAa,aAAeD,EAC7D,IAAX5B,EAAe6B,EAnBxB,SAAuBF,EAAMK,EAAMrC,GAEjC,GADAqC,EAAOA,EAAKC,cACE,SAAVtC,EAAkB,CACpB,GAAa,WAATqC,EACF,OAAOL,EAAKO,aAEd,GAAa,UAATF,EACF,OAAOL,EAAKQ,WAEhB,CAIA,OAHMH,KAAQI,IACZA,EAAYJ,GAAQK,EAAcC,KAAKN,IAElCI,EAAYJ,GAAQO,WAAW5C,IAAU,EAAIA,CACtD,CAKgC6C,CAAcb,EAAMC,EAAMC,EAAMD,IAASD,EAAKE,MAAMD,GACpF,EAzCAlC,EAAQ+C,cA+ER,WAGE,MAAO,CACLC,MAHUC,SAASC,gBAAgBC,YAInCC,OAHWC,OAAOC,aAAeL,SAASC,gBAAgBK,aAK9D,EArFAvD,EAAQwD,WAsER,WAGE,MAAO,CACLR,MAHUS,KAAKC,IAAIT,SAASC,gBAAgBS,YAAaV,SAASW,KAAKD,aAIvEP,OAHWK,KAAKC,IAAIT,SAASC,gBAAgBW,aAAcZ,SAASW,KAAKC,cAK7E,EA5EA7D,EAAQ8D,UA2FR,SAAmB7B,GACjB,IAAI8B,EAAM9B,EAAK+B,wBACXC,EAAUhB,SAASC,gBAGvB,MAAO,CACLgB,KAAMH,EAAIG,MAAQb,OAAOc,aAAeF,EAAQG,aAAeH,EAAQI,YAAcpB,SAASW,KAAKS,YAAc,GACjHC,IAAKP,EAAIO,KAAOjB,OAAOkB,aAAeN,EAAQO,YAAcP,EAAQQ,WAAaxB,SAASW,KAAKa,WAAa,GAEhH,EAnGAzE,EAAQ0E,eA8DR,SAAwBC,GACtB,OAAIA,IAAO1B,SAASW,KACXP,OAAOC,aAAeL,SAASC,gBAAgBK,aAEjDoB,EAAGnC,YACZ,EAlEAxC,EAAQ4E,cAuDR,SAAuBD,GACrB,OAAIA,IAAO1B,SAASW,KACXX,SAASC,gBAAgBC,YAE3BwB,EAAGlC,WACZ,EA3DAzC,EAAQ6E,UAkFR,WACE,MAAO,CACLT,WAAYX,KAAKC,IAAIT,SAASC,gBAAgBkB,WAAYnB,SAASW,KAAKQ,YACxEI,UAAWf,KAAKC,IAAIT,SAASC,gBAAgBsB,UAAWvB,SAASW,KAAKY,WAE1E,EAtFAxE,EAAQ8E,IAoCR,SAASA,EAAI7C,EAAMC,EAAMjC,GACvB,IAAIK,EAASD,UAAUC,OAEvB,GADA4B,EAAOG,EAASH,GAAQ,aAAcD,EAAKE,MAAQ,WAAa,aAAeD,EAChE,IAAX5B,EAKF,MAJqB,iBAAVL,GAAsB0C,EAAcC,KAAKV,KAClDjC,EAAQ,GAAGgB,OAAOhB,EAAO,OAE3BgC,EAAKE,MAAMD,GAAQjC,EACZA,EAET,IAAK,IAAI8E,KAAK7C,EACRA,EAAK8C,eAAeD,IACtBD,EAAI7C,EAAM8C,EAAG7C,EAAK6C,IAGtB,OAAO3C,EAAiBH,EAC1B,EAlDA,IAAIU,EAAgB,6CAChBD,EAAc,CAChBwB,MAAM,EACNI,KAAK,GAEHjC,EAAW,CACb4C,SAAU,EACVC,WAAY,EACZC,MAAO,GAET,SAAS/C,EAAiBH,GACxB,OAAyB,IAAlBA,EAAKmD,SAAiBnD,EAAKoD,cAAcC,YAAYlD,iBAAiBH,EAAM,MAAQ,CAAC,CAC9F,C,gBCxBAnC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAA,aAAkB,EACHA,EAAA,QAAkB,SAAkBuF,GACjD,IAAKA,EACH,OAAO,EAET,GAAIA,aAAmBC,QAAS,CAC9B,GAAID,EAAQE,aACV,OAAO,EAET,GAAIF,EAAQG,QAAS,CACnB,IAAIC,EAAWJ,EAAQG,UACrB1C,EAAQ2C,EAAS3C,MACjBI,EAASuC,EAASvC,OACpB,GAAIJ,GAASI,EACX,OAAO,CAEX,CACA,GAAImC,EAAQvB,sBAAuB,CACjC,IAAI4B,EAAwBL,EAAQvB,wBAClC6B,EAASD,EAAsB5C,MAC/B8C,EAAUF,EAAsBxC,OAClC,GAAIyC,GAAUC,EACZ,OAAO,CAEX,CACF,CACA,OAAO,CACT,C,iBC9BAhG,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAA,QA6DA,SAA0B+F,GACxB,MAAwB,oBAAb9C,SACF,IAEL8C,QAAoBxF,IAAXyF,KACXA,EAASC,KAEJD,EAAOhD,MAChB,EApEAhD,EAAQkG,uBAqER,SAAgC5E,GAC9B,MAAwB,oBAAb2B,UAA6B3B,GAAYA,aAAkBkE,QAM/DS,EAAqB3E,GALnB,CACL0B,MAAO,EACPI,OAAQ,EAId,EA5EA,IAGI4C,EAHAG,EAAc,EAAQ,OAI1B,SAASF,EAAqBG,GAC5B,IAAIC,EAAW,wBAAwBpF,OAAOwC,KAAK6C,SAASC,SAAS,IAAIC,UAAU,IAC/EC,EAAaxD,SAASyD,cAAc,OACxCD,EAAWE,GAAKN,EAGhB,IASIO,EACAC,EAVAC,EAAeL,EAAWtE,MAW9B,GAVA2E,EAAaC,SAAW,WACxBD,EAAa5C,KAAO,IACpB4C,EAAaxC,IAAM,IACnBwC,EAAa9D,MAAQ,QACrB8D,EAAa1D,OAAS,QACtB0D,EAAaE,SAAW,SAKpBZ,EAAK,CACP,IAAIa,EAAc7E,iBAAiBgE,GACnCU,EAAaI,eAAiBD,EAAYC,eAC1CJ,EAAaK,eAAiBF,EAAYE,eAG1C,IAAIC,EAAuBhF,iBAAiBgE,EAAK,uBAC7CpD,EAAQqE,SAASD,EAAqBpE,MAAO,IAC7CI,EAASiE,SAASD,EAAqBhE,OAAQ,IAGnD,IACE,IAAIkE,EAAatE,EAAQ,UAAU/B,OAAOmG,EAAqBpE,MAAO,KAAO,GACzEuE,EAAcnE,EAAS,WAAWnC,OAAOmG,EAAqBhE,OAAQ,KAAO,IACjF,EAAI+C,EAAYqB,WAAW,MAAMvG,OAAOoF,EAAU,2BAA2BpF,OAAOqG,EAAY,MAAMrG,OAAOsG,EAAa,OAAQlB,EACpI,CAAE,MAAOzE,GAEP6F,QAAQC,MAAM9F,GAGdgF,EAAgB5D,EAChB6D,EAAiBzD,CACnB,CACF,CACAH,SAASW,KAAK+D,YAAYlB,GAG1B,IAAI9C,EAAcyC,GAAOQ,IAAkBgB,MAAMhB,GAAiBA,EAAgBH,EAAWhE,YAAcgE,EAAWtD,YAClHU,EAAeuC,GAAOS,IAAmBe,MAAMf,GAAkBA,EAAiBJ,EAAWjE,aAAeiE,EAAWlD,aAK3H,OAFAN,SAASW,KAAKiE,YAAYpB,IAC1B,EAAIN,EAAY2B,WAAWzB,GACpB,CACLrD,MAAOW,EACPP,OAAQS,EAEZ,C,kBC/DA,IAAIkE,EAA0B,iBAC9BjI,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAA,QAEA,SAAkByB,GAChB,IAAIuG,EAAQC,EAAMC,SASlB,OARAF,EAAMG,QAAU1G,EACHwG,EAAMG,aAAY,WAE7B,IADA,IAAIC,EACKC,EAAOjI,UAAUC,OAAQiI,EAAO,IAAIxH,MAAMuH,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQnI,UAAUmI,GAEzB,OAA4C,QAApCH,EAAiBL,EAAMG,eAAwC,IAAnBE,OAA4B,EAASA,EAAeI,KAAKC,MAAML,EAAgB,CAACL,GAAO/G,OAAOsH,GACpJ,GAAG,GAEL,EAZA,IAAIN,EAAQF,EAAwB,EAAQ,O,kBCL5C,IAAIlI,EAAyB,iBACzBkI,EAA0B,iBAC9BjI,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ2I,sBAAwB3I,EAAA,aAAkB,EAClD,IAAIiI,EAAQF,EAAwB,EAAQ,QAKxCa,GAA6D,EAJhD/I,EAAuB,EAAQ,QAIgCa,WAAauH,EAAMY,gBAAkBZ,EAAMa,UACvHD,EAAkB,SAAyBpH,EAAUsH,GACvD,IAAIC,EAAgBf,EAAMC,QAAO,GACjCU,GAAwB,WACtB,OAAOnH,EAASuH,EAAcb,QAChC,GAAGY,GAGHH,GAAwB,WAEtB,OADAI,EAAcb,SAAU,EACjB,WACLa,EAAcb,SAAU,CAC1B,CACF,GAAG,GACL,EAC4BnI,EAAQ2I,sBAAwB,SAA+BlH,EAAUsH,GACnGF,GAAgB,SAAUI,GACxB,IAAKA,EACH,OAAOxH,GAEX,GAAGsH,EACL,EACe/I,EAAA,QAAkB6I,C,kBCjCjC,IAAIhJ,EAAyB,iBAC7BC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAA,QAcA,SAAwBkJ,EAAmB9I,GACzC,IAAI+I,EAAO/I,GAAU,CAAC,EACpBgJ,EAAeD,EAAKC,aACpBnJ,EAAQkJ,EAAKlJ,MACboJ,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UAGfC,GAAY,EAAIC,EAAW9I,UAAS,WACpC,OAAI+I,EAASxJ,GACJA,EACEwJ,EAASL,GACa,mBAAjBA,EAA8BA,IAAiBA,EAEzB,mBAAtBF,EAAmCA,IAAsBA,CAE3E,IACAQ,GAAa,EAAIC,EAAgBjJ,SAAS6I,EAAW,GACrDK,EAAaF,EAAW,GACxBG,EAAgBH,EAAW,GACzBI,OAAwBvJ,IAAVN,EAAsBA,EAAQ2J,EAC5CG,EAAkBT,EAAYA,EAAUQ,GAAeA,EAGvDE,GAAa,EAAIC,EAAUvJ,SAAS2I,GACpCa,GAAa,EAAIV,EAAW9I,SAAS,CAACoJ,IACxCK,GAAa,EAAIR,EAAgBjJ,SAASwJ,EAAY,GACtDE,EAAYD,EAAW,GACvBE,EAAeF,EAAW,GAoB5B,OAnBA,EAAIG,EAAiB3B,wBAAuB,WAC1C,IAAI4B,EAAOH,EAAU,GACjBR,IAAeW,GACjBP,EAAWJ,EAAYW,EAE3B,GAAG,CAACH,KAGJ,EAAIE,EAAiB3B,wBAAuB,WACrCc,EAASxJ,IACZ4J,EAAc5J,EAElB,GAAG,CAACA,IAOG,CAAC8J,GAJY,EAAIE,EAAUvJ,UAAS,SAAU8J,EAASC,GAC5DZ,EAAcW,EAASC,GACvBJ,EAAa,CAACP,GAAcW,EAC9B,IAEF,EA9DA,IAAId,EAAkB9J,EAAuB,EAAQ,QACjDoK,EAAYpK,EAAuB,EAAQ,QAC3CyK,EAAmB,EAAQ,OAC3Bd,EAAa3J,EAAuB,EAAQ,QAEhD,SAAS4J,EAASxJ,GAChB,YAAiBM,IAAVN,CACT,C,kBCZA,IAAI8H,EAA0B,iBAC1BlI,EAAyB,iBAC7BC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAA,QAQA,SAAsBoJ,GACpB,IAAIsB,EAAazC,EAAMC,QAAO,GAC1ByC,EAAkB1C,EAAM2C,SAASxB,GACnCyB,GAAmB,EAAIlB,EAAgBjJ,SAASiK,EAAiB,GACjE1K,EAAQ4K,EAAiB,GACzBC,EAAWD,EAAiB,GAa9B,OAZA5C,EAAMa,WAAU,WAEd,OADA4B,EAAWvC,SAAU,EACd,WACLuC,EAAWvC,SAAU,CACvB,CACF,GAAG,IAOI,CAAClI,EANR,SAAsBuK,EAASC,GACzBA,GAAiBC,EAAWvC,SAGhC2C,EAASN,EACX,EAEF,EA1BA,IAAIb,EAAkB9J,EAAuB,EAAQ,QACjDoI,EAAQF,EAAwB,EAAQ,O,wGCCxCgD,EADiD,iBAAhBC,aAAuD,mBAApBA,YAAYD,IAChD,WAClC,OAAOC,YAAYD,KACrB,EAAI,WACF,OAAOE,KAAKF,KACd,EACA,SAASG,EAAcC,GACrBC,qBAAqBD,EAAUxE,GACjC,CACA,SAAS0E,EAAe5J,EAAU6J,GAChC,IAAIC,EAAQR,IAURI,EAAY,CACdxE,GAAI6E,uBATN,SAASC,IACHV,IAAQQ,GAASD,EACnB7J,EAASgH,KAAK,MAEd0C,EAAUxE,GAAK6E,sBAAsBC,EAEzC,KAKA,OAAON,CACT,CAEA,IAAIO,GAAQ,EAEZ,SAASC,EAAiBC,GAKxB,QAJoB,IAAhBA,IACFA,GAAc,IAGF,IAAVF,GAAeE,EAAa,CAC9B,IAAIC,EAAM5I,SAASyD,cAAc,OAC7BvE,EAAQ0J,EAAI1J,MAChBA,EAAMa,MAAQ,OACdb,EAAMiB,OAAS,OACfjB,EAAM6E,SAAW,SACjB/D,SAASW,KAAK+D,YAAYkE,GAC1BH,EAAOG,EAAIpJ,YAAcoJ,EAAI1I,YAC7BF,SAASW,KAAKiE,YAAYgE,EAC5B,CAEA,OAAOH,CACT,CACA,IAAII,EAAkB,KAOtB,SAASC,EAAiBH,GAKxB,QAJoB,IAAhBA,IACFA,GAAc,GAGQ,OAApBE,GAA4BF,EAAa,CAC3C,IAAII,EAAW/I,SAASyD,cAAc,OAClCuF,EAAaD,EAAS7J,MAC1B8J,EAAWjJ,MAAQ,OACnBiJ,EAAW7I,OAAS,OACpB6I,EAAWjF,SAAW,SACtBiF,EAAWC,UAAY,MACvB,IAAIC,EAAWlJ,SAASyD,cAAc,OAClC0F,EAAaD,EAAShK,MAmB1B,OAlBAiK,EAAWpJ,MAAQ,QACnBoJ,EAAWhJ,OAAS,QACpB4I,EAASrE,YAAYwE,GACrBlJ,SAASW,KAAK+D,YAAYqE,GAEtBA,EAAS5H,WAAa,EACxB0H,EAAkB,uBAElBE,EAAS5H,WAAa,EAGpB0H,EAD0B,IAAxBE,EAAS5H,WACO,WAEA,sBAItBnB,SAASW,KAAKiE,YAAYmE,GACnBF,CACT,CAEA,OAAOA,CACT,CAEA,IAEIO,EAAiB,SAAwBlD,GAC3C,IAAImD,EAAcnD,EAAKmD,YAGvB,OAFWnD,EAAKoD,KACDpD,EAAKqD,SACF,IAAMF,CAC1B,EAgBA,SAASG,EAAoBC,GAC3B,IAAIC,EAEAC,EAAkBF,EAAME,gBACxBC,EAA+BH,EAAMG,6BACrCC,EAAkCJ,EAAMI,gCACxCC,EAAiBL,EAAMK,eACvBC,EAA0BN,EAAMM,wBAChCC,EAAyBP,EAAMO,uBAC/BC,EAAiCR,EAAMQ,+BACvCC,EAA8BT,EAAMS,4BACpCC,EAAeV,EAAMU,aACrBC,EAAeX,EAAMW,aACrBC,EAA4BZ,EAAMY,0BAClCC,EAA+Bb,EAAMa,6BACrCC,EAAoBd,EAAMc,kBAC1BC,EAAwCf,EAAMe,sCAC9CC,EAAgBhB,EAAMgB,cAC1B,OAAOf,EAAsB,SAAUgB,GAMrC,SAASC,EAAKxM,GACZ,IAAIyM,EA4JJ,OA1JAA,EAAQF,EAAelF,KAAKqF,KAAM1M,IAAU0M,MACtCC,eAAiBP,EAAkBK,EAAMzM,OAAO,OAAuByM,IAC7EA,EAAMG,2BAA6B,KACnCH,EAAMI,eAAY,EAClBJ,EAAMK,MAAQ,CACZC,UAAU,OAAuBN,GACjCO,aAAa,EACbC,0BAA2B,UAC3BjK,WAAqD,iBAAlCyJ,EAAMzM,MAAMkN,kBAAiCT,EAAMzM,MAAMkN,kBAAoB,EAChG9J,UAAmD,iBAAjCqJ,EAAMzM,MAAMmN,iBAAgCV,EAAMzM,MAAMmN,iBAAmB,EAC7FC,0BAA0B,EAC1BC,wBAAyB,WAE3BZ,EAAMa,0BAAuB,EAC7Bb,EAAMa,sBAAuB,QAAW,SAAUC,EAA0BC,EAAyBC,EAAuBC,EAAsBC,EAAyBC,EAAwBC,EAAsBC,GACvN,OAAOrB,EAAMzM,MAAM+N,gBAAgB,CACjCR,yBAA0BA,EAC1BC,wBAAyBA,EACzBC,sBAAuBA,EACvBC,qBAAsBA,EACtBC,wBAAyBA,EACzBC,uBAAwBA,EACxBC,qBAAsBA,EACtBC,oBAAqBA,GAEzB,IACArB,EAAMuB,mBAAgB,EACtBvB,EAAMuB,eAAgB,QAAW,SAAUhL,EAAYI,EAAW6J,EAA2BI,EAAyBD,GACpH,OAAOX,EAAMzM,MAAMiO,SAAS,CAC1BhB,0BAA2BA,EAC3BjK,WAAYA,EACZI,UAAWA,EACXiK,wBAAyBA,EACzBD,yBAA0BA,GAE9B,IACAX,EAAMyB,mBAAgB,EAEtBzB,EAAMyB,cAAgB,SAAU9C,EAAUF,GACxC,IAQInK,EARAoN,EAAc1B,EAAMzM,MACpBoO,EAAcD,EAAYC,YAC1BtD,EAAYqD,EAAYrD,UACxBuD,EAAYF,EAAYE,UAExBC,EAAiB7B,EAAM8B,mBAAmBlC,GAAyC+B,EAAa/B,GAAyCvB,EAAWuB,GAAyCgC,GAE7LG,EAAMpD,EAAW,IAAMF,EAG3B,GAAIoD,EAAe1K,eAAe4K,GAChCzN,EAAQuN,EAAeE,OAClB,CACL,IAAIC,EAAUjD,EAAgBiB,EAAMzM,MAAOkL,EAAauB,EAAME,gBAE1D+B,EAAsB,QAAd5D,EACZwD,EAAeE,GAAOzN,EAAQ,CAC5B4E,SAAU,WACV7C,KAAM4L,OAAQvP,EAAYsP,EAC1BE,MAAOD,EAAQD,OAAUtP,EACzB+D,IAAK+I,EAAaQ,EAAMzM,MAAOoL,EAAUqB,EAAME,gBAC/C3K,OAAQgK,EAAaS,EAAMzM,MAAOoL,EAAUqB,EAAME,gBAClD/K,MAAO+J,EAAec,EAAMzM,MAAOkL,EAAauB,EAAME,gBAE1D,CAEA,OAAO5L,CACT,EAEA0L,EAAM8B,wBAAqB,EAC3B9B,EAAM8B,oBAAqB,QAAW,SAAUK,EAAGC,EAAIC,GACrD,MAAO,CAAC,CACV,IAEArC,EAAMsC,UAAY,SAAUC,GAC1B,IAAIC,EAAuBD,EAAME,cAC7B/M,EAAe8M,EAAqB9M,aACpCJ,EAAckN,EAAqBlN,YACnCiB,EAAaiM,EAAqBjM,WAClCI,EAAY6L,EAAqB7L,UACjCX,EAAewM,EAAqBxM,aACpCF,EAAc0M,EAAqB1M,YAEvCkK,EAAM0C,UAAS,SAAUC,GACvB,GAAIA,EAAUpM,aAAeA,GAAcoM,EAAUhM,YAAcA,EAIjE,OAAO,KAGT,IAAI0H,EAAY2B,EAAMzM,MAAM8K,UAKxBuE,EAAuBrM,EAE3B,GAAkB,QAAd8H,EACF,OAAQH,KACN,IAAK,WACH0E,GAAwBrM,EACxB,MAEF,IAAK,sBACHqM,EAAuB9M,EAAcR,EAAciB,EAMzDqM,EAAuBhN,KAAKC,IAAI,EAAGD,KAAKiN,IAAID,EAAsB9M,EAAcR,IAChF,IAAIwN,EAAsBlN,KAAKC,IAAI,EAAGD,KAAKiN,IAAIlM,EAAWX,EAAeN,IACzE,MAAO,CACL6K,aAAa,EACbC,0BAA2BmC,EAAUpM,WAAaA,EAAa,UAAY,WAC3EA,WAAYqM,EACZjM,UAAWmM,EACXlC,wBAAyB+B,EAAUhM,UAAYA,EAAY,UAAY,WACvEgK,0BAA0B,EAE9B,GAAGX,EAAM+C,2BACX,EAEA/C,EAAMgD,gBAAkB,SAAUC,GAChC,IAAIC,EAAWlD,EAAMzM,MAAM2P,SAC3BlD,EAAMI,UAAY6C,EAEM,mBAAbC,EACTA,EAASD,GACY,MAAZC,GAAwC,iBAAbA,GAAyBA,EAAS/L,eAAe,aACrF+L,EAAS5I,QAAU2I,EAEvB,EAEAjD,EAAM+C,2BAA6B,WACQ,OAArC/C,EAAMG,4BACR9C,EAAc2C,EAAMG,4BAGtBH,EAAMG,2BAA6B3C,EAAewC,EAAMmD,kBA7L3B,IA8L/B,EAEAnD,EAAMmD,kBAAoB,WACxBnD,EAAMG,2BAA6B,KAEnCH,EAAM0C,SAAS,CACbnC,aAAa,IACZ,WAGDP,EAAM8B,oBAAoB,EAC5B,GACF,EAEO9B,CACT,EAnKA,OAAeD,EAAMD,GAqKrBC,EAAKqD,yBAA2B,SAAkCC,EAAWV,GAG3E,OAFAW,EAAoBD,EAAWV,GAC/B9C,EAAcwD,GACP,IACT,EAEA,IAAIE,EAASxD,EAAKyD,UAqTlB,OAnTAD,EAAOE,SAAW,SAAkBC,GAClC,IAAInN,EAAamN,EAAMnN,WACnBI,EAAY+M,EAAM/M,eAEHjE,IAAf6D,IACFA,EAAaX,KAAKC,IAAI,EAAGU,SAGT7D,IAAdiE,IACFA,EAAYf,KAAKC,IAAI,EAAGc,IAG1BsJ,KAAKyC,UAAS,SAAUC,GAStB,YARmBjQ,IAAf6D,IACFA,EAAaoM,EAAUpM,iBAGP7D,IAAdiE,IACFA,EAAYgM,EAAUhM,WAGpBgM,EAAUpM,aAAeA,GAAcoM,EAAUhM,YAAcA,EAC1D,KAGF,CACL6J,0BAA2BmC,EAAUpM,WAAaA,EAAa,UAAY,WAC3EA,WAAYA,EACZI,UAAWA,EACXgK,0BAA0B,EAC1BC,wBAAyB+B,EAAUhM,UAAYA,EAAY,UAAY,WAE3E,GAAGsJ,KAAK8C,2BACV,EAEAQ,EAAOI,aAAe,SAAsBC,GAC1C,IAAIC,EAAcD,EAAME,MACpBA,OAAwB,IAAhBD,EAAyB,OAASA,EAC1CpF,EAAcmF,EAAMnF,YACpBE,EAAWiF,EAAMjF,SACjBoF,EAAe9D,KAAK1M,MACpByQ,EAAcD,EAAaC,YAC3BzO,EAASwO,EAAaxO,OACtB0O,EAAWF,EAAaE,SACxB9O,EAAQ4O,EAAa5O,MACrB+O,EAAcjE,KAAKI,MACnB9J,EAAa2N,EAAY3N,WACzBI,EAAYuN,EAAYvN,UACxBwN,EAAgBrG,SAEApL,IAAhB+L,IACFA,EAAc7I,KAAKC,IAAI,EAAGD,KAAKiN,IAAIpE,EAAauF,EAAc,UAG/CtR,IAAbiM,IACFA,EAAW/I,KAAKC,IAAI,EAAGD,KAAKiN,IAAIlE,EAAUsF,EAAW,KAGvD,IAAIG,EAAuBjF,EAAwBc,KAAK1M,MAAO0M,KAAKC,gBAKhEmE,EAJsBjF,EAAuBa,KAAK1M,MAAO0M,KAAKC,gBAId/K,EAAQgP,EAAgB,EACxEG,EAAwBF,EAAuB7O,EAAS4O,EAAgB,EAC5ElE,KAAKwD,SAAS,CACZlN,gBAA4B7D,IAAhB+L,EAA4BY,EAA+BY,KAAK1M,MAAOkL,EAAaqF,EAAOvN,EAAY0J,KAAKC,eAAgBoE,GAAyB/N,EACjKI,eAAwBjE,IAAbiM,EAAyBW,EAA4BW,KAAK1M,MAAOoL,EAAUmF,EAAOnN,EAAWsJ,KAAKC,eAAgBmE,GAA2B1N,GAE5J,EAEA4M,EAAOgB,kBAAoB,WACzB,IAAIC,EAAevE,KAAK1M,MACpBkN,EAAoB+D,EAAa/D,kBACjCC,EAAmB8D,EAAa9D,iBAEpC,GAAsB,MAAlBT,KAAKG,UAAmB,CAC1B,IAAI8C,EAAWjD,KAAKG,UAEa,iBAAtBK,IACTyC,EAAS3M,WAAakK,GAGQ,iBAArBC,IACTwC,EAASvM,UAAY+J,EAEzB,CAEAT,KAAKwE,qBACP,EAEAlB,EAAOmB,mBAAqB,WAC1B,IAAIrG,EAAY4B,KAAK1M,MAAM8K,UACvBsG,EAAe1E,KAAKI,MACpB9J,EAAaoO,EAAapO,WAC1BI,EAAYgO,EAAahO,UAG7B,GAF+BgO,EAAahE,0BAEM,MAAlBV,KAAKG,UAAmB,CAItD,IAAI8C,EAAWjD,KAAKG,UAEpB,GAAkB,QAAd/B,EACF,OAAQH,KACN,IAAK,WACHgF,EAAS3M,YAAcA,EACvB,MAEF,IAAK,qBACH2M,EAAS3M,WAAaA,EACtB,MAEF,QACE,IAAIjB,EAAc4N,EAAS5N,YACvBQ,EAAcoN,EAASpN,YAC3BoN,EAAS3M,WAAaT,EAAcR,EAAciB,OAItD2M,EAAS3M,WAAaX,KAAKC,IAAI,EAAGU,GAGpC2M,EAASvM,UAAYf,KAAKC,IAAI,EAAGc,EACnC,CAEAsJ,KAAKwE,qBACP,EAEAlB,EAAOqB,qBAAuB,WACY,OAApC3E,KAAKE,4BACP9C,EAAc4C,KAAKE,2BAEvB,EAEAoD,EAAOsB,OAAS,WACd,IAAIC,EAAe7E,KAAK1M,MACpBjB,EAAWwS,EAAaxS,SACxByS,EAAYD,EAAaC,UACzBf,EAAcc,EAAad,YAC3B3F,EAAYyG,EAAazG,UACzB9I,EAASuP,EAAavP,OACtByP,EAAWF,EAAaE,SACxBC,EAAmBH,EAAaG,iBAChCC,EAAeJ,EAAaI,aAC5BC,EAAWL,EAAaK,SACxBC,EAAuBN,EAAaO,QACpCA,OAAmC,IAAzBD,EAAkC5G,EAAiB4G,EAC7DE,EAAmBR,EAAaQ,iBAChCC,EAAeT,EAAaS,aAC5BtB,EAAWa,EAAab,SACxB3P,EAAQwQ,EAAaxQ,MACrBkR,EAAiBV,EAAaU,eAC9BrQ,EAAQ2P,EAAa3P,MACrBoL,EAAcN,KAAKI,MAAME,YAEzBkF,EAAwBxF,KAAKyF,8BAC7BC,EAAmBF,EAAsB,GACzCG,EAAkBH,EAAsB,GAExCI,EAAwB5F,KAAK6F,4BAC7BC,EAAgBF,EAAsB,GACtCG,EAAeH,EAAsB,GAErCI,EAAQ,GAEZ,GAAIjC,EAAc,GAAKC,EACrB,IAAK,IAAIiC,EAAYH,EAAeG,GAAaF,EAAcE,IAC7D,IAAK,IAAIC,EAAeR,EAAkBQ,GAAgBP,EAAiBO,IACzEF,EAAMzS,MAAK,IAAAqF,eAAcvG,EAAU,CACjCmM,YAAa0H,EACbzH,KAAMyG,EACN5E,YAAaiF,EAAiBjF,OAAc7N,EAC5CqP,IAAKsD,EAAQ,CACX5G,YAAa0H,EACbzH,KAAMyG,EACNxG,SAAUuH,IAEZvH,SAAUuH,EACV5R,MAAO2L,KAAKwB,cAAcyE,EAAWC,MAQ7C,IAAI/B,EAAuBjF,EAAwBc,KAAK1M,MAAO0M,KAAKC,gBAChEkG,EAAsBhH,EAAuBa,KAAK1M,MAAO0M,KAAKC,gBAClE,OAAO,IAAArH,eAAcyM,GAAoBC,GAAgB,MAAO,CAC9DR,UAAWA,EACXvD,SAAUvB,KAAKqC,UACfW,IAAKhD,KAAK+C,gBACV1O,OAAO,OAAS,CACd4E,SAAU,WACV3D,OAAQA,EACRJ,MAAOA,EACPgE,SAAU,OACVkN,wBAAyB,QACzBC,WAAY,YACZjI,UAAWA,GACV/J,KACF,IAAAuE,eAAcoM,GAAoBC,GAAgB,MAAO,CAC1D5S,SAAU2T,EACVhD,IAAK+B,EACL1Q,MAAO,CACLiB,OAAQ6O,EACRmC,cAAehG,EAAc,YAAS7N,EACtCyC,MAAOiR,KAGb,EAEA7C,EAAOkB,oBAAsB,WAC3B,IAAI+B,EAAevG,KAAK1M,MACpByQ,EAAcwC,EAAaxC,YAC3B1C,EAAkBkF,EAAalF,gBAC/BE,EAAWgF,EAAahF,SACxByC,EAAWuC,EAAavC,SAE5B,GAA+B,mBAApB3C,GACL0C,EAAc,GAAKC,EAAW,EAAG,CACnC,IAAIwC,EAAyBxG,KAAKyF,8BAC9BgB,EAA4BD,EAAuB,GACnDE,EAA2BF,EAAuB,GAClDG,EAA2BH,EAAuB,GAClDI,EAA0BJ,EAAuB,GAEjDK,EAAyB7G,KAAK6F,4BAC9BiB,EAAyBD,EAAuB,GAChDE,EAAwBF,EAAuB,GAC/CG,EAAwBH,EAAuB,GAC/CI,EAAuBJ,EAAuB,GAElD7G,KAAKY,qBAAqB6F,EAA2BC,EAA0BI,EAAwBC,EAAuBJ,EAA0BC,EAAyBI,EAAuBC,EAC1M,CAGF,GAAwB,mBAAb1F,EAAyB,CAClC,IAAI2F,EAAelH,KAAKI,MACpB+G,EAA6BD,EAAa3G,0BAC1C6G,EAAcF,EAAa5Q,WAC3B+Q,EAAaH,EAAaxQ,UAC1B4Q,EAA4BJ,EAAaxG,yBACzC6G,EAA2BL,EAAavG,wBAE5CX,KAAKsB,cAAc8F,EAAaC,EAAYF,EAA4BI,EAA0BD,EACpG,CACF,EAMAhE,EAAOmC,4BAA8B,WACnC,IAAI+B,EAAexH,KAAK1M,MACpByQ,EAAcyD,EAAazD,YAC3B0D,EAAsBD,EAAaC,oBACnCC,EAAuBF,EAAaE,qBACpCC,EAAgBH,EAAaG,cAC7B3D,EAAWwD,EAAaxD,SACxB4D,EAAe5H,KAAKI,MACpBG,EAA4BqH,EAAarH,0BACzCD,EAAcsH,EAAatH,YAC3BhK,EAAasR,EAAatR,WAC1BuR,EAAwBJ,GAAuBC,GAAwBC,GAAiB,EAE5F,GAAoB,IAAhB5D,GAAkC,IAAbC,EACvB,MAAO,CAAC,EAAG,EAAG,EAAG,GAGnB,IAAI8D,EAAa/I,EAA6BiB,KAAK1M,MAAOgD,EAAY0J,KAAKC,gBACvE8H,EAAY/I,EAAgCgB,KAAK1M,MAAOwU,EAAYxR,EAAY0J,KAAKC,gBAGrF+H,EAAoB1H,GAA6C,aAA9BC,EAAgF,EAArC5K,KAAKC,IAAI,EAAGiS,GAC1FI,EAAmB3H,GAA6C,YAA9BC,EAA+E,EAArC5K,KAAKC,IAAI,EAAGiS,GAC5F,MAAO,CAAClS,KAAKC,IAAI,EAAGkS,EAAaE,GAAmBrS,KAAKC,IAAI,EAAGD,KAAKiN,IAAImB,EAAc,EAAGgE,EAAYE,IAAmBH,EAAYC,EACvI,EAEAzE,EAAOuC,0BAA4B,WACjC,IAAIqC,EAAelI,KAAK1M,MACpByQ,EAAcmE,EAAanE,YAC3B4D,EAAgBO,EAAaP,cAC7BQ,EAAmBD,EAAaC,iBAChCC,EAAoBF,EAAaE,kBACjCpE,EAAWkE,EAAalE,SACxBqE,EAAerI,KAAKI,MACpBE,EAAc+H,EAAa/H,YAC3BK,EAA0B0H,EAAa1H,wBACvCjK,EAAY2R,EAAa3R,UACzBmR,EAAwBM,GAAoBC,GAAqBT,GAAiB,EAEtF,GAAoB,IAAhB5D,GAAkC,IAAbC,EACvB,MAAO,CAAC,EAAG,EAAG,EAAG,GAGnB,IAAI8D,EAAatI,EAA0BQ,KAAK1M,MAAOoD,EAAWsJ,KAAKC,gBACnE8H,EAAYtI,EAA6BO,KAAK1M,MAAOwU,EAAYpR,EAAWsJ,KAAKC,gBAGjF+H,EAAoB1H,GAA2C,aAA5BK,EAA8E,EAArChL,KAAKC,IAAI,EAAGiS,GACxFI,EAAmB3H,GAA2C,YAA5BK,EAA6E,EAArChL,KAAKC,IAAI,EAAGiS,GAC1F,MAAO,CAAClS,KAAKC,IAAI,EAAGkS,EAAaE,GAAmBrS,KAAKC,IAAI,EAAGD,KAAKiN,IAAIoB,EAAW,EAAG+D,EAAYE,IAAmBH,EAAYC,EACpI,EAEOjI,CACT,CAle6B,CAke3B,EAAAwI,gBAAuBC,aAAe,CACtCnK,UAAW,MACX8G,cAAUzS,EACV8S,gBAAgB,GACf1G,CACL,CAEA,IAAIwE,EAAsB,SAA6BmF,EAAOC,GAC7CD,EAAMnW,SACLmW,EAAMpK,UACToK,EAAMlT,OACAkT,EAAMvD,aACNuD,EAAMlD,aACEkD,EAAMd,qBACbc,EAAMb,cACFa,EAAMJ,kBAClBI,EAAMtT,MACHuT,EAAMpI,QA8CvB,EAIInB,EAA0B,SAAiC7D,EAAMuD,GACnE,IAAIoF,EAAW3I,EAAK2I,SAChB0E,EAAiB9J,EAAM8J,eACvBC,EAAqB/J,EAAM+J,mBAC3BC,EAAuBhK,EAAMgK,qBAC7BC,EAA0B,EAO9B,GAJID,GAAwB5E,IAC1B4E,EAAuB5E,EAAW,GAGhC4E,GAAwB,EAAG,CAC7B,IAAIE,EAAeJ,EAAeE,GAClCC,EAA0BC,EAAaC,OAASD,EAAalL,IAC/D,CAIA,OAAOiL,GAFkB7E,EAAW4E,EAAuB,GACLD,CAExD,EAEIxJ,EAAyB,SAAgCsE,EAAOE,GAClE,IAAII,EAAcN,EAAMM,YACpBiF,EAAoBrF,EAAMqF,kBAC1BC,EAAuBtF,EAAMsF,qBAC7BC,EAA0BvF,EAAMuF,wBAChCL,EAA0B,EAO9B,GAJIK,GAA2BnF,IAC7BmF,EAA0BnF,EAAc,GAGtCmF,GAA2B,EAAG,CAChC,IAAIJ,EAAeE,EAAkBE,GACrCL,EAA0BC,EAAaC,OAASD,EAAalL,IAC/D,CAIA,OAAOiL,GAFkB9E,EAAcmF,EAA0B,GACXD,CAExD,EAEIE,EAAkB,SAAyBC,EAAU9V,EAAO+V,EAAOC,GACrE,IAAIC,EAAiBC,EAAUC,EAY/B,GAViB,WAAbL,GACFG,EAAkBD,EAAcN,kBAChCQ,EAAWlW,EAAMoO,YACjB+H,EAAoBH,EAAcJ,0BAElCK,EAAkBD,EAAcZ,eAChCc,EAAWlW,EAAMqO,UACjB8H,EAAoBH,EAAcV,sBAGhCS,EAAQI,EAAmB,CAC7B,IAAIV,EAAS,EAEb,GAAIU,GAAqB,EAAG,CAC1B,IAAIX,EAAeS,EAAgBE,GACnCV,EAASD,EAAaC,OAASD,EAAalL,IAC9C,CAEA,IAAK,IAAI8L,EAAID,EAAoB,EAAGC,GAAKL,EAAOK,IAAK,CACnD,IAAI9L,EAAO4L,EAASE,GACpBH,EAAgBG,GAAK,CACnBX,OAAQA,EACRnL,KAAMA,GAERmL,GAAUnL,CACZ,CAEiB,WAAbwL,EACFE,EAAcJ,wBAA0BG,EAExCC,EAAcV,qBAAuBS,CAEzC,CAEA,OAAOE,EAAgBF,EACzB,EAEIM,EAAkB,SAAyBP,EAAU9V,EAAOgW,EAAeP,GAC7E,IAAIQ,EAAiBE,EAYrB,MAViB,WAAbL,GACFG,EAAkBD,EAAcN,kBAChCS,EAAoBH,EAAcJ,0BAElCK,EAAkBD,EAAcZ,eAChCe,EAAoBH,EAAcV,uBAGPa,EAAoB,EAAIF,EAAgBE,GAAmBV,OAAS,IAEnEA,EAErBa,EAA4BR,EAAU9V,EAAOgW,EAAeG,EAAmB,EAAGV,GAKlFc,EAAiCT,EAAU9V,EAAOgW,EAAe3T,KAAKC,IAAI,EAAG6T,GAAoBV,EAE5G,EAEIa,EAA8B,SAAqCR,EAAU9V,EAAOgW,EAAeQ,EAAMC,EAAKhB,GAChH,KAAOgB,GAAOD,GAAM,CAClB,IAAIE,EAASD,EAAMpU,KAAKsU,OAAOH,EAAOC,GAAO,GACzCG,EAAgBf,EAAgBC,EAAU9V,EAAO0W,EAAQV,GAAeP,OAE5E,GAAImB,IAAkBnB,EACpB,OAAOiB,EACEE,EAAgBnB,EACzBgB,EAAMC,EAAS,EACNE,EAAgBnB,IACzBe,EAAOE,EAAS,EAEpB,CAEA,OAAID,EAAM,EACDA,EAAM,EAEN,CAEX,EAEIF,EAAmC,SAA0CT,EAAU9V,EAAOgW,EAAeD,EAAON,GAItH,IAHA,IAAIoB,EAAyB,WAAbf,EAAwB9V,EAAMyQ,YAAczQ,EAAM0Q,SAC9DoG,EAAW,EAERf,EAAQc,GAAahB,EAAgBC,EAAU9V,EAAO+V,EAAOC,GAAeP,OAASA,GAC1FM,GAASe,EACTA,GAAY,EAGd,OAAOR,EAA4BR,EAAU9V,EAAOgW,EAAe3T,KAAKiN,IAAIyG,EAAOc,EAAY,GAAIxU,KAAKsU,MAAMZ,EAAQ,GAAIN,EAC5H,EAEIsB,EAAgC,SAAuCjB,EAAU9V,EAAO+V,EAAOxF,EAAOyG,EAAchB,EAAepF,GACrI,IAAItG,EAAoB,WAAbwL,EAAwB9V,EAAM4B,MAAQ5B,EAAMgC,OACnDwT,EAAeK,EAAgBC,EAAU9V,EAAO+V,EAAOC,GAGvDiB,EAAkC,WAAbnB,EAAwBjK,EAAuB7L,EAAOgW,GAAiBpK,EAAwB5L,EAAOgW,GAC3HkB,EAAY7U,KAAKC,IAAI,EAAGD,KAAKiN,IAAI2H,EAAqB3M,EAAMkL,EAAaC,SACzE0B,EAAY9U,KAAKC,IAAI,EAAGkT,EAAaC,OAASnL,EAAOsG,EAAgB4E,EAAalL,MAUtF,OARc,UAAViG,IAEAA,EADEyG,GAAgBG,EAAY7M,GAAQ0M,GAAgBE,EAAY5M,EAC1D,OAEA,UAIJiG,GACN,IAAK,QACH,OAAO2G,EAET,IAAK,MACH,OAAOC,EAET,IAAK,SACH,OAAO9U,KAAK+U,MAAMD,GAAaD,EAAYC,GAAa,GAG1D,QACE,OAAIH,GAAgBG,GAAaH,GAAgBE,EACxCF,EACEG,EAAYD,GAIZF,EAAeG,EADjBA,EAIAD,EAIf,EAEIG,EAAgChM,EAAoB,CACtDG,gBAAiB,SAAyBxL,EAAO+V,EAAOC,GACtD,OAAOH,EAAgB,SAAU7V,EAAO+V,EAAOC,GAAeP,MAChE,EACAhK,6BAA8B,SAAsCzL,EAAOgD,EAAYgT,GACrF,OAAOK,EAAgB,SAAUrW,EAAOgW,EAAehT,EACzD,EACA0I,gCAAiC,SAAyC1L,EAAOwU,EAAYxR,EAAYgT,GAQvG,IAPA,IAAIvF,EAAczQ,EAAMyQ,YACpB7O,EAAQ5B,EAAM4B,MACd4T,EAAeK,EAAgB,SAAU7V,EAAOwU,EAAYwB,GAC5DkB,EAAYlU,EAAapB,EACzB6T,EAASD,EAAaC,OAASD,EAAalL,KAC5CmK,EAAYD,EAETC,EAAYhE,EAAc,GAAKgF,EAASyB,GAC7CzC,IACAgB,GAAUI,EAAgB,SAAU7V,EAAOyU,EAAWuB,GAAe1L,KAGvE,OAAOmK,CACT,EACA9I,eAAgB,SAAwB3L,EAAO+V,EAAOC,GACpD,OAAOA,EAAcN,kBAAkBK,GAAOzL,IAChD,EACAsB,wBAAyBA,EACzBC,uBAAwBA,EACxBC,+BAAgC,SAAwC9L,EAAO+V,EAAOxF,EAAOyG,EAAchB,EAAepF,GACxH,OAAOmG,EAA8B,SAAU/W,EAAO+V,EAAOxF,EAAOyG,EAAchB,EAAepF,EACnG,EACA7E,4BAA6B,SAAqC/L,EAAO+V,EAAOxF,EAAOyG,EAAchB,EAAepF,GAClH,OAAOmG,EAA8B,MAAO/W,EAAO+V,EAAOxF,EAAOyG,EAAchB,EAAepF,EAChG,EACA3E,aAAc,SAAsBjM,EAAO+V,EAAOC,GAChD,OAAOH,EAAgB,MAAO7V,EAAO+V,EAAOC,GAAeP,MAC7D,EACAzJ,aAAc,SAAsBhM,EAAO+V,EAAOC,GAChD,OAAOA,EAAcZ,eAAeW,GAAOzL,IAC7C,EACA4B,0BAA2B,SAAmClM,EAAOoD,EAAW4S,GAC9E,OAAOK,EAAgB,MAAOrW,EAAOgW,EAAe5S,EACtD,EACA+I,6BAA8B,SAAsCnM,EAAOwU,EAAYpR,EAAW4S,GAQhG,IAPA,IAAItF,EAAW1Q,EAAM0Q,SACjB1O,EAAShC,EAAMgC,OACfwT,EAAeK,EAAgB,MAAO7V,EAAOwU,EAAYwB,GACzDkB,EAAY9T,EAAYpB,EACxByT,EAASD,EAAaC,OAASD,EAAalL,KAC5CmK,EAAYD,EAETC,EAAY/D,EAAW,GAAK+E,EAASyB,GAC1CzC,IACAgB,GAAUI,EAAgB,MAAO7V,EAAOyU,EAAWuB,GAAe1L,KAGpE,OAAOmK,CACT,EACArI,kBAAmB,SAA2BpM,EAAO+M,GACnD,IAAImI,EAAQlV,EAGRgW,EAAgB,CAClBN,kBAAmB,CAAC,EACpBC,qBAJyBT,EAAMS,sBAtPH,GA2P5BN,mBAJuBH,EAAMG,oBAvPD,GA4P5BO,yBAA0B,EAC1BN,sBAAuB,EACvBF,eAAgB,CAAC,GAkDnB,OA/CArI,EAASuK,sBAAwB,SAAUpM,EAAaqM,QAC5B,IAAtBA,IACFA,GAAoB,GAGtBxK,EAASyK,kBAAkB,CACzBtM,YAAaA,EACbqM,kBAAmBA,GAEvB,EAEAxK,EAAS0K,mBAAqB,SAAUrM,EAAUmM,QACtB,IAAtBA,IACFA,GAAoB,GAGtBxK,EAASyK,kBAAkB,CACzBpM,SAAUA,EACVmM,kBAAmBA,GAEvB,EAEAxK,EAASyK,kBAAoB,SAAUrC,GACrC,IAAIjK,EAAciK,EAAMjK,YACpBE,EAAW+J,EAAM/J,SACjBsM,EAAwBvC,EAAMoC,kBAC9BA,OAA8C,IAA1BG,GAA0CA,EAEvC,iBAAhBxM,IACT8K,EAAcJ,wBAA0BvT,KAAKiN,IAAI0G,EAAcJ,wBAAyB1K,EAAc,IAGhF,iBAAbE,IACT4K,EAAcV,qBAAuBjT,KAAKiN,IAAI0G,EAAcV,qBAAsBlK,EAAW,IAO/F2B,EAASwB,oBAAoB,GAEzBgJ,GACFxK,EAAS4K,aAEb,EAEO3B,CACT,EACA3J,uCAAuC,EACvCC,cAAe,SAAuBsL,GAClBA,EAAMxJ,YACRwJ,EAAMvJ,SASxB,IAKEwJ,EAAmB,SAAwB9B,EAAO5K,GACpD,OAAO4K,CACT,EAcA,SAAS+B,EAAoB/P,GAC3B,IAAIwD,EAEAwM,EAAgBhQ,EAAKgQ,cACrBC,EAAwBjQ,EAAKiQ,sBAC7BC,EAAclQ,EAAKkQ,YACnBlB,EAAgChP,EAAKgP,8BACrCmB,EAAyBnQ,EAAKmQ,uBAC9BC,EAA4BpQ,EAAKoQ,0BACjC/L,EAAoBrE,EAAKqE,kBACzBC,EAAwCtE,EAAKsE,sCAC7CC,EAAgBvE,EAAKuE,cACzB,OAAOf,EAAsB,SAAUgB,GAMrC,SAAS6L,EAAKpY,GACZ,IAAIyM,EA0KJ,OAxKAA,EAAQF,EAAelF,KAAKqF,KAAM1M,IAAU0M,MACtCC,eAAiBP,EAAkBK,EAAMzM,OAAO,OAAuByM,IAC7EA,EAAMI,eAAY,EAClBJ,EAAMG,2BAA6B,KACnCH,EAAMK,MAAQ,CACZC,UAAU,OAAuBN,GACjCO,aAAa,EACbqL,gBAAiB,UACjBrB,aAAyD,iBAApCvK,EAAMzM,MAAMsY,oBAAmC7L,EAAMzM,MAAMsY,oBAAsB,EACtGlL,0BAA0B,GAE5BX,EAAMa,0BAAuB,EAC7Bb,EAAMa,sBAAuB,QAAW,SAAUiL,EAAoBC,EAAmBC,EAAmBC,GAC1G,OAAOjM,EAAMzM,MAAM+N,gBAAgB,CACjCwK,mBAAoBA,EACpBC,kBAAmBA,EACnBC,kBAAmBA,EACnBC,iBAAkBA,GAEtB,IACAjM,EAAMuB,mBAAgB,EACtBvB,EAAMuB,eAAgB,QAAW,SAAUqK,EAAiBrB,EAAc5J,GACxE,OAAOX,EAAMzM,MAAMiO,SAAS,CAC1BoK,gBAAiBA,EACjBrB,aAAcA,EACd5J,yBAA0BA,GAE9B,IACAX,EAAMyB,mBAAgB,EAEtBzB,EAAMyB,cAAgB,SAAU6H,GAC9B,IAOIhV,EAPAoN,EAAc1B,EAAMzM,MACpB8K,EAAYqD,EAAYrD,UACxBoL,EAAW/H,EAAY+H,SACvByC,EAASxK,EAAYwK,OAErBrK,EAAiB7B,EAAM8B,mBAAmBlC,GAAyC6J,EAAU7J,GAAyCsM,EAAQtM,GAAyCvB,GAI3L,GAAIwD,EAAe1K,eAAemS,GAChChV,EAAQuN,EAAeyH,OAClB,CACL,IAAItH,EAAUsJ,EAActL,EAAMzM,MAAO+V,EAAOtJ,EAAME,gBAElDrC,EAAO2N,EAAYxL,EAAMzM,MAAO+V,EAAOtJ,EAAME,gBAE7CiM,EAA6B,eAAd9N,GAAyC,eAAX6N,EAC7CjK,EAAsB,QAAd5D,EACR+N,EAAmBD,EAAenK,EAAU,EAChDH,EAAeyH,GAAShV,EAAQ,CAC9B4E,SAAU,WACV7C,KAAM4L,OAAQvP,EAAY0Z,EAC1BlK,MAAOD,EAAQmK,OAAmB1Z,EAClC+D,IAAM0V,EAAyB,EAAVnK,EACrBzM,OAAS4W,EAAsB,OAAPtO,EACxB1I,MAAOgX,EAAetO,EAAO,OAEjC,CAEA,OAAOvJ,CACT,EAEA0L,EAAM8B,wBAAqB,EAC3B9B,EAAM8B,oBAAqB,QAAW,SAAUK,EAAGC,EAAIC,GACrD,MAAO,CAAC,CACV,IAEArC,EAAMqM,oBAAsB,SAAU9J,GACpC,IAAIC,EAAuBD,EAAME,cAC7BnN,EAAckN,EAAqBlN,YACnCiB,EAAaiM,EAAqBjM,WAClCT,EAAc0M,EAAqB1M,YAEvCkK,EAAM0C,UAAS,SAAUC,GACvB,GAAIA,EAAU4H,eAAiBhU,EAI7B,OAAO,KAGT,IAAI8H,EAAY2B,EAAMzM,MAAM8K,UACxBkM,EAAehU,EAEnB,GAAkB,QAAd8H,EAKF,OAAQH,KACN,IAAK,WACHqM,GAAgBhU,EAChB,MAEF,IAAK,sBACHgU,EAAezU,EAAcR,EAAciB,EAOjD,OADAgU,EAAe3U,KAAKC,IAAI,EAAGD,KAAKiN,IAAI0H,EAAczU,EAAcR,IACzD,CACLiL,aAAa,EACbqL,gBAAiBjJ,EAAU4H,aAAeA,EAAe,UAAY,WACrEA,aAAcA,EACd5J,0BAA0B,EAE9B,GAAGX,EAAM+C,2BACX,EAEA/C,EAAMsM,kBAAoB,SAAU/J,GAClC,IAAIgK,EAAwBhK,EAAME,cAC9B/M,EAAe6W,EAAsB7W,aACrCM,EAAeuW,EAAsBvW,aACrCW,EAAY4V,EAAsB5V,UAEtCqJ,EAAM0C,UAAS,SAAUC,GACvB,GAAIA,EAAU4H,eAAiB5T,EAI7B,OAAO,KAIT,IAAI4T,EAAe3U,KAAKC,IAAI,EAAGD,KAAKiN,IAAIlM,EAAWX,EAAeN,IAClE,MAAO,CACL6K,aAAa,EACbqL,gBAAiBjJ,EAAU4H,aAAeA,EAAe,UAAY,WACrEA,aAAcA,EACd5J,0BAA0B,EAE9B,GAAGX,EAAM+C,2BACX,EAEA/C,EAAMgD,gBAAkB,SAAUC,GAChC,IAAIC,EAAWlD,EAAMzM,MAAM2P,SAC3BlD,EAAMI,UAAY6C,EAEM,mBAAbC,EACTA,EAASD,GACY,MAAZC,GAAwC,iBAAbA,GAAyBA,EAAS/L,eAAe,aACrF+L,EAAS5I,QAAU2I,EAEvB,EAEAjD,EAAM+C,2BAA6B,WACQ,OAArC/C,EAAMG,4BACR9C,EAAc2C,EAAMG,4BAGtBH,EAAMG,2BAA6B3C,EAAewC,EAAMmD,kBAhMzB,IAiMjC,EAEAnD,EAAMmD,kBAAoB,WACxBnD,EAAMG,2BAA6B,KAEnCH,EAAM0C,SAAS,CACbnC,aAAa,IACZ,WAGDP,EAAM8B,oBAAoB,EAAG,KAC/B,GACF,EAEO9B,CACT,EAjLA,OAAe2L,EAAM7L,GAmLrB6L,EAAKvI,yBAA2B,SAAkCC,EAAWV,GAG3E,OAFA6J,EAAsBnJ,EAAWV,GACjC9C,EAAcwD,GACP,IACT,EAEA,IAAIE,EAASoI,EAAKnI,UAwOlB,OAtOAD,EAAOE,SAAW,SAAkB8G,GAClCA,EAAe3U,KAAKC,IAAI,EAAG0U,GAC3BtK,KAAKyC,UAAS,SAAUC,GACtB,OAAIA,EAAU4H,eAAiBA,EACtB,KAGF,CACLqB,gBAAiBjJ,EAAU4H,aAAeA,EAAe,UAAY,WACrEA,aAAcA,EACd5J,0BAA0B,EAE9B,GAAGV,KAAK8C,2BACV,EAEAQ,EAAOI,aAAe,SAAsB2F,EAAOxF,QACnC,IAAVA,IACFA,EAAQ,QAGV,IAAIC,EAAe9D,KAAK1M,MACpB6W,EAAYrG,EAAaqG,UACzB8B,EAASnI,EAAamI,OACtB3B,EAAetK,KAAKI,MAAMkK,aAC9BjB,EAAQ1T,KAAKC,IAAI,EAAGD,KAAKiN,IAAIyG,EAAOc,EAAY,IAIhD,IAAIjG,EAAgB,EAEpB,GAAIlE,KAAKG,UAAW,CAClB,IAAI8C,EAAWjD,KAAKG,UAGlB+D,EADa,aAAX+H,EACchJ,EAASpN,YAAcoN,EAAS5N,YAAcwI,IAAqB,EAEnEoF,EAASlN,aAAekN,EAASxN,aAAeoI,IAAqB,CAEzF,CAEAmC,KAAKwD,SAAS6G,EAA8BrK,KAAK1M,MAAO+V,EAAOxF,EAAOyG,EAActK,KAAKC,eAAgBiE,GAC3G,EAEAZ,EAAOgB,kBAAoB,WACzB,IAAIC,EAAevE,KAAK1M,MACpB8K,EAAYmG,EAAanG,UACzBwN,EAAsBrH,EAAaqH,oBACnCK,EAAS1H,EAAa0H,OAE1B,GAAmC,iBAAxBL,GAAsD,MAAlB5L,KAAKG,UAAmB,CACrE,IAAI8C,EAAWjD,KAAKG,UAEF,eAAd/B,GAAyC,eAAX6N,EAChChJ,EAAS3M,WAAasV,EAEtB3I,EAASvM,UAAYkV,CAEzB,CAEA5L,KAAKwE,qBACP,EAEAlB,EAAOmB,mBAAqB,WAC1B,IAAII,EAAe7E,KAAK1M,MACpB8K,EAAYyG,EAAazG,UACzB6N,EAASpH,EAAaoH,OACtBhI,EAAcjE,KAAKI,MACnBkK,EAAerG,EAAYqG,aAG/B,GAF+BrG,EAAYvD,0BAEO,MAAlBV,KAAKG,UAAmB,CACtD,IAAI8C,EAAWjD,KAAKG,UAEpB,GAAkB,eAAd/B,GAAyC,eAAX6N,EAChC,GAAkB,QAAd7N,EAIF,OAAQH,KACN,IAAK,WACHgF,EAAS3M,YAAcgU,EACvB,MAEF,IAAK,qBACHrH,EAAS3M,WAAagU,EACtB,MAEF,QACE,IAAIjV,EAAc4N,EAAS5N,YACvBQ,EAAcoN,EAASpN,YAC3BoN,EAAS3M,WAAaT,EAAcR,EAAciV,OAItDrH,EAAS3M,WAAagU,OAGxBrH,EAASvM,UAAY4T,CAEzB,CAEAtK,KAAKwE,qBACP,EAEAlB,EAAOqB,qBAAuB,WACY,OAApC3E,KAAKE,4BACP9C,EAAc4C,KAAKE,2BAEvB,EAEAoD,EAAOsB,OAAS,WACd,IAAI2B,EAAevG,KAAK1M,MACpBjB,EAAWkU,EAAalU,SACxByS,EAAYyB,EAAazB,UACzB1G,EAAYmI,EAAanI,UACzB9I,EAASiR,EAAajR,OACtByP,EAAWwB,EAAaxB,SACxBC,EAAmBuB,EAAavB,iBAChCC,EAAesB,EAAatB,aAC5BkF,EAAY5D,EAAa4D,UACzBjF,EAAWqB,EAAarB,SACxBsH,EAAuBjG,EAAanB,QACpCA,OAAmC,IAAzBoH,EAAkCrB,EAAmBqB,EAC/DP,EAAS1F,EAAa0F,OACtB5G,EAAmBkB,EAAalB,iBAChCC,EAAeiB,EAAajB,aAC5BjR,EAAQkS,EAAalS,MACrBkR,EAAiBgB,EAAahB,eAC9BrQ,EAAQqR,EAAarR,MACrBoL,EAAcN,KAAKI,MAAME,YAEzB4L,EAA6B,eAAd9N,GAAyC,eAAX6N,EAC7C1K,EAAW2K,EAAelM,KAAKoM,oBAAsBpM,KAAKqM,kBAE1DI,EAAwBzM,KAAK0M,oBAC7B5E,EAAa2E,EAAsB,GACnC1E,EAAY0E,EAAsB,GAElCzG,EAAQ,GAEZ,GAAImE,EAAY,EACd,IAAK,IAAIwC,EAAS7E,EAAY6E,GAAU5E,EAAW4E,IACjD3G,EAAMzS,MAAK,IAAAqF,eAAcvG,EAAU,CACjCoM,KAAMyG,EACNpD,IAAKsD,EAAQuH,EAAQzH,GACrBmE,MAAOsD,EACPrM,YAAaiF,EAAiBjF,OAAc7N,EAC5C4B,MAAO2L,KAAKwB,cAAcmL,MAOhC,IAAIpC,EAAqBe,EAAsBtL,KAAK1M,MAAO0M,KAAKC,gBAChE,OAAO,IAAArH,eAAcyM,GAAoBC,GAAgB,MAAO,CAC9DR,UAAWA,EACXvD,SAAUA,EACVyB,IAAKhD,KAAK+C,gBACV1O,OAAO,OAAS,CACd4E,SAAU,WACV3D,OAAQA,EACRJ,MAAOA,EACPgE,SAAU,OACVkN,wBAAyB,QACzBC,WAAY,YACZjI,UAAWA,GACV/J,KACF,IAAAuE,eAAcoM,GAAoBC,GAAgB,MAAO,CAC1D5S,SAAU2T,EACVhD,IAAK+B,EACL1Q,MAAO,CACLiB,OAAQ4W,EAAe,OAAS3B,EAChCjE,cAAehG,EAAc,YAAS7N,EACtCyC,MAAOgX,EAAe3B,EAAqB,UAGjD,EAEAjH,EAAOkB,oBAAsB,WAC3B,GAA0C,mBAA/BxE,KAAK1M,MAAM+N,iBACJrB,KAAK1M,MAAM6W,UAEX,EAAG,CACjB,IAAIyC,EAAyB5M,KAAK0M,oBAC9BG,EAAsBD,EAAuB,GAC7CE,EAAqBF,EAAuB,GAC5CG,EAAqBH,EAAuB,GAC5CI,EAAoBJ,EAAuB,GAE/C5M,KAAKY,qBAAqBiM,EAAqBC,EAAoBC,EAAoBC,EACzF,CAGF,GAAmC,mBAAxBhN,KAAK1M,MAAMiO,SAAyB,CAC7C,IAAImD,EAAe1E,KAAKI,MACpB6M,EAAmBvI,EAAaiH,gBAChCuB,EAAgBxI,EAAa4F,aAC7BhD,EAA4B5C,EAAahE,yBAE7CV,KAAKsB,cAAc2L,EAAkBC,EAAe5F,EACtD,CACF,EAMAhE,EAAOoJ,kBAAoB,WACzB,IAAIlF,EAAexH,KAAK1M,MACpB6W,EAAY3C,EAAa2C,UACzBxC,EAAgBH,EAAaG,cAC7BT,EAAelH,KAAKI,MACpBE,EAAc4G,EAAa5G,YAC3BqL,EAAkBzE,EAAayE,gBAC/BrB,EAAepD,EAAaoD,aAEhC,GAAkB,IAAdH,EACF,MAAO,CAAC,EAAG,EAAG,EAAG,GAGnB,IAAIrC,EAAa0D,EAAuBxL,KAAK1M,MAAOgX,EAActK,KAAKC,gBACnE8H,EAAY0D,EAA0BzL,KAAK1M,MAAOwU,EAAYwC,EAActK,KAAKC,gBAGjF+H,EAAoB1H,GAAmC,aAApBqL,EAA8D,EAA7BhW,KAAKC,IAAI,EAAG+R,GAChFM,EAAmB3H,GAAmC,YAApBqL,EAA6D,EAA7BhW,KAAKC,IAAI,EAAG+R,GAClF,MAAO,CAAChS,KAAKC,IAAI,EAAGkS,EAAaE,GAAmBrS,KAAKC,IAAI,EAAGD,KAAKiN,IAAIuH,EAAY,EAAGpC,EAAYE,IAAmBH,EAAYC,EACrI,EAEO2D,CACT,CAna6B,CAma3B,EAAApD,eAAgBzJ,EAAO0J,aAAe,CACtCnK,UAAW,MACX8G,cAAUzS,EACVwZ,OAAQ,WACRtE,cAAe,EACfpC,gBAAgB,GACf1G,CACL,CAMA,IAAI0N,EAAwB,SAA6B3N,EAAO6E,GAC/C7E,EAAMvM,SACLuM,EAAMR,UACTQ,EAAMtJ,OACNsJ,EAAMqN,OACArN,EAAMqG,aACNrG,EAAM0G,aACb1G,EAAM1J,MACHuO,EAAMpD,QAoDvB,EA+YI8M,EAA6B/B,EAAoB,CACnDC,cAAe,SAAuBhQ,EAAMgO,GAE1C,OAAOA,EADQhO,EAAKmO,QAEtB,EACA+B,YAAa,SAAqB3M,EAAOyK,GAEvC,OADezK,EAAM4K,QAEvB,EACA8B,sBAAuB,SAA+B7H,GACpD,IAAI0G,EAAY1G,EAAM0G,UAEtB,OADe1G,EAAM+F,SACHW,CACpB,EACAE,8BAA+B,SAAuC1G,EAAO0F,EAAOxF,EAAOyG,EAAchB,EAAepF,GACtH,IAAI9F,EAAYuF,EAAMvF,UAClB9I,EAASqO,EAAMrO,OACf6U,EAAYxG,EAAMwG,UAClBX,EAAW7F,EAAM6F,SACjByC,EAAStI,EAAMsI,OACf/W,EAAQyO,EAAMzO,MAGd0I,EAD6B,eAAdQ,GAAyC,eAAX6N,EACvB/W,EAAQI,EAC9B8X,EAAiBzX,KAAKC,IAAI,EAAGuU,EAAYX,EAAW5L,GACpD4M,EAAY7U,KAAKiN,IAAIwK,EAAgB/D,EAAQG,GAC7CiB,EAAY9U,KAAKC,IAAI,EAAGyT,EAAQG,EAAW5L,EAAO4L,EAAWtF,GAUjE,OARc,UAAVL,IAEAA,EADEyG,GAAgBG,EAAY7M,GAAQ0M,GAAgBE,EAAY5M,EAC1D,OAEA,UAIJiG,GACN,IAAK,QACH,OAAO2G,EAET,IAAK,MACH,OAAOC,EAET,IAAK,SAID,IAAI4C,EAAe1X,KAAK+U,MAAMD,GAAaD,EAAYC,GAAa,GAEpE,OAAI4C,EAAe1X,KAAK2X,KAAK1P,EAAO,GAC3B,EACEyP,EAAeD,EAAiBzX,KAAKsU,MAAMrM,EAAO,GACpDwP,EAEAC,EAKb,QACE,OAAI/C,GAAgBG,GAAaH,GAAgBE,EACxCF,EACEA,EAAeG,EACjBA,EAEAD,EAIf,EACAgB,uBAAwB,SAAgChD,EAAOO,GAC7D,IAAIoB,EAAY3B,EAAM2B,UAClBX,EAAWhB,EAAMgB,SACrB,OAAO7T,KAAKC,IAAI,EAAGD,KAAKiN,IAAIuH,EAAY,EAAGxU,KAAKsU,MAAMlB,EAASS,IACjE,EACAiC,0BAA2B,SAAmChD,EAAOX,EAAYwC,GAC/E,IAAIlM,EAAYqK,EAAMrK,UAClB9I,EAASmT,EAAMnT,OACf6U,EAAY1B,EAAM0B,UAClBX,EAAWf,EAAMe,SACjByC,EAASxD,EAAMwD,OACf/W,EAAQuT,EAAMvT,MAGd6T,EAASjB,EAAa0B,EACtB5L,EAF6B,eAAdQ,GAAyC,eAAX6N,EAEvB/W,EAAQI,EAC9BiY,EAAkB5X,KAAK2X,MAAM1P,EAAO0M,EAAevB,GAAUS,GACjE,OAAO7T,KAAKC,IAAI,EAAGD,KAAKiN,IAAIuH,EAAY,EAAGrC,EAAayF,EAAkB,GAE5E,EACA7N,kBAAmB,SAA2BpM,GAC9C,EACAqM,uCAAuC,EACvCC,cAAe,SAAuBsL,GACrBA,EAAM1B,QAOvB,G","sources":["webpack://superset/./node_modules/rc-util/lib/Children/toArray.js","webpack://superset/./node_modules/rc-util/lib/Dom/addEventListener.js","webpack://superset/./node_modules/rc-util/lib/Dom/css.js","webpack://superset/./node_modules/rc-util/lib/Dom/isVisible.js","webpack://superset/./node_modules/rc-util/lib/getScrollBarSize.js","webpack://superset/./node_modules/rc-util/lib/hooks/useEvent.js","webpack://superset/./node_modules/rc-util/lib/hooks/useLayoutEffect.js","webpack://superset/./node_modules/rc-util/lib/hooks/useMergedState.js","webpack://superset/./node_modules/rc-util/lib/hooks/useState.js","webpack://superset/./node_modules/react-window/dist/index.esm.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toArray;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactIs = require(\"react-is\");\nfunction toArray(children) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ret = [];\n  _react.default.Children.forEach(children, function (child) {\n    if ((child === undefined || child === null) && !option.keepEmpty) {\n      return;\n    }\n    if (Array.isArray(child)) {\n      ret = ret.concat(toArray(child));\n    } else if ((0, _reactIs.isFragment)(child) && child.props) {\n      ret = ret.concat(toArray(child.props.children, option));\n    } else {\n      ret.push(child);\n    }\n  });\n  return ret;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addEventListenerWrap;\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nfunction addEventListenerWrap(target, eventType, cb, option) {\n  /* eslint camelcase: 2 */\n  var callback = _reactDom.default.unstable_batchedUpdates ? function run(e) {\n    _reactDom.default.unstable_batchedUpdates(cb, e);\n  } : cb;\n  if (target !== null && target !== void 0 && target.addEventListener) {\n    target.addEventListener(eventType, callback, option);\n  }\n  return {\n    remove: function remove() {\n      if (target !== null && target !== void 0 && target.removeEventListener) {\n        target.removeEventListener(eventType, callback, option);\n      }\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.getClientSize = getClientSize;\nexports.getDocSize = getDocSize;\nexports.getOffset = getOffset;\nexports.getOuterHeight = getOuterHeight;\nexports.getOuterWidth = getOuterWidth;\nexports.getScroll = getScroll;\nexports.set = set;\n/* eslint-disable no-nested-ternary */\nvar PIXEL_PATTERN = /margin|padding|width|height|max|min|offset/;\nvar removePixel = {\n  left: true,\n  top: true\n};\nvar floatMap = {\n  cssFloat: 1,\n  styleFloat: 1,\n  float: 1\n};\nfunction getComputedStyle(node) {\n  return node.nodeType === 1 ? node.ownerDocument.defaultView.getComputedStyle(node, null) : {};\n}\nfunction getStyleValue(node, type, value) {\n  type = type.toLowerCase();\n  if (value === 'auto') {\n    if (type === 'height') {\n      return node.offsetHeight;\n    }\n    if (type === 'width') {\n      return node.offsetWidth;\n    }\n  }\n  if (!(type in removePixel)) {\n    removePixel[type] = PIXEL_PATTERN.test(type);\n  }\n  return removePixel[type] ? parseFloat(value) || 0 : value;\n}\nfunction get(node, name) {\n  var length = arguments.length;\n  var style = getComputedStyle(node);\n  name = floatMap[name] ? 'cssFloat' in node.style ? 'cssFloat' : 'styleFloat' : name;\n  return length === 1 ? style : getStyleValue(node, name, style[name] || node.style[name]);\n}\nfunction set(node, name, value) {\n  var length = arguments.length;\n  name = floatMap[name] ? 'cssFloat' in node.style ? 'cssFloat' : 'styleFloat' : name;\n  if (length === 3) {\n    if (typeof value === 'number' && PIXEL_PATTERN.test(name)) {\n      value = \"\".concat(value, \"px\");\n    }\n    node.style[name] = value; // Number\n    return value;\n  }\n  for (var x in name) {\n    if (name.hasOwnProperty(x)) {\n      set(node, x, name[x]);\n    }\n  }\n  return getComputedStyle(node);\n}\nfunction getOuterWidth(el) {\n  if (el === document.body) {\n    return document.documentElement.clientWidth;\n  }\n  return el.offsetWidth;\n}\nfunction getOuterHeight(el) {\n  if (el === document.body) {\n    return window.innerHeight || document.documentElement.clientHeight;\n  }\n  return el.offsetHeight;\n}\nfunction getDocSize() {\n  var width = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);\n  var height = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction getClientSize() {\n  var width = document.documentElement.clientWidth;\n  var height = window.innerHeight || document.documentElement.clientHeight;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction getScroll() {\n  return {\n    scrollLeft: Math.max(document.documentElement.scrollLeft, document.body.scrollLeft),\n    scrollTop: Math.max(document.documentElement.scrollTop, document.body.scrollTop)\n  };\n}\nfunction getOffset(node) {\n  var box = node.getBoundingClientRect();\n  var docElem = document.documentElement;\n\n  // < ie8 不支持 win.pageXOffset, 则使用 docElem.scrollLeft\n  return {\n    left: box.left + (window.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || document.body.clientLeft || 0),\n    top: box.top + (window.pageYOffset || docElem.scrollTop) - (docElem.clientTop || document.body.clientTop || 0)\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = function _default(element) {\n  if (!element) {\n    return false;\n  }\n  if (element instanceof Element) {\n    if (element.offsetParent) {\n      return true;\n    }\n    if (element.getBBox) {\n      var _getBBox = element.getBBox(),\n        width = _getBBox.width,\n        height = _getBBox.height;\n      if (width || height) {\n        return true;\n      }\n    }\n    if (element.getBoundingClientRect) {\n      var _element$getBoundingC = element.getBoundingClientRect(),\n        _width = _element$getBoundingC.width,\n        _height = _element$getBoundingC.height;\n      if (_width || _height) {\n        return true;\n      }\n    }\n  }\n  return false;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getScrollBarSize;\nexports.getTargetScrollBarSize = getTargetScrollBarSize;\nvar _dynamicCSS = require(\"./Dom/dynamicCSS\");\n/* eslint-disable no-param-reassign */\n\nvar cached;\nfunction measureScrollbarSize(ele) {\n  var randomId = \"rc-scrollbar-measure-\".concat(Math.random().toString(36).substring(7));\n  var measureEle = document.createElement('div');\n  measureEle.id = randomId;\n\n  // Create Style\n  var measureStyle = measureEle.style;\n  measureStyle.position = 'absolute';\n  measureStyle.left = '0';\n  measureStyle.top = '0';\n  measureStyle.width = '100px';\n  measureStyle.height = '100px';\n  measureStyle.overflow = 'scroll';\n\n  // Clone Style if needed\n  var fallbackWidth;\n  var fallbackHeight;\n  if (ele) {\n    var targetStyle = getComputedStyle(ele);\n    measureStyle.scrollbarColor = targetStyle.scrollbarColor;\n    measureStyle.scrollbarWidth = targetStyle.scrollbarWidth;\n\n    // Set Webkit style\n    var webkitScrollbarStyle = getComputedStyle(ele, '::-webkit-scrollbar');\n    var width = parseInt(webkitScrollbarStyle.width, 10);\n    var height = parseInt(webkitScrollbarStyle.height, 10);\n\n    // Try wrap to handle CSP case\n    try {\n      var widthStyle = width ? \"width: \".concat(webkitScrollbarStyle.width, \";\") : '';\n      var heightStyle = height ? \"height: \".concat(webkitScrollbarStyle.height, \";\") : '';\n      (0, _dynamicCSS.updateCSS)(\"\\n#\".concat(randomId, \"::-webkit-scrollbar {\\n\").concat(widthStyle, \"\\n\").concat(heightStyle, \"\\n}\"), randomId);\n    } catch (e) {\n      // Can't wrap, just log error\n      console.error(e);\n\n      // Get from style directly\n      fallbackWidth = width;\n      fallbackHeight = height;\n    }\n  }\n  document.body.appendChild(measureEle);\n\n  // Measure. Get fallback style if provided\n  var scrollWidth = ele && fallbackWidth && !isNaN(fallbackWidth) ? fallbackWidth : measureEle.offsetWidth - measureEle.clientWidth;\n  var scrollHeight = ele && fallbackHeight && !isNaN(fallbackHeight) ? fallbackHeight : measureEle.offsetHeight - measureEle.clientHeight;\n\n  // Clean up\n  document.body.removeChild(measureEle);\n  (0, _dynamicCSS.removeCSS)(randomId);\n  return {\n    width: scrollWidth,\n    height: scrollHeight\n  };\n}\nfunction getScrollBarSize(fresh) {\n  if (typeof document === 'undefined') {\n    return 0;\n  }\n  if (fresh || cached === undefined) {\n    cached = measureScrollbarSize();\n  }\n  return cached.width;\n}\nfunction getTargetScrollBarSize(target) {\n  if (typeof document === 'undefined' || !target || !(target instanceof Element)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n  return measureScrollbarSize(target);\n}","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useEvent;\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction useEvent(callback) {\n  var fnRef = React.useRef();\n  fnRef.current = callback;\n  var memoFn = React.useCallback(function () {\n    var _fnRef$current;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_fnRef$current = fnRef.current) === null || _fnRef$current === void 0 ? void 0 : _fnRef$current.call.apply(_fnRef$current, [fnRef].concat(args));\n  }, []);\n  return memoFn;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLayoutUpdateEffect = exports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _canUseDom = _interopRequireDefault(require(\"../Dom/canUseDom\"));\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\nvar useInternalLayoutEffect = process.env.NODE_ENV !== 'test' && (0, _canUseDom.default)() ? React.useLayoutEffect : React.useEffect;\nvar useLayoutEffect = function useLayoutEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useInternalLayoutEffect(function () {\n    return callback(firstMountRef.current);\n  }, deps);\n\n  // We tell react that first mount has passed\n  useInternalLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};\nvar useLayoutUpdateEffect = exports.useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  useLayoutEffect(function (firstMount) {\n    if (!firstMount) {\n      return callback();\n    }\n  }, deps);\n};\nvar _default = exports.default = useLayoutEffect;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useMergedState;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _useEvent = _interopRequireDefault(require(\"./useEvent\"));\nvar _useLayoutEffect = require(\"./useLayoutEffect\");\nvar _useState5 = _interopRequireDefault(require(\"./useState\"));\n/** We only think `undefined` is empty */\nfunction hasValue(value) {\n  return value !== undefined;\n}\n\n/**\n * Similar to `useState` but will use props value if provided.\n * Note that internal use rc-util `useState` hook.\n */\nfunction useMergedState(defaultStateValue, option) {\n  var _ref = option || {},\n    defaultValue = _ref.defaultValue,\n    value = _ref.value,\n    onChange = _ref.onChange,\n    postState = _ref.postState;\n\n  // ======================= Init =======================\n  var _useState = (0, _useState5.default)(function () {\n      if (hasValue(value)) {\n        return value;\n      } else if (hasValue(defaultValue)) {\n        return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n      } else {\n        return typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;\n      }\n    }),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    innerValue = _useState2[0],\n    setInnerValue = _useState2[1];\n  var mergedValue = value !== undefined ? value : innerValue;\n  var postMergedValue = postState ? postState(mergedValue) : mergedValue;\n\n  // ====================== Change ======================\n  var onChangeFn = (0, _useEvent.default)(onChange);\n  var _useState3 = (0, _useState5.default)([mergedValue]),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    prevValue = _useState4[0],\n    setPrevValue = _useState4[1];\n  (0, _useLayoutEffect.useLayoutUpdateEffect)(function () {\n    var prev = prevValue[0];\n    if (innerValue !== prev) {\n      onChangeFn(innerValue, prev);\n    }\n  }, [prevValue]);\n\n  // Sync value back to `undefined` when it from control to un-control\n  (0, _useLayoutEffect.useLayoutUpdateEffect)(function () {\n    if (!hasValue(value)) {\n      setInnerValue(value);\n    }\n  }, [value]);\n\n  // ====================== Update ======================\n  var triggerChange = (0, _useEvent.default)(function (updater, ignoreDestroy) {\n    setInnerValue(updater, ignoreDestroy);\n    setPrevValue([mergedValue], ignoreDestroy);\n  });\n  return [postMergedValue, triggerChange];\n}","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useSafeState;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\n/**\n * Same as React.useState but `setState` accept `ignoreDestroy` param to not to setState after destroyed.\n * We do not make this auto is to avoid real memory leak.\n * Developer should confirm it's safe to ignore themselves.\n */\nfunction useSafeState(defaultValue) {\n  var destroyRef = React.useRef(false);\n  var _React$useState = React.useState(defaultValue),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  React.useEffect(function () {\n    destroyRef.current = false;\n    return function () {\n      destroyRef.current = true;\n    };\n  }, []);\n  function safeSetState(updater, ignoreDestroy) {\n    if (ignoreDestroy && destroyRef.current) {\n      return;\n    }\n    setValue(updater);\n  }\n  return [value, safeSetState];\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = /*#__PURE__*/new WeakSet();\n    devWarningsOverscanRowsColumnsCount = /*#__PURE__*/new WeakSet();\n    devWarningsTagName = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);\n\n          var isRtl = direction === 'rtl';\n          itemStyleCache[key] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : _offset,\n            right: isRtl ? _offset : undefined,\n            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),\n            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),\n            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _class;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = /*#__PURE__*/new WeakSet();\n    devWarningsTagName$1 = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          var isRtl = direction === 'rtl';\n          var offsetHorizontal = isHorizontal ? _offset : 0;\n          itemStyleCache[index] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : offsetHorizontal,\n            right: isRtl ? offsetHorizontal : undefined,\n            top: !isHorizontal ? _offset : 0,\n            height: !isHorizontal ? size : '100%',\n            width: isHorizontal ? size : '100%'\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var _this$props2 = this.props,\n          itemCount = _this$props2.itemCount,\n          layout = _this$props2.layout;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1)); // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n\n      var scrollbarSize = 0;\n\n      if (this._outerRef) {\n        var outerRef = this._outerRef;\n\n        if (layout === 'vertical') {\n          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;\n        } else {\n          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;\n        }\n      }\n\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps, scrollbarSize));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          initialScrollOffset = _this$props3.initialScrollOffset,\n          layout = _this$props3.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props4 = this.props,\n          direction = _this$props4.direction,\n          layout = _this$props4.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          direction = _this$props5.direction,\n          height = _this$props5.height,\n          innerRef = _this$props5.innerRef,\n          innerElementType = _this$props5.innerElementType,\n          innerTagName = _this$props5.innerTagName,\n          itemCount = _this$props5.itemCount,\n          itemData = _this$props5.itemData,\n          _this$props5$itemKey = _this$props5.itemKey,\n          itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey,\n          layout = _this$props5.layout,\n          outerElementType = _this$props5.outerElementType,\n          outerTagName = _this$props5.outerTagName,\n          style = _this$props5.style,\n          useIsScrolling = _this$props5.useIsScrolling,\n          width = _this$props5.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props6 = this.props,\n          itemCount = _this$props6.itemCount,\n          overscanCount = _this$props6.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _class;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar _excluded = [\"style\"],\n    _excluded2 = [\"style\"];\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { FixedSizeGrid, FixedSizeList, VariableSizeGrid, VariableSizeList, areEqual, shouldComponentUpdate };\n//# sourceMappingURL=index.esm.js.map\n"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","toArray","children","option","arguments","length","undefined","ret","_react","default","Children","forEach","child","keepEmpty","Array","isArray","concat","_reactIs","isFragment","props","push","target","eventType","cb","callback","_reactDom","unstable_batchedUpdates","e","addEventListener","remove","removeEventListener","get","node","name","style","getComputedStyle","floatMap","type","toLowerCase","offsetHeight","offsetWidth","removePixel","PIXEL_PATTERN","test","parseFloat","getStyleValue","getClientSize","width","document","documentElement","clientWidth","height","window","innerHeight","clientHeight","getDocSize","Math","max","scrollWidth","body","scrollHeight","getOffset","box","getBoundingClientRect","docElem","left","pageXOffset","scrollLeft","clientLeft","top","pageYOffset","scrollTop","clientTop","getOuterHeight","el","getOuterWidth","getScroll","set","x","hasOwnProperty","cssFloat","styleFloat","float","nodeType","ownerDocument","defaultView","element","Element","offsetParent","getBBox","_getBBox","_element$getBoundingC","_width","_height","fresh","cached","measureScrollbarSize","getTargetScrollBarSize","_dynamicCSS","ele","randomId","random","toString","substring","measureEle","createElement","id","fallbackWidth","fallbackHeight","measureStyle","position","overflow","targetStyle","scrollbarColor","scrollbarWidth","webkitScrollbarStyle","parseInt","widthStyle","heightStyle","updateCSS","console","error","appendChild","isNaN","removeChild","removeCSS","_interopRequireWildcard","fnRef","React","useRef","current","useCallback","_fnRef$current","_len","args","_key","call","apply","useLayoutUpdateEffect","useInternalLayoutEffect","useLayoutEffect","useEffect","deps","firstMountRef","firstMount","defaultStateValue","_ref","defaultValue","onChange","postState","_useState","_useState5","hasValue","_useState2","_slicedToArray2","innerValue","setInnerValue","mergedValue","postMergedValue","onChangeFn","_useEvent","_useState3","_useState4","prevValue","setPrevValue","_useLayoutEffect","prev","updater","ignoreDestroy","destroyRef","_React$useState","useState","_React$useState2","setValue","now","performance","Date","cancelTimeout","timeoutID","cancelAnimationFrame","requestTimeout","delay","start","requestAnimationFrame","tick","size","getScrollbarSize","recalculate","div","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","defaultItemKey","columnIndex","data","rowIndex","createGridComponent","_ref2","_class","getColumnOffset","getColumnStartIndexForOffset","getColumnStopIndexForStartIndex","getColumnWidth","getEstimatedTotalHeight","getEstimatedTotalWidth","getOffsetForColumnAndAlignment","getOffsetForRowAndAlignment","getRowHeight","getRowOffset","getRowStartIndexForOffset","getRowStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","Grid","_this","this","_instanceProps","_resetIsScrollingTimeoutId","_outerRef","state","instance","isScrolling","horizontalScrollDirection","initialScrollLeft","initialScrollTop","scrollUpdateWasRequested","verticalScrollDirection","_callOnItemsRendered","overscanColumnStartIndex","overscanColumnStopIndex","overscanRowStartIndex","overscanRowStopIndex","visibleColumnStartIndex","visibleColumnStopIndex","visibleRowStartIndex","visibleRowStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","_this$props","columnWidth","rowHeight","itemStyleCache","_getItemStyleCache","key","_offset","isRtl","right","_","__","___","_onScroll","event","_event$currentTarget","currentTarget","setState","prevState","calculatedScrollLeft","min","calculatedScrollTop","_resetIsScrollingDebounced","_outerRefSetter","ref","outerRef","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps","_proto","prototype","scrollTo","_ref3","scrollToItem","_ref4","_ref4$align","align","_this$props2","columnCount","rowCount","_this$state","scrollbarSize","estimatedTotalHeight","horizontalScrollbarSize","verticalScrollbarSize","componentDidMount","_this$props3","_callPropsCallbacks","componentDidUpdate","_this$state2","componentWillUnmount","render","_this$props4","className","innerRef","innerElementType","innerTagName","itemData","_this$props4$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_this$_getHorizontalR","_getHorizontalRangeToRender","columnStartIndex","columnStopIndex","_this$_getVerticalRan","_getVerticalRangeToRender","rowStartIndex","rowStopIndex","items","_rowIndex","_columnIndex","estimatedTotalWidth","WebkitOverflowScrolling","willChange","pointerEvents","_this$props5","_this$_getHorizontalR2","_overscanColumnStartIndex","_overscanColumnStopIndex","_visibleColumnStartIndex","_visibleColumnStopIndex","_this$_getVerticalRan2","_overscanRowStartIndex","_overscanRowStopIndex","_visibleRowStartIndex","_visibleRowStopIndex","_this$state3","_horizontalScrollDirection","_scrollLeft","_scrollTop","_scrollUpdateWasRequested","_verticalScrollDirection","_this$props6","overscanColumnCount","overscanColumnsCount","overscanCount","_this$state4","overscanCountResolved","startIndex","stopIndex","overscanBackward","overscanForward","_this$props7","overscanRowCount","overscanRowsCount","_this$state5","PureComponent","defaultProps","_ref5","_ref6","rowMetadataMap","estimatedRowHeight","lastMeasuredRowIndex","totalSizeOfMeasuredRows","itemMetadata","offset","columnMetadataMap","estimatedColumnWidth","lastMeasuredColumnIndex","getItemMetadata","itemType","index","instanceProps","itemMetadataMap","itemSize","lastMeasuredIndex","i","findNearestItem","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentOffset","itemCount","interval","getOffsetForIndexAndAlignment","scrollOffset","estimatedTotalSize","maxOffset","minOffset","round","VariableSizeGrid","resetAfterColumnIndex","shouldForceUpdate","resetAfterIndices","resetAfterRowIndex","_ref6$shouldForceUpda","forceUpdate","_ref7","defaultItemKey$1","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getStartIndexForOffset","getStopIndexForStartIndex","List","scrollDirection","initialScrollOffset","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","layout","isHorizontal","offsetHorizontal","_onScrollHorizontal","_onScrollVertical","_event$currentTarget2","validateSharedProps$1","_this$props5$itemKey","_this$_getRangeToRend","_getRangeToRender","_index","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_scrollDirection","_scrollOffset","FixedSizeList","lastItemOffset","middleOffset","ceil","numVisibleItems"],"sourceRoot":""}