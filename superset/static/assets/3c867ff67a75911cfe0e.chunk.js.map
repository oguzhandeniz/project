{"version":3,"file":"3c867ff67a75911cfe0e.chunk.js","mappings":"kLA4BO,MAAMA,EAAeA,EAAGC,OAAMC,WACnC,MAAMC,GACJC,EAAAA,EAAAA,IAAA,QAAMC,UAAU,UAASC,SACtBJ,IAIL,GAAID,EAAM,CACR,MAAMM,GAAWC,EAAAA,EAAAA,GAAaP,GACxBQ,GAAQC,EAAAA,EAAAA,GAAE,kBAAmBH,GACnC,OACEH,EAAAA,EAAAA,IAACO,EAAAA,EAAO,CAACF,MAAOA,EAAOG,UAAU,SAAQN,SACtCH,G,CAIP,OAAOA,CAAQ,C,wECbH,SAAUU,GAAoB,MAC1CJ,EAAK,YACLK,EAAW,UACXC,EAAS,SACTT,IAEA,MAAOU,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAAqBC,IAA0BF,EAAAA,EAAAA,UAAgB,IAsBhEG,EAAOA,KACXJ,GAAQ,GACRG,EAAuB,GAAG,EAQ5B,OACEE,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,CAAAjB,SAAA,CACW,MAARA,OAAQ,EAARA,GAhCekB,IAAIC,KAEtBA,EAAaC,SAAQC,IACdA,IAGsB,mBAAhBA,EAAIC,SACbD,EAAIC,UAE4B,mBAAvBD,EAAIE,gBACbF,EAAIE,iBAE6B,mBAAxBF,EAAIG,iBACbH,EAAIG,kB,IAGRb,GAAQ,GACRG,EAAuBK,EAAa,KAgBlCrB,EAAAA,EAAAA,IAAC2B,EAAAA,EAAW,CACVjB,YAAaA,EACbC,UAVUiB,KACdjB,KAAaI,GACbE,GAAM,EASFY,OAAQZ,EACRL,KAAMA,EACNP,MAAOA,MAIf,C,qGClDA,MAAMyB,EAAwD,OAA/CC,EAAuC,OAAvCC,GAAGC,EAAAA,EAAAA,KAA+BC,YAAK,EAApCF,EAAsCG,QAAMJ,EAAI,GAE5DK,EAAsBC,IAC1B,MAAMC,EAAwB,EAAjBD,EAAME,SACnB,MAAO,cACED,mBACCA,wBACKA,sBACFD,EAAMG,WAAWC,MAAMC,MAAM,EAGtCC,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,GAAO;IAC/B,EAAGR,WAAYD,EAAmBC;EAIhCS,GAAcF,EAAAA,EAAAA,IAAOC,EAAAA,GAAOE,MAAM;;MAElC,EAAGV,WAAYD,EAAmBC;;EAI1B,SAAUW,GAAS,MAAEC,EAAK,SAAEC,EAAW,IACnD,OACElD,EAAAA,EAAAA,IAAC8C,EAAW,CAACI,SAAUA,EAAShD,SAC7B+C,EAAME,KAAI,EAAGC,aAAYC,YAAWC,SAAQ,IAAAC,EAAAC,EAC3C,MAAMC,EAAO,GAAGL,KAAcC,IAExBK,ECnBR,SAAyBC,EAAqB7B,GAElD,OAAK6B,EAIE7B,EA3BT,SAAyB8B,EAAeC,GAMtC,MAAMC,EAAY,IAAIF,GAAOT,KAAIY,GAAUA,EAAOC,WAAW,KACvDC,EAAMH,EAAUI,OAEhBC,EAAKF,GAAOJ,EAAI,GAAM,EACtBO,EAAIN,EAAUO,QAAO,CAACC,EAASC,IAASD,EAAUC,IAAQV,EAEhE,IAAIW,EAASV,EAAU,GAAKD,EAM5B,MAJA,IAAI,IAAIY,MAAMR,IAAM3C,SAAQ,KAC1BkD,GAAUL,EAAIK,EAASJ,GAAKP,CAAC,IAGxBW,CACT,CAQmBE,CAAgBf,EAAa7B,EAAUoC,SAJ/B,aAK3B,CDYsBS,CADI,GAAGrB,KAAMF,KAAcC,IACDvB,GAClC8C,EAAY,gBAAgBtB,eAClC,OACEtD,EAAAA,EAAAA,IAACO,EAAAA,EAAO,CAAYF,MAAOoD,EAAMjD,UAAU,MAAKN,UAC9CgB,EAAAA,EAAAA,IAACyB,EAAY,CAEXkC,MAAO,CACLC,gBAAiBpB,EACjBqB,YAAarB,GAEfsB,IAAKJ,EAAU1E,SAAA,CAEJ,MAAVkD,GAAe,OAALG,EAAVH,EAAa,SAAH,EAAVG,EAAiB0B,oBACR,MAAT5B,GAAc,OAALG,EAATH,EAAY,SAAH,EAATG,EAAgByB,sBARZxB,IAFKA,EAYJ,KAKpB,C,mFE5CA,MAAMyB,EAAgBtC,EAAAA,GAAOuC,IAAI;;;;;;;;;gBASjB,EAAG9C,WAAYA,EAAMF,OAAOiD,QAAQC;;;;EAM9CC,EAAgB1C,EAAAA,GAAOuC,IAAI;WACtB,EAAG9C,WAAYA,EAAMF,OAAOoD,UAAUF;EAGnC,SAAUG,GAAW,QAAEC,IACnC,OACEzF,EAAAA,EAAAA,IAACkF,EAAa,CAACjF,UAAU,UAASC,SAC/BuF,EAAQtC,KAAI,CAACuC,EAAQC,KACpB,MAAMC,EAAaC,EAAAA,EAAMH,EAAOI,MAChC,OAAIJ,EAAOK,SAEP/F,EAAAA,EAAAA,IAACO,EAAAA,EAAO,CACN+C,GAAI,GAAGoC,EAAOM,gBACd3F,MAAOqF,EAAOK,QACdvF,UAAWkF,EAAOlF,UAAUN,UAG5BF,EAAAA,EAAAA,IAACsF,EAAa,CACZW,KAAK,SACLC,SAAU,EACVjG,UAAU,gBAEVkG,QAAST,EAAOS,QAAQjG,UAExBF,EAAAA,EAAAA,IAAC4F,EAAU,OATRD,IAgBT3F,EAAAA,EAAAA,IAACsF,EAAa,CACZW,KAAK,SACLC,SAAU,EACVjG,UAAU,gBACVkG,QAAST,EAAOS,QAAQjG,UAIxBF,EAAAA,EAAAA,IAAC4F,EAAU,KAFND,EAGS,KAK1B,C,oSCxEA,MAAMS,EAAc/D,GAAyBgE,EAAAA,EAAG;WACrChE,EAAMF,OAAOoD,UAAUe;kBACC,EAAjBjE,EAAME;EAGV,SAAUgE,GAAc,KAAEC,IACtC,MAAMC,EAAoE,CACxEX,KAAM,KACNE,MAAO,IAET,OAAQQ,GACN,KAAKE,EAAAA,GAAyBC,MAC5BF,EAAoBX,MAAO9F,EAAAA,EAAAA,IAAC6F,EAAAA,EAAMc,MAAK,CAACN,IAAKD,IAC7CK,EAAoBT,MAAQU,EAAAA,GAAyBC,MACrD,MACF,KAAKD,EAAAA,GAAyBE,MAI9B,KAAKF,EAAAA,GAAyBG,QAC5BJ,EAAoBX,MAAO9F,EAAAA,EAAAA,IAAC6F,EAAAA,EAAMe,MAAK,CAACP,IAAKD,IAC7CK,EAAoBT,MAAQU,EAAAA,GAAyBE,MACrD,MACF,QACEH,EAAoBX,KAAO,KAC3BW,EAAoBT,MAAQ,GAEhC,OAAOS,EAAoBX,MACzB9F,EAAAA,EAAAA,IAACO,EAAAA,EAAO,CAACF,MAAOoG,EAAoBT,MAAOxF,UAAU,SAAQN,SAC1DuG,EAAoBX,OAErB,IACN,C,0BCrBAgB,IAAAA,aAAoB,KAAM,CACxBC,SAAU,CACRC,QAAS,qBACTC,QAAS,iBACTC,QAAS,oBACTC,SAAU,uBACVC,SAAU,gBACVC,SAAU,OAId,MAAMC,EAAa1E,EAAAA,GAAOuC,IAAI;WACnB,EAAG9C,WAAYA,EAAMF,OAAOoD,UAAUF;EAG3CkC,GAAU3E,EAAAA,EAAAA,IAAOiD,EAAAA,EAAM0B,QAAQ;WAC1B,EAAGlF,WAAYA,EAAMF,OAAOiD,QAAQC;;YAEnC,EAAGhD,WAA6B,EAAjBA,EAAME;;SAExB,EAAGF,WAAYA,EAAME;UACpB,EAAGF,WAAYA,EAAME;;EA6B/B,EAzBgEiF,EAC9DC,YACAC,aAEA,MAAOC,EAAWC,IAAgB9G,EAAAA,EAAAA,UAAiBgG,IAAOW,IAa1D,OAXAI,EAAAA,EAAAA,YAAU,KACRD,GAAa,IAAMd,IAAOW,KAG1B,MAAMK,EAAWC,aAAY,KAC3BH,GAAa,IAAMd,IAAOW,IAAW,GA1ClB,KA6CrB,MAAO,IAAMO,cAAcF,EAAS,GACnC,CAACL,KAGFvG,EAAAA,EAAAA,IAACoG,EAAU,CAAApH,SAAA,EACRI,EAAAA,EAAAA,GAAE,kBAAmBqH,EAAUM,UAAYN,EAAUZ,WAAa,MAClEW,IAAU1H,EAAAA,EAAAA,IAACuH,EAAO,CAACpB,QAASuB,MAClB,E,mECvBjB,MAAMQ,GAAqBC,EAAAA,EAAAA,KAIrBC,EAA8C,CAClD,CAACC,EAAAA,GAAWC,UAAUhI,EAAAA,EAAAA,GAAE,WACxB,CAAC+H,EAAAA,GAAWE,UAAUjI,EAAAA,EAAAA,GAAE,WACxB,CAAC+H,EAAAA,GAAWG,QAAQlI,EAAAA,EAAAA,GAAE,SACtB,CAAC+H,EAAAA,GAAWI,OAAOnI,EAAAA,EAAAA,GAAE,iBACrB,CAAC+H,EAAAA,GAAWK,QAAQpI,EAAAA,EAAAA,GAAE,aAalBqI,GAAeC,EAAAA,EAAAA,GAAuC,CAC1DC,YAAa,QACbC,OAAQ,SACRC,SAAU,oBAGNC,EAAmBpG,EAAAA,GAAOqG,GAAG;;eAEpB,EAAG5G,WAA6B,EAAjBA,EAAME;MAC9B,EAAGF,WAA6B,EAAjBA,EAAME;sBACL,EAAGF,WAAYA,EAAMF,OAAOoD,UAAU2D;EAGtDC,EAAuBvG,EAAAA,GAAOqG,GAAG;;;;;;oBAMnB,EAAG5G,WAAYA,EAAME;;EAInC6G,EAAkBlB,EAAmBhG,IAAI,6BA2gB/C,GAAemH,EAAAA,EAAAA,KAzgBf,UAAmB,eACjBC,EAAc,gBACdC,GAAkB,EAAK,KACvB1J,EAAI,gBACJ2J,IAEA,MAAMnJ,EAAQkJ,GAAkBjJ,EAAAA,EAAAA,GAAE,WAAYA,EAAAA,EAAAA,GAAE,SAC1CmJ,EAAcF,GAAkBjJ,EAAAA,EAAAA,GAAE,YAAaA,EAAAA,EAAAA,GAAE,UACjDoJ,EAAWH,EAAkB,UAAY,SACzCI,GAAiBC,EAAAA,EAAAA,UACrB,IAAM,CACJ,CACEtG,GAAI,OACJuG,SAAUC,EAAAA,EAAeC,OACzBnG,MAAO2F,EAAkB,SAAW,WAGxC,CAACA,KAGDS,OAAO,QACLC,EACAC,cAAeC,EACfC,mBAAoBC,EAAM,kBAC1BC,EAAiB,YACjBC,GACD,QACDC,EAAO,UACPC,EAAS,sBACTC,EAAqB,YACrBC,EAAW,iBACXC,IACEC,EAAAA,EAAAA,IACF,UACAvK,EAAAA,EAAAA,GAAE,WACFgJ,GACA,OACAwB,EACAnB,IAGI,eAAEoB,IAAmBC,EAAAA,EAAAA,IACzB,UACA1K,EAAAA,EAAAA,GAAE,WACFgJ,IAGK2B,EAAgBC,IAAqBpK,EAAAA,EAAAA,WAAkB,IACvDqK,EAAcC,IAAmBtK,EAAAA,EAAAA,UACtC,OAEKuK,EAAsBC,KAC3BxK,EAAAA,EAAAA,UAA6B,MAG/B,SAASyK,GAAgBC,GACvBJ,EAAgBI,GAChBN,GAAkB,EACpB,CAEA,MAEMO,GAAUjB,EAAQ,aAClBkB,GAAYlB,EAAQ,aACpBmB,GAAYnB,EAAQ,cAE1B3C,EAAAA,EAAAA,YAAU,KACJyC,GAAqBoB,IACvBd,G,GAED,CAACrB,IAEJ,MAmCMqC,GAAc,CAAC,CAAEtI,GAAI,OAAQuI,MAAM,IAEnCC,IAAeC,EAAAA,EAAAA,cACnB,CAACC,EAAmBC,KAClB,GAAQ,MAAJD,GAAAA,EAAM1I,GAAI,CACZ,MAAM4I,EAAYF,EAAK1I,GACjB6I,EAAW,IAAI9B,GAErBK,EACEyB,EAAShJ,KAAIqI,IACF,MAALA,OAAK,EAALA,EAAOlI,MAAO0I,EAAK1I,GACd,IACFkI,EACHY,OAAQH,GAILT,KAIXT,EAAemB,EAAW,CAAEE,OAAQH,IAAW,GAAO,GACnDI,OACAC,OAAM,IAAM5B,EAAsByB,I,IAGzC,CAAC9B,EAAQK,EAAuBK,IAG5BwB,IAAU3C,EAAAA,EAAAA,UACd,IAAM,CACJ,CACE4C,KAAMA,EACJC,KACEN,UAAYO,WAAYC,QAG1B3M,EAAAA,EAAAA,IAAC4M,EAAAA,EAAe,CACd5C,MAAO2C,EACPpD,gBAAiBA,IAGrBsD,SAAU,aACVvK,KAAM,KACNwK,eAAe,GAEjB,CACEN,KAAMA,EACJC,KACEN,UAAYY,eAAgBC,OAG9BA,EACIlG,IAAAA,IAAWkG,GAAcC,QAAQC,OAAOC,EAAAA,IACxC,GACNN,SAAU,iBACVO,QAAQ9M,EAAAA,EAAAA,GAAE,YACVgC,KAAM,MAER,CACEuK,SAAU,OACVO,QAAQ9M,EAAAA,EAAAA,GAAE,QACVgC,KAAM,MAER,CACE8K,QAAQ9M,EAAAA,EAAAA,GAAE,YACVuM,SAAU,oBACVvK,KAAM,KACNkK,KAAMA,EACJC,KACEN,UAAYkB,oBAAoB,GAAIC,iBAGtCtN,EAAAA,EAAAA,IAACO,EAAAA,EAAO,CACNF,MAAO,GAAGgN,MAAsBC,KAChC9M,UAAU,UAASN,UAEnBF,EAAAA,EAAAA,IAAA,QAAAE,SAAO,GAAGmN,MAAsBC,UAItC,CACEd,KAAMA,EACJC,KACEN,UAAYoB,kBAGdA,EAAWpK,KAAKqK,IACdxN,EAAAA,EAAAA,IAACuG,EAAa,CAAYC,KAAMgH,EAAEhH,MAAdgH,EAAElK,MAE1BuJ,SAAU,aACVO,QAAQ9M,EAAAA,EAAAA,GAAE,uBACVwM,eAAe,EACfxK,KAAM,MAER,CACEkK,KAAMA,EACJC,KACEN,UAAYsB,SAAS,SAEdzN,EAAAA,EAAAA,IAACgD,EAAAA,EAAQ,CAACC,MAAOwK,IAC5BL,QAAQ9M,EAAAA,EAAAA,GAAE,UACVgD,GAAI,SACJwJ,eAAe,EACfxK,KAAM,MAER,CACEkK,KAAMA,EACJC,KACEN,UACEuB,2BAA4BC,EAC5BC,WAAYC,QAGP7N,EAAAA,EAAAA,IAACJ,EAAAA,EAAY,CAACE,KAAM6N,EAAW9N,KAAMgO,IAChDT,QAAQ9M,EAAAA,EAAAA,GAAE,iBACVuM,SAAU,6BACVvK,KAAM,MAER,CACEkK,KAAMA,EAAGC,KAAON,gBACd,MAAM2B,EACJ3B,EAASsB,OAAOtK,KAAK4K,GAAaA,EAAEzK,KAAI0K,SAASnO,EAAKoO,UACtDC,EAAAA,EAAAA,IAAYrO,GAEd,OACEG,EAAAA,EAAAA,IAACmO,EAAAA,EAAM,CACLC,UAAWN,EAEX7B,QAASE,EAASC,OAClBjG,QAAU8F,GAAqBH,GAAaK,EAAUF,GACtD3J,KAAK,SACL,EAGN8K,QAAQ9M,EAAAA,EAAAA,GAAE,UACVuM,SAAU,SACVvJ,GAAI,SACJhB,KAAM,MAER,CACEkK,KAAMA,EAAGC,KAAON,gBACd,MAAMkC,GAAUC,EAAAA,EAAAA,MAMVR,EACJ3B,EAASsB,OAAOtK,KAAK4K,GAAaA,EAAEzK,KAAI0K,SAASnO,EAAKoO,UACtDC,EAAAA,EAAAA,IAAYrO,GAER4F,EAAU,CACdgG,GACI,CACEzF,MAAO,uBACPD,SAASzF,EAAAA,EAAAA,GAAE,iBACXE,UAAW,SACXsF,KAAM,OACNK,QAduBoI,IAC7BF,EAAQG,KAAK,IAAIrC,EAAS3F,KAAKiI,iBAAiBtC,EAAS7I,WAerD,KACJmI,GACI,CACEzF,MAAO8H,EAAY,cAAgB,iBACnC/H,QAAS+H,GAAYxN,EAAAA,EAAAA,GAAE,SAAUA,EAAAA,EAAAA,GAAE,QACnCE,UAAW,SACXsF,KAAMgI,EAAY,OAAS,aAC3B3H,QAzBWuI,IAAMnD,GAAgBY,IA2BnC,KACJ2B,GAAapC,GACT,CACE1F,MAAO,gBACPD,SAASzF,EAAAA,EAAAA,GAAE,UACXE,UAAW,SACXsF,KAAM,QACNK,QAjCawI,IAAMrD,GAAwBa,IAmC7C,MACJyC,QAAOC,GAAiB,OAATA,IAEjB,OAAO7O,EAAAA,EAAAA,IAACwF,EAAAA,EAAU,CAACC,QAASA,GAA4B,EAE1D2H,QAAQ9M,EAAAA,EAAAA,GAAE,WACVgD,GAAI,UACJwL,QAASrD,KAAYC,GACrBoB,eAAe,EACfxK,KAAM,MAER,CACEuK,SAAUkC,EAAAA,EAAmBC,UAC7BF,QAAQ,KAGZ,CAACpD,GAAWD,GAASlC,EAAiBuC,KAGlCmD,GAA0C,GAE5CtD,IACFsD,GAAeT,KAAK,CAClB/K,MACEvC,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,CAAAjB,SAAA,EACEF,EAAAA,EAAAA,IAAA,KAAGC,UAAU,eAAgB,IAACI,KAGlC6O,YAAa,UACb/I,QAASA,KACPoF,GAAgB,KAAK,IAIvBG,IACFuD,GAAeT,KAAK,CAClB/K,MAAMnD,EAAAA,EAAAA,GAAE,eACR6F,QAASyE,EACTsE,YAAa,cAKjB,MAAMC,GAAa,CACjB9O,OAAOC,EAAAA,EAAAA,GAAE,YAAamJ,GACtB2F,MAAO,qBACPC,aAAcA,IAAM9D,GAAgB,MACpC+D,WAAY3D,IACVzK,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,CAAAjB,SAAA,EACEF,EAAAA,EAAAA,IAAA,KAAGC,UAAU,eAAgB,IAACI,EAAO,OAErC,MAGAkP,IAAmB3F,EAAAA,EAAAA,UACvB,IAAM,CACJ,CACEwD,QAAQ9M,EAAAA,EAAAA,GAAE,QACVkP,IAAK,SACLlM,GAAI,OACJmM,MAAO,SACP5F,SAAUC,EAAAA,EAAe4F,UAE3B,CACEtC,QAAQ9M,EAAAA,EAAAA,GAAE,SACVkP,IAAK,QACLlM,GAAI,SACJmM,MAAO,SACP5F,SAAUC,EAAAA,EAAe6F,iBACzBC,iBAAiBtP,EAAAA,EAAAA,GAAE,OACnBuP,cAAcC,EAAAA,EAAAA,IACZ,SACA,UACAC,EAAAA,EAAAA,KAAmBC,IACjB1P,EAAAA,EAAAA,GAAE,qDAAsD0P,KAE1DnQ,GAEFoQ,UAAU,GAEZ,CACE7C,QAAQ9M,EAAAA,EAAAA,GAAE,UACVkP,IAAK,SACLlM,GAAI,aACJmM,MAAO,SACP5F,SAAUC,EAAAA,EAAeC,OACzB6F,gBAAiB,MACjBM,QAAS,CACP,CACElK,MAAOoC,EAAgBC,EAAAA,GAAWC,SAClC1E,MAAOyE,EAAAA,GAAWC,SAEpB,CACEtC,MAAOoC,EAAgBC,EAAAA,GAAWE,SAClC3E,MAAOyE,EAAAA,GAAWE,SAEpB,CAAEvC,MAAOoC,EAAgBC,EAAAA,GAAWG,OAAQ5E,MAAOyE,EAAAA,GAAWG,OAC9D,CAAExC,MAAOoC,EAAgBC,EAAAA,GAAWI,MAAO7E,MAAOyE,EAAAA,GAAWI,MAC7D,CAAEzC,MAAOoC,EAAgBC,EAAAA,GAAWK,OAAQ9E,MAAOyE,EAAAA,GAAWK,SAGlE,CACE0E,QAAQ9M,EAAAA,EAAAA,GAAE,eACVkP,IAAK,aACLlM,GAAI,aACJmM,MAAO,SACP5F,SAAUC,EAAAA,EAAeqG,gBACzBP,iBAAiBtP,EAAAA,EAAAA,GAAE,OACnBuP,cAAcC,EAAAA,EAAAA,IACZ,SACA,cACAC,EAAAA,EAAAA,KAAmBC,IACjB1P,EAAAA,EAAAA,GACE,iEACA0P,KAGJnQ,GAEFoQ,UAAU,KAGd,IAGIG,GAAShH,GACblI,EAAAA,EAAAA,IAACiI,EAAoB,CAAAjJ,SAAA,EACnBF,EAAAA,EAAAA,IAAA,OAAAE,UAAMI,EAAAA,EAAAA,GAAE,uBACRN,EAAAA,EAAAA,IAACoJ,EAAe,QAGlB9I,EAAAA,EAAAA,GAAE,oBAGJ,OACEY,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,CAAAjB,SAAA,EACEF,EAAAA,EAAAA,IAACqQ,EAAAA,EAAO,CACNC,YAAa5G,EACbjG,KAAM2M,GACNG,KAAM,CACJ,CACE9M,KAAM,SACNuC,OAAO1F,EAAAA,EAAAA,GAAE,UACTkQ,IAAK,eACLC,YAAY,GAGd,CACEhN,KAAM,UACNuC,OAAO1F,EAAAA,EAAAA,GAAE,WACTkQ,IAAK,gBACLC,YAAY,IAIhBC,QAASzB,GAAe/O,UAExBF,EAAAA,EAAAA,IAACgJ,EAAgB,CAAA9I,UACfF,EAAAA,EAAAA,IAACwH,EAAW,CAACC,UAAW8C,EAAa7C,OAAQA,IAAMiD,WAGvD3K,EAAAA,EAAAA,IAAC2Q,EAAAA,GAAgB,CACfnF,MAAOL,EACP7B,eAAgBA,EAChBsH,MAAOzF,EACPtJ,OAAQA,KACNqJ,GAAkB,GAClBE,EAAgB,MAChBT,GAAa,EAEfkG,KAAM5F,EACN6F,SAAUvH,IACO,MAAZ4B,OAAY,EAAZA,EAAc7H,KA9YC,IAAG,IAAIyN,MAAOC,aAgZnC3F,IACCrL,EAAAA,EAAAA,IAAC2B,EAAAA,EAAW,CACVjB,aAAaJ,EAAAA,EAAAA,GACX,0CACA+K,EAAqB5H,MAEvB9C,UAAWA,KACL0K,GA3YY4F,GAAG3N,KAAIG,WAC/ByN,EAAAA,EAAeC,OAAO,CACpBpI,SAAU,kBAAkBzF,MAC3B+I,MACD,KACE1B,IACAW,GAAwB,MACxB9B,GAAgBlJ,EAAAA,EAAAA,GAAE,cAAemD,GAAM,IAEzCsM,EAAAA,EAAAA,KAAmBC,GACjB1G,GAAehJ,EAAAA,EAAAA,GAAE,qCAAsCmD,EAAMuM,MAEhE,EAgYSiB,CAAkB5F,E,EAGtBxJ,OAAQA,IAAMyJ,GAAwB,MACtC1K,MAAI,EACJP,OAAOC,EAAAA,EAAAA,GAAE,aAAcD,MAG3BL,EAAAA,EAAAA,IAACS,EAAAA,EAAmB,CAClBJ,OAAOC,EAAAA,EAAAA,GAAE,kBACTI,aAAaJ,EAAAA,EAAAA,GACX,mDACAmJ,GAEF9I,UA3YwByQ,MAAOC,IACnC,IACE,MAAM,QAAEC,SAAkB3I,EACxB0I,EAAelO,KAAI,EAAGG,QAASA,KAEjCqH,IACAnB,EAAgB8H,E,CAChB,MAAOC,IACPxB,EAAAA,EAAAA,KAAmBC,GACjB1G,GACEhJ,EAAAA,EAAAA,GACE,kDACAmJ,EACAuG,KALND,CAQEwB,E,GA2XiCrR,SAEhCsR,IACC,MAAMC,EAA4C/F,GAC9C,CACE,CACE8D,IAAK,SACL/L,MAAMnD,EAAAA,EAAAA,GAAE,UACRoR,SAAUF,EACVhL,KAAM,WAGV,GACJ,OACExG,EAAAA,EAAAA,IAAC2R,EAAAA,EAAQ,CACP1R,UAAU,mBACVsM,QAASA,GACTqF,MAAOzH,EACP6B,KAAM3B,EACN8E,WAAYA,GACZ1E,UAAWA,EACX8E,QAASA,GACT3D,YAAaA,GACb3B,QAASA,EACTwH,YAAaA,EACbnH,kBAAmBA,EACnBuH,kBAAmBjH,EACnBD,YAAaA,EACbrB,eAAgBA,EAChBE,gBAAiBA,EACjBsI,SA7iBI,IA8iBJ,MAMd,G,kBC5lBc,SAAU1R,EAAa2R,GACnC,OAAKA,EAGE,GAAGA,EAAM3O,cAAc2O,EAAM1O,YAF3B,EAGX,C","sources":["webpack://superset/./src/components/AuditInfo/index.tsx","webpack://superset/./src/components/ConfirmStatusChange/index.tsx","webpack://superset/./src/components/FacePile/index.tsx","webpack://superset/./src/components/FacePile/utils.tsx","webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/features/alerts/components/RecipientIcon.tsx","webpack://superset/./src/components/LastUpdated/index.tsx","webpack://superset/./src/pages/AlertReportList/index.tsx","webpack://superset/./src/utils/getOwnerName.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\nimport { Tooltip } from 'src/components/Tooltip';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { t } from '@superset-ui/core';\n\nexport type ModifiedInfoProps = {\n  user?: Owner;\n  date: string;\n};\n\nexport const ModifiedInfo = ({ user, date }: ModifiedInfoProps) => {\n  const dateSpan = (\n    <span className=\"no-wrap\" data-test=\"audit-info-date\">\n      {date}\n    </span>\n  );\n\n  if (user) {\n    const userName = getOwnerName(user);\n    const title = t('Modified by: %s', userName);\n    return (\n      <Tooltip title={title} placement=\"bottom\">\n        {dateSpan}\n      </Tooltip>\n    );\n  }\n  return dateSpan;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, ReactNode } from 'react';\n\nimport DeleteModal from 'src/components/DeleteModal';\n\nexport type Callback = (...args: any[]) => void;\n\nexport interface ConfirmStatusChangeProps {\n  title: ReactNode;\n  description: ReactNode;\n  onConfirm: Callback;\n  children: (showConfirm: Callback) => ReactNode;\n}\n\nexport default function ConfirmStatusChange({\n  title,\n  description,\n  onConfirm,\n  children,\n}: ConfirmStatusChangeProps) {\n  const [open, setOpen] = useState(false);\n  const [currentCallbackArgs, setCurrentCallbackArgs] = useState<any[]>([]);\n\n  const showConfirm = (...callbackArgs: any[]) => {\n    // check if any args are DOM events, if so, call persist\n    callbackArgs.forEach(arg => {\n      if (!arg) {\n        return;\n      }\n      if (typeof arg.persist === 'function') {\n        arg.persist();\n      }\n      if (typeof arg.preventDefault === 'function') {\n        arg.preventDefault();\n      }\n      if (typeof arg.stopPropagation === 'function') {\n        arg.stopPropagation();\n      }\n    });\n    setOpen(true);\n    setCurrentCallbackArgs(callbackArgs);\n  };\n\n  const hide = () => {\n    setOpen(false);\n    setCurrentCallbackArgs([]);\n  };\n\n  const confirm = () => {\n    onConfirm(...currentCallbackArgs);\n    hide();\n  };\n\n  return (\n    <>\n      {children?.(showConfirm)}\n      <DeleteModal\n        description={description}\n        onConfirm={confirm}\n        onHide={hide}\n        open={open}\n        title={title}\n      />\n    </>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  getCategoricalSchemeRegistry,\n  styled,\n  SupersetTheme,\n} from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Avatar } from 'src/components';\nimport { getRandomColor } from './utils';\n\ninterface FacePileProps {\n  users: { first_name: string; last_name: string; id: number }[];\n  maxCount?: number;\n}\n\nconst colorList = getCategoricalSchemeRegistry().get()?.colors ?? [];\n\nconst customAvatarStyler = (theme: SupersetTheme) => {\n  const size = theme.gridUnit * 8;\n  return `\n  width: ${size}px;\n  height: ${size}px;\n  line-height: ${size}px;\n  font-size: ${theme.typography.sizes.s}px;`;\n};\n\nconst StyledAvatar = styled(Avatar)`\n  ${({ theme }) => customAvatarStyler(theme)}\n`;\n\n// to apply styling to the maxCount avatar\nconst StyledGroup = styled(Avatar.Group)`\n  .ant-avatar {\n    ${({ theme }) => customAvatarStyler(theme)}\n  }\n`;\n\nexport default function FacePile({ users, maxCount = 4 }: FacePileProps) {\n  return (\n    <StyledGroup maxCount={maxCount}>\n      {users.map(({ first_name, last_name, id }) => {\n        const name = `${first_name} ${last_name}`;\n        const uniqueKey = `${id}-${first_name}-${last_name}`;\n        const color = getRandomColor(uniqueKey, colorList);\n        const avatarUrl = `/api/v1/user/${id}/avatar.png`;\n        return (\n          <Tooltip key={name} title={name} placement=\"top\">\n            <StyledAvatar\n              key={name}\n              style={{\n                backgroundColor: color,\n                borderColor: color,\n              }}\n              src={avatarUrl}\n            >\n              {first_name?.[0]?.toLocaleUpperCase()}\n              {last_name?.[0]?.toLocaleUpperCase()}\n            </StyledAvatar>\n          </Tooltip>\n        );\n      })}\n    </StyledGroup>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// https://en.wikipedia.org/wiki/Linear_congruential_generator\nfunction stringAsciiPRNG(value: string, m: number) {\n  // Xn+1 = (a * Xn + c) % m\n  // 0 < a < m\n  // 0 <= c < m\n  // 0 <= X0 < m\n\n  const charCodes = [...value].map(letter => letter.charCodeAt(0));\n  const len = charCodes.length;\n\n  const a = (len % (m - 1)) + 1;\n  const c = charCodes.reduce((current, next) => current + next) % m;\n\n  let random = charCodes[0] % m;\n\n  [...new Array(len)].forEach(() => {\n    random = (a * random + c) % m;\n  });\n\n  return random;\n}\n\nexport function getRandomColor(sampleValue: string, colorList: string[]) {\n  // if no value is passed, always return transparent color for consistency\n  if (!sampleValue) return 'transparent';\n\n  // value based random color index,\n  // ensuring the same sampleValue always resolves to the same color\n  return colorList[stringAsciiPRNG(sampleValue, colorList.length)];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactElement } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetTheme, css } from '@superset-ui/core';\nimport { ReactElement } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { NotificationMethodOption } from '../types';\n\nconst StyledIcon = (theme: SupersetTheme) => css`\n  color: ${theme.colors.grayscale.light1};\n  margin-right: ${theme.gridUnit * 2}px;\n`;\n\nexport default function RecipientIcon({ type }: { type: string }) {\n  const recipientIconConfig: { icon: null | ReactElement; label: string } = {\n    icon: null,\n    label: '',\n  };\n  switch (type) {\n    case NotificationMethodOption.Email:\n      recipientIconConfig.icon = <Icons.Email css={StyledIcon} />;\n      recipientIconConfig.label = NotificationMethodOption.Email;\n      break;\n    case NotificationMethodOption.Slack:\n      recipientIconConfig.icon = <Icons.Slack css={StyledIcon} />;\n      recipientIconConfig.label = NotificationMethodOption.Slack;\n      break;\n    case NotificationMethodOption.SlackV2:\n      recipientIconConfig.icon = <Icons.Slack css={StyledIcon} />;\n      recipientIconConfig.label = NotificationMethodOption.Slack;\n      break;\n    default:\n      recipientIconConfig.icon = null;\n      recipientIconConfig.label = '';\n  }\n  return recipientIconConfig.icon ? (\n    <Tooltip title={recipientIconConfig.label} placement=\"bottom\">\n      {recipientIconConfig.icon}\n    </Tooltip>\n  ) : null;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  useEffect,\n  useState,\n  FunctionComponent,\n  MouseEventHandler,\n} from 'react';\n\nimport moment, { Moment, MomentInput } from 'moment';\nimport { t, styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n\nconst REFRESH_INTERVAL = 60000; // every minute\n\ninterface LastUpdatedProps {\n  updatedAt: MomentInput;\n  update?: MouseEventHandler<HTMLSpanElement>;\n}\nmoment.updateLocale('en', {\n  calendar: {\n    lastDay: '[Yesterday at] LTS',\n    sameDay: '[Today at] LTS',\n    nextDay: '[Tomorrow at] LTS',\n    lastWeek: '[last] dddd [at] LTS',\n    nextWeek: 'dddd [at] LTS',\n    sameElse: 'L',\n  },\n});\n\nconst TextStyles = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nconst Refresh = styled(Icons.Refresh)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  width: auto;\n  height: ${({ theme }) => theme.gridUnit * 5}px;\n  position: relative;\n  top: ${({ theme }) => theme.gridUnit}px;\n  left: ${({ theme }) => theme.gridUnit}px;\n  cursor: pointer;\n`;\n\nexport const LastUpdated: FunctionComponent<LastUpdatedProps> = ({\n  updatedAt,\n  update,\n}) => {\n  const [timeSince, setTimeSince] = useState<Moment>(moment(updatedAt));\n\n  useEffect(() => {\n    setTimeSince(() => moment(updatedAt));\n\n    // update UI every minute in case day changes\n    const interval = setInterval(() => {\n      setTimeSince(() => moment(updatedAt));\n    }, REFRESH_INTERVAL);\n\n    return () => clearInterval(interval);\n  }, [updatedAt]);\n\n  return (\n    <TextStyles>\n      {t('Last Updated %s', timeSince.isValid() ? timeSince.calendar() : '--')}\n      {update && <Refresh onClick={update} />}\n    </TextStyles>\n  );\n};\n\nexport default LastUpdated;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  t,\n  SupersetClient,\n  makeApi,\n  styled,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport moment from 'moment';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport FacePile from 'src/components/FacePile';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ListView, {\n  FilterOperator,\n  Filters,\n  ListViewProps,\n} from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport { Switch } from 'src/components/Switch';\nimport { DATETIME_WITH_TIME_ZONE } from 'src/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport RecipientIcon from 'src/features/alerts/components/RecipientIcon';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport LastUpdated from 'src/components/LastUpdated';\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated } from 'src/views/CRUD/utils';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport Owner from 'src/types/Owner';\nimport AlertReportModal from 'src/features/alerts/AlertReportModal';\nimport { AlertObject, AlertState } from 'src/features/alerts/types';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst PAGE_SIZE = 25;\n\nconst AlertStateLabel: Record<AlertState, string> = {\n  [AlertState.Success]: t('Success'),\n  [AlertState.Working]: t('Working'),\n  [AlertState.Error]: t('Error'),\n  [AlertState.Noop]: t('Not triggered'),\n  [AlertState.Grace]: t('On Grace'),\n};\n\ninterface AlertListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\nconst deleteAlerts = makeApi<number[], { message: string }>({\n  requestType: 'rison',\n  method: 'DELETE',\n  endpoint: '/api/v1/report/',\n});\n\nconst RefreshContainer = styled.div`\n  width: 100%;\n  padding: 0 ${({ theme }) => theme.gridUnit * 4}px\n    ${({ theme }) => theme.gridUnit * 3}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n`;\n\nconst StyledHeaderWithIcon = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  > *:first-child {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst HeaderExtension = extensionsRegistry.get('alertsreports.header.icon');\n\nfunction AlertList({\n  addDangerToast,\n  isReportEnabled = false,\n  user,\n  addSuccessToast,\n}: AlertListProps) {\n  const title = isReportEnabled ? t('report') : t('alert');\n  const titlePlural = isReportEnabled ? t('reports') : t('alerts');\n  const pathName = isReportEnabled ? 'Reports' : 'Alerts';\n  const initialFilters = useMemo(\n    () => [\n      {\n        id: 'type',\n        operator: FilterOperator.Equals,\n        value: isReportEnabled ? 'Report' : 'Alert',\n      },\n    ],\n    [isReportEnabled],\n  );\n  const {\n    state: {\n      loading,\n      resourceCount: alertsCount,\n      resourceCollection: alerts,\n      bulkSelectEnabled,\n      lastFetched,\n    },\n    hasPerm,\n    fetchData,\n    setResourceCollection,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n    true,\n    undefined,\n    initialFilters,\n  );\n\n  const { updateResource } = useSingleViewResource<Partial<AlertObject>>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  const [alertModalOpen, setAlertModalOpen] = useState<boolean>(false);\n  const [currentAlert, setCurrentAlert] = useState<Partial<AlertObject> | null>(\n    null,\n  );\n  const [currentAlertDeleting, setCurrentAlertDeleting] =\n    useState<AlertObject | null>(null);\n\n  // Actions\n  function handleAlertEdit(alert: AlertObject | null) {\n    setCurrentAlert(alert);\n    setAlertModalOpen(true);\n  }\n\n  const generateKey = () => `${new Date().getTime()}`;\n\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n\n  useEffect(() => {\n    if (bulkSelectEnabled && canDelete) {\n      toggleBulkSelect();\n    }\n  }, [isReportEnabled]);\n\n  const handleAlertDelete = ({ id, name }: AlertObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/report/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setCurrentAlertDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkAlertDelete = async (alertsToDelete: AlertObject[]) => {\n    try {\n      const { message } = await deleteAlerts(\n        alertsToDelete.map(({ id }) => id),\n      );\n      refreshData();\n      addSuccessToast(message);\n    } catch (e) {\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t(\n            'There was an issue deleting the selected %s: %s',\n            titlePlural,\n            errMsg,\n          ),\n        ),\n      )(e);\n    }\n  };\n\n  const initialSort = [{ id: 'name', desc: true }];\n\n  const toggleActive = useCallback(\n    (data: AlertObject, checked: boolean) => {\n      if (data?.id) {\n        const update_id = data.id;\n        const original = [...alerts];\n\n        setResourceCollection(\n          original.map(alert => {\n            if (alert?.id === data.id) {\n              return {\n                ...alert,\n                active: checked,\n              };\n            }\n\n            return alert;\n          }),\n        );\n\n        updateResource(update_id, { active: checked }, false, false)\n          .then()\n          .catch(() => setResourceCollection(original));\n      }\n    },\n    [alerts, setResourceCollection, updateResource],\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { last_state: lastState },\n          },\n        }: any) => (\n          <AlertStatusIcon\n            state={lastState}\n            isReportEnabled={isReportEnabled}\n          />\n        ),\n        accessor: 'last_state',\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_eval_dttm: lastEvalDttm },\n          },\n        }: any) =>\n          lastEvalDttm\n            ? moment.utc(lastEvalDttm).local().format(DATETIME_WITH_TIME_ZONE)\n            : '',\n        accessor: 'last_eval_dttm',\n        Header: t('Last run'),\n        size: 'lg',\n      },\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        size: 'xl',\n      },\n      {\n        Header: t('Schedule'),\n        accessor: 'crontab_humanized',\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { crontab_humanized = '', timezone },\n          },\n        }: any) => (\n          <Tooltip\n            title={`${crontab_humanized} (${timezone})`}\n            placement=\"topLeft\"\n          >\n            <span>{`${crontab_humanized} (${timezone})`}</span>\n          </Tooltip>\n        ),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { recipients },\n          },\n        }: any) =>\n          recipients.map((r: any) => (\n            <RecipientIcon key={r.id} type={r.type} />\n          )),\n        accessor: 'recipients',\n        Header: t('Notification method'),\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        id: 'owners',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          return (\n            <Switch\n              disabled={!allowEdit}\n              data-test=\"toggle-active\"\n              checked={original.active}\n              onClick={(checked: boolean) => toggleActive(original, checked)}\n              size=\"small\"\n            />\n          );\n        },\n        Header: t('Active'),\n        accessor: 'active',\n        id: 'active',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const history = useHistory();\n          const handleEdit = () => handleAlertEdit(original);\n          const handleDelete = () => setCurrentAlertDeleting(original);\n          const handleGotoExecutionLog = () =>\n            history.push(`/${original.type.toLowerCase()}/${original.id}/log`);\n\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'execution-log-action',\n                  tooltip: t('Execution log'),\n                  placement: 'bottom',\n                  icon: 'Note',\n                  onClick: handleGotoExecutionLog,\n                }\n              : null,\n            canEdit\n              ? {\n                  label: allowEdit ? 'edit-action' : 'preview-action',\n                  tooltip: allowEdit ? t('Edit') : t('View'),\n                  placement: 'bottom',\n                  icon: allowEdit ? 'Edit' : 'Binoculars',\n                  onClick: handleEdit,\n                }\n              : null,\n            allowEdit && canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => item !== null);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [canDelete, canEdit, isReportEnabled, toggleActive],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {title}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAlertEdit(null);\n      },\n    });\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select-toggle',\n    });\n  }\n\n  const emptyState = {\n    title: t('No %s yet', titlePlural),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAlertEdit(null),\n    buttonText: canCreate ? (\n      <>\n        <i className=\"fa fa-plus\" /> {title}{' '}\n      </>\n    ) : null,\n  };\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.RelationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'report',\n          'owners',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching owners values: %s', errMsg),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Status'),\n        key: 'status',\n        id: 'last_state',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: 'Any',\n        selects: [\n          {\n            label: AlertStateLabel[AlertState.Success],\n            value: AlertState.Success,\n          },\n          {\n            label: AlertStateLabel[AlertState.Working],\n            value: AlertState.Working,\n          },\n          { label: AlertStateLabel[AlertState.Error], value: AlertState.Error },\n          { label: AlertStateLabel[AlertState.Noop], value: AlertState.Noop },\n          { label: AlertStateLabel[AlertState.Grace], value: AlertState.Grace },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'report',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [],\n  );\n\n  const header = HeaderExtension ? (\n    <StyledHeaderWithIcon>\n      <div>{t('Alerts & reports')}</div>\n      <HeaderExtension />\n    </StyledHeaderWithIcon>\n  ) : (\n    t('Alerts & reports')\n  );\n\n  return (\n    <>\n      <SubMenu\n        activeChild={pathName}\n        name={header}\n        tabs={[\n          {\n            name: 'Alerts',\n            label: t('Alerts'),\n            url: '/alert/list/',\n            usesRouter: true,\n            'data-test': 'alert-list',\n          },\n          {\n            name: 'Reports',\n            label: t('Reports'),\n            url: '/report/list/',\n            usesRouter: true,\n            'data-test': 'report-list',\n          },\n        ]}\n        buttons={subMenuButtons}\n      >\n        <RefreshContainer>\n          <LastUpdated updatedAt={lastFetched} update={() => refreshData()} />\n        </RefreshContainer>\n      </SubMenu>\n      <AlertReportModal\n        alert={currentAlert}\n        addDangerToast={addDangerToast}\n        layer={currentAlert}\n        onHide={() => {\n          setAlertModalOpen(false);\n          setCurrentAlert(null);\n          refreshData();\n        }}\n        show={alertModalOpen}\n        isReport={isReportEnabled}\n        key={currentAlert?.id || generateKey()}\n      />\n      {currentAlertDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete %s.',\n            currentAlertDeleting.name,\n          )}\n          onConfirm={() => {\n            if (currentAlertDeleting) {\n              handleAlertDelete(currentAlertDeleting);\n            }\n          }}\n          onHide={() => setCurrentAlertDeleting(null)}\n          open\n          title={t('Delete %s?', title)}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected %s?',\n          titlePlural,\n        )}\n        onConfirm={handleBulkAlertDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n          return (\n            <ListView<AlertObject>\n              className=\"alerts-list-view\"\n              columns={columns}\n              count={alertsCount}\n              data={alerts}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              refreshData={refreshData}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AlertList);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n"],"names":["ModifiedInfo","user","date","dateSpan","_jsx","className","children","userName","getOwnerName","title","t","Tooltip","placement","ConfirmStatusChange","description","onConfirm","open","setOpen","useState","currentCallbackArgs","setCurrentCallbackArgs","hide","_jsxs","_Fragment","showConfirm","callbackArgs","forEach","arg","persist","preventDefault","stopPropagation","DeleteModal","confirm","onHide","colorList","_getCategoricalScheme","_getCategoricalScheme2","getCategoricalSchemeRegistry","get","colors","customAvatarStyler","theme","size","gridUnit","typography","sizes","s","StyledAvatar","styled","Avatar","StyledGroup","Group","FacePile","users","maxCount","map","first_name","last_name","id","_first_name$","_last_name$","name","color","sampleValue","value","m","charCodes","letter","charCodeAt","len","length","a","c","reduce","current","next","random","Array","stringAsciiPRNG","getRandomColor","avatarUrl","style","backgroundColor","borderColor","src","toLocaleUpperCase","StyledActions","span","primary","base","ActionWrapper","grayscale","ActionsBar","actions","action","index","ActionIcon","Icons","icon","tooltip","label","role","tabIndex","onClick","StyledIcon","css","light1","RecipientIcon","type","recipientIconConfig","NotificationMethodOption","Email","Slack","SlackV2","moment","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","TextStyles","Refresh","LastUpdated","updatedAt","update","timeSince","setTimeSince","useEffect","interval","setInterval","clearInterval","isValid","extensionsRegistry","getExtensionsRegistry","AlertStateLabel","AlertState","Success","Working","Error","Noop","Grace","deleteAlerts","makeApi","requestType","method","endpoint","RefreshContainer","div","light5","StyledHeaderWithIcon","HeaderExtension","withToasts","addDangerToast","isReportEnabled","addSuccessToast","titlePlural","pathName","initialFilters","useMemo","operator","FilterOperator","Equals","state","loading","resourceCount","alertsCount","resourceCollection","alerts","bulkSelectEnabled","lastFetched","hasPerm","fetchData","setResourceCollection","refreshData","toggleBulkSelect","useListViewResource","undefined","updateResource","useSingleViewResource","alertModalOpen","setAlertModalOpen","currentAlert","setCurrentAlert","currentAlertDeleting","setCurrentAlertDeleting","handleAlertEdit","alert","canEdit","canDelete","canCreate","initialSort","desc","toggleActive","useCallback","data","checked","update_id","original","active","then","catch","columns","Cell","row","last_state","lastState","AlertStatusIcon","accessor","disableSortBy","last_eval_dttm","lastEvalDttm","local","format","DATETIME_WITH_TIME_ZONE","Header","crontab_humanized","timezone","recipients","r","owners","changed_on_delta_humanized","changedOn","changed_by","changedBy","allowEdit","o","includes","userId","isUserAdmin","Switch","disabled","history","useHistory","handleGotoExecutionLog","push","toLowerCase","handleEdit","handleDelete","filter","item","hidden","QueryObjectColumns","ChangedBy","subMenuButtons","buttonStyle","emptyState","image","buttonAction","buttonText","filters","key","input","Contains","RelationManyMany","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","selects","RelationOneMany","header","SubMenu","activeChild","tabs","url","usesRouter","buttons","AlertReportModal","layer","show","isReport","Date","getTime","handleAlertDelete","SupersetClient","delete","async","alertsToDelete","message","e","confirmDelete","bulkActions","onSelect","ListView","count","disableBulkSelect","pageSize","owner"],"sourceRoot":""}