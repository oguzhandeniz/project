{"version":3,"file":"03c383f103ff240d67dc.chunk.js","mappings":"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","sources":["webpack://superset/./src/dashboard/util/propShapes.jsx","webpack://superset/./src/components/Checkbox/CheckboxIcons.tsx","webpack://superset/./src/components/ModalTrigger/index.tsx","webpack://superset/./src/dashboard/util/backgroundStyleOptions.ts","webpack://superset/./src/dashboard/util/headerStyleOptions.ts","webpack://superset/./src/explore/components/ControlHeader.tsx","webpack://superset/./src/explore/components/controls/ColorSchemeControl/ColorSchemeLabel.tsx","webpack://superset/./src/explore/components/controls/ColorSchemeControl/index.tsx","webpack://superset/./src/features/dashboards/DashboardCard.tsx","webpack://superset/./src/features/dashboards/types.ts","webpack://superset/./src/pages/DashboardList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport componentTypes from './componentTypes';\nimport backgroundStyleOptions from './backgroundStyleOptions';\nimport headerStyleOptions from './headerStyleOptions';\n\nexport const componentShape = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(Object.values(componentTypes)).isRequired,\n  parents: PropTypes.arrayOf(PropTypes.string),\n  children: PropTypes.arrayOf(PropTypes.string),\n  meta: PropTypes.shape({\n    // Dimensions\n    width: PropTypes.number,\n    height: PropTypes.number,\n\n    // Header\n    headerSize: PropTypes.oneOf(headerStyleOptions.map(opt => opt.value)),\n\n    // Row\n    background: PropTypes.oneOf(backgroundStyleOptions.map(opt => opt.value)),\n\n    // Chart\n    chartId: PropTypes.number,\n  }),\n});\n\nexport const chartPropShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  chartAlert: PropTypes.string,\n  chartStatus: PropTypes.string,\n  chartUpdateEndTime: PropTypes.number,\n  chartUpdateStartTime: PropTypes.number,\n  latestQueryFormData: PropTypes.object,\n  queryController: PropTypes.shape({ abort: PropTypes.func }),\n  queriesResponse: PropTypes.arrayOf(PropTypes.object),\n  triggerQuery: PropTypes.bool,\n  lastRendered: PropTypes.number,\n});\n\nexport const slicePropShape = PropTypes.shape({\n  slice_id: PropTypes.number.isRequired,\n  slice_url: PropTypes.string.isRequired,\n  slice_name: PropTypes.string.isRequired,\n  datasource: PropTypes.string,\n  datasource_name: PropTypes.string,\n  datasource_link: PropTypes.string,\n  changed_on: PropTypes.number.isRequired,\n  modified: PropTypes.string,\n  viz_type: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  description_markeddown: PropTypes.string,\n  owners: PropTypes.arrayOf(PropTypes.string),\n});\n\nexport const dashboardFilterPropShape = PropTypes.shape({\n  chartId: PropTypes.number.isRequired,\n  componentId: PropTypes.string.isRequired,\n  filterName: PropTypes.string.isRequired,\n  datasourceId: PropTypes.string.isRequired,\n  directPathToFilter: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isDateFilter: PropTypes.bool.isRequired,\n  isInstantFilter: PropTypes.bool.isRequired,\n  columns: PropTypes.object,\n  labels: PropTypes.object,\n  scopes: PropTypes.object,\n});\n\nexport const dashboardStatePropShape = PropTypes.shape({\n  sliceIds: PropTypes.arrayOf(PropTypes.number),\n  expandedSlices: PropTypes.object,\n  editMode: PropTypes.bool,\n  isPublished: PropTypes.bool,\n  colorNamespace: PropTypes.string,\n  colorScheme: PropTypes.string,\n  updatedColorScheme: PropTypes.bool,\n  hasUnsavedChanges: PropTypes.bool,\n});\n\nexport const dashboardInfoPropShape = PropTypes.shape({\n  id: PropTypes.number,\n  metadata: PropTypes.object,\n  slug: PropTypes.string,\n  dash_edit_perm: PropTypes.bool,\n  dash_save_perm: PropTypes.bool,\n  common: PropTypes.object,\n  userId: PropTypes.string,\n});\n\n/* eslint-disable-next-line  no-undef */\nconst lazyFunction = f => () => f().apply(this, arguments);\n\nconst leafType = PropTypes.shape({\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  label: PropTypes.string.isRequired,\n});\n\nconst parentShape = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  label: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.shape(lazyFunction(() => parentShape)),\n      leafType,\n    ]),\n  ),\n};\n\nexport const filterScopeSelectorTreeNodePropShape = PropTypes.oneOfType([\n  PropTypes.shape(parentShape),\n  leafType,\n]);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useTheme } from '@superset-ui/core';\n\nexport const CheckboxChecked = () => {\n  const theme = useTheme();\n  return (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16 0H2C0.89 0 0 0.9 0 2V16C0 17.1 0.89 18 2 18H16C17.11 18 18 17.1 18 16V2C18 0.9 17.11 0 16 0Z\"\n        fill={theme.colors.primary.base}\n      />\n      <path\n        d=\"M7 14L2 9L3.41 7.59L7 11.17L14.59 3.58L16 5L7 14Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport const CheckboxHalfChecked = () => {\n  const theme = useTheme();\n  return (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16 0H2C0.9 0 0 0.9 0 2V16C0 17.1 0.9 18 2 18H16C17.1 18 18 17.1 18 16V2C18 0.9 17.1 0 16 0Z\"\n        fill={theme.colors.grayscale.light1}\n      />\n      <path d=\"M14 10H4V8H14V10Z\" fill=\"white\" />\n    </svg>\n  );\n};\n\nexport const CheckboxUnchecked = () => {\n  const theme = useTheme();\n  return (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16 0H2C0.9 0 0 0.9 0 2V16C0 17.1 0.9 18 2 18H16C17.1 18 18 17.1 18 16V2C18 0.9 17.1 0 16 0Z\"\n        fill={theme.colors.grayscale.light2}\n      />\n      <path d=\"M16 2V16H2V2H16V2Z\" fill=\"white\" />\n    </svg>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { forwardRef, useState, ReactNode, MouseEvent } from 'react';\n\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\n\ninterface ModalTriggerProps {\n  dialogClassName?: string;\n  triggerNode: ReactNode;\n  modalTitle?: string;\n  modalBody?: ReactNode; // not required because it can be generated by beforeOpen\n  modalFooter?: ReactNode;\n  beforeOpen?: Function;\n  onExit?: Function;\n  isButton?: boolean;\n  className?: string;\n  tooltip?: string;\n  width?: string;\n  maxWidth?: string;\n  responsive?: boolean;\n  resizable?: boolean;\n  resizableConfig?: any;\n  draggable?: boolean;\n  draggableConfig?: any;\n  destroyOnClose?: boolean;\n}\n\nexport interface ModalTriggerRef {\n  current: {\n    close: Function;\n    open: Function;\n    showModal: boolean;\n  };\n}\n\nconst ModalTrigger = forwardRef(\n  (props: ModalTriggerProps, ref: ModalTriggerRef | null) => {\n    const [showModal, setShowModal] = useState(false);\n    const {\n      beforeOpen = () => {},\n      onExit = () => {},\n      isButton = false,\n      resizable = false,\n      draggable = false,\n      className = '',\n      tooltip,\n      modalFooter,\n      triggerNode,\n      destroyOnClose = true,\n      modalBody,\n      draggableConfig = {},\n      resizableConfig = {},\n      modalTitle,\n      responsive,\n      width,\n      maxWidth,\n    } = props;\n\n    const close = () => {\n      setShowModal(false);\n      onExit?.();\n    };\n\n    const open = (e: MouseEvent) => {\n      e.preventDefault();\n      beforeOpen?.();\n      setShowModal(true);\n    };\n\n    if (ref) {\n      ref.current = { close, open, showModal }; // eslint-disable-line\n    }\n\n    /* eslint-disable jsx-a11y/interactive-supports-focus */\n    return (\n      <>\n        {isButton && (\n          <Button\n            className=\"modal-trigger\"\n            data-test=\"btn-modal-trigger\"\n            tooltip={tooltip}\n            onClick={open}\n          >\n            {triggerNode}\n          </Button>\n        )}\n        {!isButton && (\n          <span data-test=\"span-modal-trigger\" onClick={open} role=\"button\">\n            {triggerNode}\n          </span>\n        )}\n        <Modal\n          className={className}\n          show={showModal}\n          onHide={close}\n          title={modalTitle}\n          footer={modalFooter}\n          hideFooter={!modalFooter}\n          width={width}\n          maxWidth={maxWidth}\n          responsive={responsive}\n          resizable={resizable}\n          resizableConfig={resizableConfig}\n          draggable={draggable}\n          draggableConfig={draggableConfig}\n          destroyOnClose={destroyOnClose}\n        >\n          {modalBody}\n        </Modal>\n      </>\n    );\n  },\n);\n\nexport default ModalTrigger;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { BACKGROUND_TRANSPARENT, BACKGROUND_WHITE } from './constants';\n\nexport default [\n  {\n    value: BACKGROUND_TRANSPARENT,\n    label: t('Transparent'),\n    className: 'background--transparent',\n  },\n  {\n    value: BACKGROUND_WHITE,\n    label: t('White'),\n    className: 'background--white',\n  },\n];\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { SMALL_HEADER, MEDIUM_HEADER, LARGE_HEADER } from './constants';\n\nexport default [\n  {\n    value: SMALL_HEADER,\n    label: t('Small'),\n    className: 'header-style-option header-small',\n  },\n  {\n    value: MEDIUM_HEADER,\n    label: t('Medium'),\n    className: 'header-style-option header-medium',\n  },\n  {\n    value: LARGE_HEADER,\n    label: t('Large'),\n    className: 'header-style-option header-large',\n  },\n];\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FC, ReactNode, useMemo, useRef } from 'react';\nimport { t, css, useTheme, SupersetTheme } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FormLabel } from 'src/components/Form';\nimport Icons from 'src/components/Icons';\n\ntype ValidationError = string;\n\nexport type ControlHeaderProps = {\n  name?: string;\n  label?: ReactNode;\n  description?: ReactNode;\n  validationErrors?: ValidationError[];\n  renderTrigger?: boolean;\n  rightNode?: ReactNode;\n  leftNode?: ReactNode;\n  onClick?: () => void;\n  hovered?: boolean;\n  tooltipOnClick?: () => void;\n  warning?: string;\n  danger?: string;\n};\n\nconst iconStyles = css`\n  &.anticon {\n    font-size: unset;\n    .anticon {\n      line-height: unset;\n      vertical-align: unset;\n    }\n  }\n`;\n\nconst ControlHeader: FC<ControlHeaderProps> = ({\n  name,\n  label,\n  description,\n  validationErrors = [],\n  renderTrigger = false,\n  rightNode,\n  leftNode,\n  onClick,\n  hovered = false,\n  tooltipOnClick = () => {},\n  warning,\n  danger,\n}) => {\n  const { gridUnit, colors } = useTheme();\n  const hasHadNoErrors = useRef(false);\n  const labelColor = useMemo(() => {\n    if (!validationErrors.length) {\n      hasHadNoErrors.current = true;\n    }\n\n    if (hasHadNoErrors.current) {\n      if (validationErrors.length) {\n        return colors.error.base;\n      }\n\n      return 'unset';\n    }\n\n    return colors.alert.base;\n  }, [colors.error.base, colors.alert.base, validationErrors.length]);\n\n  if (!label) {\n    return null;\n  }\n\n  const renderOptionalIcons = () => {\n    if (!hovered) {\n      return null;\n    }\n\n    return (\n      <span\n        css={() => css`\n          position: absolute;\n          top: 50%;\n          right: 0;\n          padding-left: ${gridUnit}px;\n          transform: translate(100%, -50%);\n          white-space: nowrap;\n        `}\n      >\n        {description && (\n          <span>\n            <Tooltip\n              id=\"description-tooltip\"\n              title={description}\n              placement=\"top\"\n            >\n              <Icons.InfoCircleOutlined\n                css={iconStyles}\n                onClick={tooltipOnClick}\n              />\n            </Tooltip>{' '}\n          </span>\n        )}\n        {renderTrigger && (\n          <span>\n            <InfoTooltipWithTrigger\n              label={t('bolt')}\n              tooltip={t('Changing this control takes effect instantly')}\n              placement=\"top\"\n              icon=\"bolt\"\n            />{' '}\n          </span>\n        )}\n      </span>\n    );\n  };\n\n  return (\n    <div className=\"ControlHeader\" data-test={`${name}-header`}>\n      <div className=\"pull-left\">\n        <FormLabel\n          css={(theme: SupersetTheme) => css`\n            margin-bottom: ${theme.gridUnit * 0.5}px;\n            position: relative;\n          `}\n        >\n          {leftNode && <span>{leftNode}</span>}\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={onClick}\n            style={{ cursor: onClick ? 'pointer' : '' }}\n          >\n            {label}\n          </span>{' '}\n          {warning && (\n            <span>\n              <Tooltip id=\"error-tooltip\" placement=\"top\" title={warning}>\n                <Icons.AlertSolid iconColor={colors.alert.base} iconSize=\"s\" />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {danger && (\n            <span>\n              <Tooltip id=\"error-tooltip\" placement=\"top\" title={danger}>\n                <Icons.ErrorSolid iconColor={colors.error.base} iconSize=\"s\" />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {validationErrors?.length > 0 && (\n            <span data-test=\"error-tooltip\">\n              <Tooltip\n                id=\"error-tooltip\"\n                placement=\"top\"\n                title={validationErrors?.join(' ')}\n              >\n                <Icons.ExclamationCircleOutlined\n                  css={css`\n                    ${iconStyles};\n                    color: ${labelColor};\n                  `}\n                />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {renderOptionalIcons()}\n        </FormLabel>\n      </div>\n      {rightNode && <div className=\"pull-right\">{rightNode}</div>}\n      <div className=\"clearfix\" />\n    </div>\n  );\n};\n\nexport default ControlHeader;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { css, SupersetTheme } from '@superset-ui/core';\nimport { useRef, useState } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\ntype ColorSchemeLabelProps = {\n  colors: string[];\n  id: string;\n  label: string;\n};\n\nexport default function ColorSchemeLabel(props: ColorSchemeLabelProps) {\n  const { id, label, colors } = props;\n  const [showTooltip, setShowTooltip] = useState<boolean>(false);\n  const labelNameRef = useRef<HTMLElement>(null);\n  const labelsColorRef = useRef<HTMLElement>(null);\n  const handleShowTooltip = () => {\n    const labelNameElement = labelNameRef.current;\n    const labelsColorElement = labelsColorRef.current;\n    if (\n      labelNameElement &&\n      labelsColorElement &&\n      (labelNameElement.scrollWidth > labelNameElement.offsetWidth ||\n        labelNameElement.scrollHeight > labelNameElement.offsetHeight ||\n        labelsColorElement.scrollWidth > labelsColorElement.offsetWidth ||\n        labelsColorElement.scrollHeight > labelsColorElement.offsetHeight)\n    ) {\n      setShowTooltip(true);\n    }\n  };\n  const handleHideTooltip = () => {\n    setShowTooltip(false);\n  };\n\n  const colorsList = () =>\n    colors.map((color: string, i: number) => (\n      <span\n        data-test=\"color\"\n        key={`${id}-${i}`}\n        css={(theme: { gridUnit: number }) => css`\n          padding-left: ${theme.gridUnit / 2}px;\n          :before {\n            content: '';\n            display: inline-block;\n            background-color: ${color};\n            border: 1px solid ${color === 'white' ? 'black' : color};\n            width: 9px;\n            height: 10px;\n          }\n        `}\n      />\n    ));\n\n  const tooltipContent = () => (\n    <>\n      <span>{label}</span>\n      <div>{colorsList()}</div>\n    </>\n  );\n\n  return (\n    <Tooltip\n      data-testid=\"tooltip\"\n      overlayClassName=\"color-scheme-tooltip\"\n      title={tooltipContent}\n      key={id}\n      visible={showTooltip}\n    >\n      <span\n        className=\"color-scheme-option\"\n        onMouseEnter={handleShowTooltip}\n        onMouseLeave={handleHideTooltip}\n        css={css`\n          display: flex;\n          align-items: center;\n          justify-content: flex-start;\n        `}\n        data-test={id}\n      >\n        <span\n          className=\"color-scheme-label\"\n          ref={labelNameRef}\n          css={(theme: SupersetTheme) => css`\n            min-width: 125px;\n            padding-right: ${theme.gridUnit * 2}px;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            white-space: nowrap;\n          `}\n        >\n          {label}\n        </span>\n        <span\n          ref={labelsColorRef}\n          css={(theme: SupersetTheme) => css`\n            flex: 100%;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            white-space: nowrap;\n            padding-right: ${theme.gridUnit}px;\n          `}\n        >\n          {colorsList()}\n        </span>\n      </span>\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, ReactNode } from 'react';\n\nimport {\n  css,\n  ColorScheme,\n  ColorSchemeGroup,\n  SequentialScheme,\n  styled,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport AntdSelect from 'antd/lib/select';\nimport { isFunction, sortBy } from 'lodash';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { SelectOptionsType } from 'src/components/Select/types';\nimport { StyledSelect } from 'src/components/Select/styles';\nimport { handleFilterOptionHelper } from 'src/components/Select/utils';\nimport ColorSchemeLabel from './ColorSchemeLabel';\n\nconst { Option, OptGroup } = AntdSelect;\n\nexport type OptionData = SelectOptionsType[number]['options'][number];\n\nexport interface ColorSchemes {\n  [key: string]: ColorScheme;\n}\n\nexport interface ColorSchemeControlProps {\n  hasCustomLabelsColor: boolean;\n  dashboardId?: number;\n  label: string;\n  name: string;\n  onChange?: (value: string) => void;\n  value: string;\n  clearable: boolean;\n  defaultScheme?: string;\n  choices: string[][] | (() => string[][]);\n  schemes: ColorSchemes | (() => ColorSchemes);\n  isLinear: boolean;\n}\n\nconst StyledAlert = styled(Icons.AlertSolid)`\n  color: ${({ theme }) => theme.colors.alert.base};\n`;\n\nconst CUSTOM_LABEL_ALERT = t(\n  `This color scheme is being overridden by custom label colors.\n    Check the JSON metadata in the Advanced settings`,\n);\n\nconst DASHBOARD_ALERT = t(\n  `The color scheme is determined by the related dashboard.\n        Edit the color scheme in the dashboard properties.`,\n);\n\nconst Label = ({\n  label,\n  hasCustomLabelsColor,\n  dashboardId,\n}: Pick<\n  ColorSchemeControlProps,\n  'label' | 'hasCustomLabelsColor' | 'dashboardId'\n>) => {\n  if (hasCustomLabelsColor || dashboardId) {\n    const alertTitle = hasCustomLabelsColor\n      ? CUSTOM_LABEL_ALERT\n      : DASHBOARD_ALERT;\n    return (\n      <>\n        {label}{' '}\n        <Tooltip title={alertTitle}>\n          <StyledAlert iconSize=\"s\" />\n        </Tooltip>\n      </>\n    );\n  }\n  return <>{label}</>;\n};\n\nconst ColorSchemeControl = ({\n  hasCustomLabelsColor = false,\n  dashboardId,\n  label = t('Color scheme'),\n  onChange = () => {},\n  value,\n  clearable = false,\n  defaultScheme,\n  choices = [],\n  schemes = {},\n  isLinear,\n  ...rest\n}: ColorSchemeControlProps) => {\n  const theme = useTheme();\n  const currentScheme = useMemo(() => {\n    if (dashboardId) {\n      return 'dashboard';\n    }\n    let result = value || defaultScheme;\n    if (result === 'SUPERSET_DEFAULT') {\n      const schemesObject = isFunction(schemes) ? schemes() : schemes;\n      result = schemesObject?.SUPERSET_DEFAULT?.id;\n    }\n    return result;\n  }, [dashboardId, defaultScheme, schemes, value]);\n\n  const options = useMemo(() => {\n    if (dashboardId) {\n      return [\n        <Option value=\"dashboard\" label={t('dashboard')} key=\"dashboard\">\n          <Tooltip title={DASHBOARD_ALERT}>{t('Dashboard scheme')}</Tooltip>\n        </Option>,\n      ];\n    }\n    const schemesObject = isFunction(schemes) ? schemes() : schemes;\n    const controlChoices = isFunction(choices) ? choices() : choices;\n    const allColorOptions: string[] = [];\n    const filteredColorOptions = controlChoices.filter(o => {\n      const option = o[0];\n      const isValidColorOption =\n        option !== 'SUPERSET_DEFAULT' && !allColorOptions.includes(option);\n      allColorOptions.push(option);\n      return isValidColorOption;\n    });\n\n    const groups = filteredColorOptions.reduce(\n      (acc, [value]) => {\n        const currentScheme = schemesObject[value];\n\n        // For categorical scheme, display all the colors\n        // For sequential scheme, show 10 or interpolate to 10.\n        // Sequential schemes usually have at most 10 colors.\n        let colors: string[] = [];\n        if (currentScheme) {\n          colors = isLinear\n            ? (currentScheme as SequentialScheme).getColors(10)\n            : currentScheme.colors;\n        }\n        const option = {\n          customLabel: (\n            <ColorSchemeLabel\n              id={currentScheme.id}\n              label={currentScheme.label}\n              colors={colors}\n            />\n          ) as ReactNode,\n          label: schemesObject?.[value]?.label || value,\n          value,\n        };\n        acc[currentScheme.group ?? ColorSchemeGroup.Other].options.push(option);\n        return acc;\n      },\n      {\n        [ColorSchemeGroup.Custom]: {\n          title: ColorSchemeGroup.Custom,\n          label: t('Custom color palettes'),\n          options: [] as OptionData,\n        },\n        [ColorSchemeGroup.Featured]: {\n          title: ColorSchemeGroup.Featured,\n          label: t('Featured color palettes'),\n          options: [] as OptionData,\n        },\n        [ColorSchemeGroup.Other]: {\n          title: ColorSchemeGroup.Other,\n          label: t('Other color palettes'),\n          options: [] as OptionData,\n        },\n      },\n    );\n    const nonEmptyGroups = Object.values(groups)\n      .filter(group => group.options.length > 0)\n      .map(group => ({\n        ...group,\n        options: sortBy(group.options, opt => opt.label),\n      }));\n\n    // if there are no featured or custom color schemes, return the ungrouped options\n    if (\n      nonEmptyGroups.length === 1 &&\n      nonEmptyGroups[0].title === ColorSchemeGroup.Other\n    ) {\n      return nonEmptyGroups[0].options.map((opt, index) => (\n        <Option value={opt.value} label={opt.label} key={index}>\n          {opt.customLabel}\n        </Option>\n      ));\n    }\n    return nonEmptyGroups.map((group, groupIndex) => (\n      <OptGroup label={group.label} key={groupIndex}>\n        {group.options.map((opt, optIndex) => (\n          <Option\n            value={opt.value}\n            label={opt.label}\n            key={`${groupIndex}-${optIndex}`}\n          >\n            {opt.customLabel}\n          </Option>\n        ))}\n      </OptGroup>\n    ));\n  }, [choices, dashboardId, isLinear, schemes]);\n\n  // We can't pass on change directly because it receives a second\n  // parameter and it would be interpreted as the error parameter\n  const handleOnChange = (value: string) => onChange(value);\n\n  return (\n    <>\n      <ControlHeader\n        {...rest}\n        label={\n          <Label\n            label={label}\n            hasCustomLabelsColor={hasCustomLabelsColor}\n            dashboardId={dashboardId}\n          />\n        }\n      />\n      <StyledSelect\n        css={css`\n          width: 100%;\n          & .ant-select-item.ant-select-item-group {\n            padding-left: ${theme.gridUnit}px;\n            font-size: ${theme.typography.sizes.m}px;\n          }\n          & .ant-select-item-option-grouped {\n            padding-left: ${theme.gridUnit * 3}px;\n          }\n        `}\n        aria-label={t('Select color scheme')}\n        allowClear={clearable}\n        disabled={!!dashboardId}\n        onChange={handleOnChange}\n        placeholder={t('Select scheme')}\n        value={currentScheme}\n        getPopupContainer={triggerNode => triggerNode.parentNode}\n        showSearch\n        filterOption={(search, option) =>\n          handleFilterOptionHelper(\n            search,\n            option as OptionData,\n            ['label', 'value'],\n            true,\n          )\n        }\n      >\n        {options}\n      </StyledSelect>\n    </>\n  );\n};\n\nexport default ColorSchemeControl;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  isFeatureEnabled,\n  FeatureFlag,\n  t,\n  useTheme,\n  SupersetClient,\n} from '@superset-ui/core';\nimport { CardStyles } from 'src/views/CRUD/utils';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport ListViewCard from 'src/components/ListViewCard';\nimport Icons from 'src/components/Icons';\nimport Label from 'src/components/Label';\nimport FacePile from 'src/components/FacePile';\nimport FaveStar from 'src/components/FaveStar';\nimport { Dashboard } from 'src/views/CRUD/types';\n\ninterface DashboardCardProps {\n  isChart?: boolean;\n  dashboard: Dashboard;\n  hasPerm: (name: string) => boolean;\n  bulkSelectEnabled: boolean;\n  loading: boolean;\n  openDashboardEditModal?: (d: Dashboard) => void;\n  saveFavoriteStatus: (id: number, isStarred: boolean) => void;\n  favoriteStatus: boolean;\n  userId?: string | number;\n  showThumbnails?: boolean;\n  handleBulkDashboardExport: (dashboardsToExport: Dashboard[]) => void;\n  onDelete: (dashboard: Dashboard) => void;\n}\n\nfunction DashboardCard({\n  dashboard,\n  hasPerm,\n  bulkSelectEnabled,\n  userId,\n  openDashboardEditModal,\n  favoriteStatus,\n  saveFavoriteStatus,\n  showThumbnails,\n  handleBulkDashboardExport,\n  onDelete,\n}: DashboardCardProps) {\n  const history = useHistory();\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n\n  const theme = useTheme();\n\n  const [thumbnailUrl, setThumbnailUrl] = useState<string | null>(null);\n  const [fetchingThumbnail, setFetchingThumbnail] = useState<boolean>(false);\n\n  useEffect(() => {\n    // fetch thumbnail only if it's not already fetched\n    if (\n      !fetchingThumbnail &&\n      dashboard.id &&\n      (thumbnailUrl === undefined || thumbnailUrl === null) &&\n      isFeatureEnabled(FeatureFlag.Thumbnails)\n    ) {\n      // fetch thumbnail\n      if (dashboard.thumbnail_url) {\n        // set to empty string if null so that we don't\n        // keep fetching the thumbnail\n        setThumbnailUrl(dashboard.thumbnail_url || '');\n        return;\n      }\n      setFetchingThumbnail(true);\n      SupersetClient.get({\n        endpoint: `/api/v1/dashboard/${dashboard.id}`,\n      }).then(({ json = {} }) => {\n        setThumbnailUrl(json.thumbnail_url || '');\n        setFetchingThumbnail(false);\n      });\n    }\n  }, [dashboard, thumbnailUrl]);\n\n  const menu = (\n    <Menu>\n      {canEdit && openDashboardEditModal && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={() => openDashboardEditModal?.(dashboard)}\n            data-test=\"dashboard-card-option-edit-button\"\n          >\n            <Icons.EditAlt iconSize=\"l\" data-test=\"edit-alt\" /> {t('Edit')}\n          </div>\n        </Menu.Item>\n      )}\n      {canExport && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => handleBulkDashboardExport([dashboard])}\n            className=\"action-button\"\n            data-test=\"dashboard-card-option-export-button\"\n          >\n            <Icons.Share iconSize=\"l\" /> {t('Export')}\n          </div>\n        </Menu.Item>\n      )}\n      {canDelete && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={() => onDelete(dashboard)}\n            data-test=\"dashboard-card-option-delete-button\"\n          >\n            <Icons.Trash iconSize=\"l\" /> {t('Delete')}\n          </div>\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n  return (\n    <CardStyles\n      onClick={() => {\n        if (!bulkSelectEnabled) {\n          history.push(dashboard.url);\n        }\n      }}\n    >\n      <ListViewCard\n        loading={dashboard.loading || false}\n        title={dashboard.dashboard_title}\n        certifiedBy={dashboard.certified_by}\n        certificationDetails={dashboard.certification_details}\n        titleRight={\n          <Label>{dashboard.published ? t('published') : t('draft')}</Label>\n        }\n        cover={\n          !isFeatureEnabled(FeatureFlag.Thumbnails) || !showThumbnails ? (\n            <></>\n          ) : null\n        }\n        url={bulkSelectEnabled ? undefined : dashboard.url}\n        linkComponent={Link}\n        imgURL={dashboard.thumbnail_url}\n        imgFallbackURL=\"/static/assets/images/dashboard-card-fallback.svg\"\n        description={t('Modified %s', dashboard.changed_on_delta_humanized)}\n        coverLeft={<FacePile users={dashboard.owners || []} />}\n        actions={\n          <ListViewCard.Actions\n            onClick={e => {\n              e.stopPropagation();\n              e.preventDefault();\n            }}\n          >\n            {userId && (\n              <FaveStar\n                itemId={dashboard.id}\n                saveFaveStar={saveFavoriteStatus}\n                isStarred={favoriteStatus}\n              />\n            )}\n            <AntdDropdown overlay={menu}>\n              <Icons.MoreVert iconColor={theme.colors.grayscale.base} />\n            </AntdDropdown>\n          </ListViewCard.Actions>\n        }\n      />\n    </CardStyles>\n  );\n}\n\nexport default DashboardCard;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport type DashboardObject = {\n  dashboard_title: string;\n  description?: string;\n  css?: string;\n  slug?: string;\n  position?: string;\n  metadata?: string;\n};\n\nexport enum DashboardStatus {\n  PUBLISHED = 'published',\n  DRAFT = 'draft',\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  isFeatureEnabled,\n  FeatureFlag,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { useState, useMemo, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport rison from 'rison';\nimport {\n  createFetchRelated,\n  createErrorHandler,\n  handleDashboardDelete,\n} from 'src/views/CRUD/utils';\nimport { useListViewResource, useFavoriteStatus } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { TagsList } from 'src/components/Tags';\nimport handleResourceExport from 'src/utils/export';\nimport Loading from 'src/components/Loading';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport ListView, {\n  ListViewProps,\n  Filter,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport { dangerouslyGetItemDoNotUse } from 'src/utils/localStorageHelpers';\nimport Owner from 'src/types/Owner';\nimport Tag from 'src/types/TagType';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport FacePile from 'src/components/FacePile';\nimport Icons from 'src/components/Icons';\nimport DeleteModal from 'src/components/DeleteModal';\nimport FaveStar from 'src/components/FaveStar';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ImportModelsModal from 'src/components/ImportModal/index';\n\nimport Dashboard from 'src/dashboard/containers/Dashboard';\nimport {\n  Dashboard as CRUDDashboard,\n  QueryObjectColumns,\n} from 'src/views/CRUD/types';\nimport CertifiedBadge from 'src/components/CertifiedBadge';\nimport { loadTags } from 'src/components/Tags/utils';\nimport DashboardCard from 'src/features/dashboards/DashboardCard';\nimport { DashboardStatus } from 'src/features/dashboards/types';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { findPermission } from 'src/utils/findPermission';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the dashboards. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more dashboards that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\ninterface DashboardListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nexport interface Dashboard {\n  changed_by_name: string;\n  changed_on_delta_humanized: string;\n  changed_by: string;\n  dashboard_title: string;\n  id: number;\n  published: boolean;\n  url: string;\n  thumbnail_url: string;\n  owners: Owner[];\n  tags: Tag[];\n  created_by: object;\n}\n\nconst Actions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nconst DASHBOARD_COLUMNS_TO_FETCH = [\n  'id',\n  'dashboard_title',\n  'published',\n  'url',\n  'slug',\n  'changed_by',\n  'changed_on_delta_humanized',\n  'owners.id',\n  'owners.first_name',\n  'owners.last_name',\n  'owners',\n  'tags.id',\n  'tags.name',\n  'tags.type',\n  'status',\n  'certified_by',\n  'certification_details',\n  'changed_on',\n];\n\nfunction DashboardList(props: DashboardListProps) {\n  const { addDangerToast, addSuccessToast, user } = props;\n\n  const { roles } = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const canReadTag = findPermission('can_read', 'Tag', roles);\n\n  const {\n    state: {\n      loading,\n      resourceCount: dashboardCount,\n      resourceCollection: dashboards,\n      bulkSelectEnabled,\n    },\n    setResourceCollection: setDashboards,\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Dashboard>(\n    'dashboard',\n    t('dashboard'),\n    addDangerToast,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    DASHBOARD_COLUMNS_TO_FETCH,\n  );\n  const dashboardIds = useMemo(() => dashboards.map(d => d.id), [dashboards]);\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus(\n    'dashboard',\n    dashboardIds,\n    addDangerToast,\n  );\n\n  const [dashboardToEdit, setDashboardToEdit] = useState<Dashboard | null>(\n    null,\n  );\n  const [dashboardToDelete, setDashboardToDelete] =\n    useState<CRUDDashboard | null>(null);\n\n  const [importingDashboard, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n\n  const openDashboardImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeDashboardImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleDashboardImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Dashboard imported'));\n  };\n\n  // TODO: Fix usage of localStorage keying on the user id\n  const userKey = dangerouslyGetItemDoNotUse(user?.userId?.toString(), null);\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n\n  function openDashboardEditModal(dashboard: Dashboard) {\n    setDashboardToEdit(dashboard);\n  }\n\n  function handleDashboardEdit(edits: Dashboard) {\n    return SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${edits.id}`,\n    }).then(\n      ({ json = {} }) => {\n        setDashboards(\n          dashboards.map(dashboard => {\n            if (dashboard.id === json?.result?.id) {\n              const {\n                changed_by_name,\n                changed_by,\n                dashboard_title = '',\n                slug = '',\n                json_metadata = '',\n                changed_on_delta_humanized,\n                url = '',\n                certified_by = '',\n                certification_details = '',\n                owners,\n                tags,\n              } = json.result;\n              return {\n                ...dashboard,\n                changed_by_name,\n                changed_by,\n                dashboard_title,\n                slug,\n                json_metadata,\n                changed_on_delta_humanized,\n                url,\n                certified_by,\n                certification_details,\n                owners,\n                tags,\n              };\n            }\n            return dashboard;\n          }),\n        );\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('An error occurred while fetching dashboards: %s', errMsg),\n        ),\n      ),\n    );\n  }\n\n  const handleBulkDashboardExport = (dashboardsToExport: Dashboard[]) => {\n    const ids = dashboardsToExport.map(({ id }) => id);\n    handleResourceExport('dashboard', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  function handleBulkDashboardDelete(dashboardsToDelete: Dashboard[]) {\n    return SupersetClient.delete({\n      endpoint: `/api/v1/dashboard/?q=${rison.encode(\n        dashboardsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected dashboards: ', errMsg),\n        ),\n      ),\n    );\n  }\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) =>\n          user?.userId && (\n            <FaveStar\n              itemId={id}\n              saveFaveStar={saveFavoriteStatus}\n              isStarred={favoriteStatus[id]}\n            />\n          ),\n        Header: '',\n        id: 'id',\n        disableSortBy: true,\n        size: 'xs',\n        hidden: !user?.userId,\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              url,\n              dashboard_title: dashboardTitle,\n              certified_by: certifiedBy,\n              certification_details: certificationDetails,\n            },\n          },\n        }: any) => (\n          <Link to={url}>\n            {certifiedBy && (\n              <>\n                <CertifiedBadge\n                  certifiedBy={certifiedBy}\n                  details={certificationDetails}\n                />{' '}\n              </>\n            )}\n            {dashboardTitle}\n          </Link>\n        ),\n        Header: t('Name'),\n        accessor: 'dashboard_title',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { status },\n          },\n        }: any) =>\n          status === DashboardStatus.PUBLISHED ? t('Published') : t('Draft'),\n        Header: t('Status'),\n        accessor: 'published',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { tags = [] },\n          },\n        }: {\n          row: {\n            original: {\n              tags: Tag[];\n            };\n          };\n        }) => (\n          // Only show custom type tags\n          <TagsList\n            tags={tags.filter(\n              (tag: Tag) => tag.type === 'TagTypes.custom' || tag.type === 1,\n            )}\n            maxTags={3}\n          />\n        ),\n        Header: t('Tags'),\n        accessor: 'tags',\n        disableSortBy: true,\n        hidden: !isFeatureEnabled(FeatureFlag.TaggingSystem),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        accessor: 'owners',\n        disableSortBy: true,\n        cellProps: {\n          style: { padding: '0px' },\n        },\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleDelete = () =>\n            handleDashboardDelete(\n              original,\n              refreshData,\n              addSuccessToast,\n              addDangerToast,\n            );\n          const handleEdit = () => openDashboardEditModal(original);\n          const handleExport = () => handleBulkDashboardExport([original]);\n\n          return (\n            <Actions className=\"actions\">\n              {canDelete && (\n                <ConfirmStatusChange\n                  title={t('Please confirm')}\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{original.dashboard_title}</b>?\n                    </>\n                  }\n                  onConfirm={handleDelete}\n                >\n                  {confirmDelete => (\n                    <Tooltip\n                      id=\"delete-action-tooltip\"\n                      title={t('Delete')}\n                      placement=\"bottom\"\n                    >\n                      <span\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"action-button\"\n                        onClick={confirmDelete}\n                      >\n                        <Icons.Trash data-test=\"dashboard-list-trash-icon\" />\n                      </span>\n                    </Tooltip>\n                  )}\n                </ConfirmStatusChange>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleEdit}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete && !canExport,\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [\n      user?.userId,\n      canEdit,\n      canDelete,\n      canExport,\n      saveFavoriteStatus,\n      favoriteStatus,\n      refreshData,\n      addSuccessToast,\n      addDangerToast,\n    ],\n  );\n\n  const favoritesFilter: Filter = useMemo(\n    () => ({\n      Header: t('Favorite'),\n      key: 'favorite',\n      id: 'id',\n      urlDisplay: 'favorite',\n      input: 'select',\n      operator: FilterOperator.DashboardIsFav,\n      unfilteredLabel: t('Any'),\n      selects: [\n        { label: t('Yes'), value: true },\n        { label: t('No'), value: false },\n      ],\n    }),\n    [],\n  );\n\n  const filters: Filters = useMemo(() => {\n    const filters_list = [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'dashboard_title',\n        input: 'search',\n        operator: FilterOperator.TitleOrSlug,\n      },\n      {\n        Header: t('Status'),\n        key: 'published',\n        id: 'published',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: t('Any'),\n        selects: [\n          { label: t('Published'), value: true },\n          { label: t('Draft'), value: false },\n        ],\n      },\n      ...(isFeatureEnabled(FeatureFlag.TaggingSystem) && canReadTag\n        ? [\n            {\n              Header: t('Tag'),\n              key: 'tags',\n              id: 'tags',\n              input: 'select',\n              operator: FilterOperator.DashboardTagById,\n              unfilteredLabel: t('All'),\n              fetchSelects: loadTags,\n            },\n          ]\n        : []),\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.RelationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'dashboard',\n          'owners',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching dashboard owner values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      ...(user?.userId ? [favoritesFilter] : []),\n      {\n        Header: t('Certified'),\n        key: 'certified',\n        id: 'id',\n        urlDisplay: 'certified',\n        input: 'select',\n        operator: FilterOperator.DashboardIsCertified,\n        unfilteredLabel: t('Any'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'dashboard',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ] as Filters;\n    return filters_list;\n  }, [addDangerToast, favoritesFilter, props.user]);\n\n  const sortTypes = [\n    {\n      desc: false,\n      id: 'dashboard_title',\n      label: t('Alphabetical'),\n      value: 'alphabetical',\n    },\n    {\n      desc: true,\n      id: 'changed_on_delta_humanized',\n      label: t('Recently modified'),\n      value: 'recently_modified',\n    },\n    {\n      desc: false,\n      id: 'changed_on_delta_humanized',\n      label: t('Least recently modified'),\n      value: 'least_recently_modified',\n    },\n  ];\n\n  const renderCard = useCallback(\n    (dashboard: Dashboard) => (\n      <DashboardCard\n        dashboard={dashboard}\n        hasPerm={hasPerm}\n        bulkSelectEnabled={bulkSelectEnabled}\n        showThumbnails={\n          userKey\n            ? userKey.thumbnails\n            : isFeatureEnabled(FeatureFlag.Thumbnails)\n        }\n        userId={user?.userId}\n        loading={loading}\n        openDashboardEditModal={openDashboardEditModal}\n        saveFavoriteStatus={saveFavoriteStatus}\n        favoriteStatus={favoriteStatus[dashboard.id]}\n        handleBulkDashboardExport={handleBulkDashboardExport}\n        onDelete={dashboard => setDashboardToDelete(dashboard)}\n      />\n    ),\n    [\n      bulkSelectEnabled,\n      favoriteStatus,\n      hasPerm,\n      loading,\n      user?.userId,\n      saveFavoriteStatus,\n      userKey,\n    ],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n  if (canDelete || canExport) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect,\n    });\n  }\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Dashboard')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        window.location.assign('/dashboard/new');\n      },\n    });\n\n    subMenuButtons.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import dashboards')}\n          placement=\"bottomRight\"\n        >\n          <Icons.Import data-test=\"import-button\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openDashboardImportModal,\n    });\n  }\n  return (\n    <>\n      <SubMenu name={t('Dashboards')} buttons={subMenuButtons} />\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected dashboards?',\n        )}\n        onConfirm={handleBulkDashboardDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              type: 'danger',\n              onSelect: confirmDelete,\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkDashboardExport,\n            });\n          }\n          return (\n            <>\n              {dashboardToEdit && (\n                <PropertiesModal\n                  dashboardId={dashboardToEdit.id}\n                  show\n                  onHide={() => setDashboardToEdit(null)}\n                  onSubmit={handleDashboardEdit}\n                />\n              )}\n              {dashboardToDelete && (\n                <DeleteModal\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{dashboardToDelete.dashboard_title}</b>?\n                    </>\n                  }\n                  onConfirm={() => {\n                    handleDashboardDelete(\n                      dashboardToDelete,\n                      refreshData,\n                      addSuccessToast,\n                      addDangerToast,\n                      undefined,\n                      user?.userId,\n                    );\n                    setDashboardToDelete(null);\n                  }}\n                  onHide={() => setDashboardToDelete(null)}\n                  open={!!dashboardToDelete}\n                  title={t('Please confirm')}\n                />\n              )}\n              <ListView<Dashboard>\n                bulkActions={bulkActions}\n                bulkSelectEnabled={bulkSelectEnabled}\n                cardSortSelectOptions={sortTypes}\n                className=\"dashboard-list-view\"\n                columns={columns}\n                count={dashboardCount}\n                data={dashboards}\n                disableBulkSelect={toggleBulkSelect}\n                fetchData={fetchData}\n                refreshData={refreshData}\n                filters={filters}\n                initialSort={initialSort}\n                loading={loading}\n                pageSize={PAGE_SIZE}\n                addSuccessToast={addSuccessToast}\n                addDangerToast={addDangerToast}\n                showThumbnails={\n                  userKey\n                    ? userKey.thumbnails\n                    : isFeatureEnabled(FeatureFlag.Thumbnails)\n                }\n                renderCard={renderCard}\n                defaultViewMode={\n                  isFeatureEnabled(FeatureFlag.ListviewsDefaultCardView)\n                    ? 'card'\n                    : 'table'\n                }\n                enableBulkTag\n                bulkTagResourceName=\"dashboard\"\n              />\n            </>\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"dashboard\"\n        resourceLabel={t('dashboard')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleDashboardImport}\n        show={importingDashboard}\n        onHide={closeDashboardImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(DashboardList);\n"],"names":["componentShape","PropTypes","id","isRequired","type","Object","values","componentTypes","parents","children","meta","width","height","headerSize","headerStyleOptions","map","opt","value","background","backgroundStyleOptions","chartId","chartPropShape","chartAlert","chartStatus","chartUpdateEndTime","chartUpdateStartTime","latestQueryFormData","queryController","abort","queriesResponse","triggerQuery","lastRendered","slicePropShape","slice_id","slice_url","slice_name","datasource","datasource_name","datasource_link","changed_on","modified","viz_type","description","description_markeddown","owners","dashboardFilterPropShape","componentId","filterName","datasourceId","directPathToFilter","isDateFilter","isInstantFilter","columns","labels","scopes","dashboardStatePropShape","sliceIds","expandedSlices","editMode","isPublished","colorNamespace","colorScheme","updatedColorScheme","hasUnsavedChanges","dashboardInfoPropShape","metadata","slug","dash_edit_perm","dash_save_perm","common","userId","leafType","label","parentShape","f","apply","arguments","lazyFunction","filterScopeSelectorTreeNodePropShape","CheckboxChecked","theme","useTheme","_jsxs","viewBox","fill","xmlns","_jsx","d","colors","primary","base","CheckboxHalfChecked","grayscale","light1","CheckboxUnchecked","light2","forwardRef","props","ref","showModal","setShowModal","useState","beforeOpen","onExit","isButton","resizable","draggable","className","tooltip","modalFooter","triggerNode","destroyOnClose","modalBody","draggableConfig","resizableConfig","modalTitle","responsive","maxWidth","close","open","e","preventDefault","current","_Fragment","Button","onClick","role","Modal","show","onHide","title","footer","hideFooter","BACKGROUND_TRANSPARENT","t","BACKGROUND_WHITE","SMALL_HEADER","MEDIUM_HEADER","LARGE_HEADER","iconStyles","css","ControlHeader","name","validationErrors","renderTrigger","rightNode","leftNode","hovered","tooltipOnClick","warning","danger","gridUnit","hasHadNoErrors","useRef","labelColor","useMemo","length","error","alert","FormLabel","tabIndex","style","cursor","Tooltip","placement","Icons","AlertSolid","iconColor","iconSize","ErrorSolid","join","ExclamationCircleOutlined","InfoCircleOutlined","InfoTooltipWithTrigger","icon","ColorSchemeLabel","showTooltip","setShowTooltip","labelNameRef","labelsColorRef","colorsList","color","i","overlayClassName","tooltipContent","visible","onMouseEnter","handleShowTooltip","labelNameElement","labelsColorElement","scrollWidth","offsetWidth","scrollHeight","offsetHeight","onMouseLeave","handleHideTooltip","Option","OptGroup","AntdSelect","StyledAlert","styled","CUSTOM_LABEL_ALERT","DASHBOARD_ALERT","Label","hasCustomLabelsColor","dashboardId","alertTitle","ColorSchemeControl","onChange","clearable","defaultScheme","choices","schemes","isLinear","rest","currentScheme","result","_schemesObject$SUPERS","schemesObject","_isFunction","SUPERSET_DEFAULT","options","controlChoices","allColorOptions","groups","filter","o","option","isValidColorOption","includes","push","reduce","acc","_schemesObject$value","_currentScheme$group","getColors","customLabel","group","ColorSchemeGroup","Other","Custom","Featured","nonEmptyGroups","_sortBy","index","groupIndex","optIndex","StyledSelect","typography","sizes","m","allowClear","disabled","placeholder","getPopupContainer","parentNode","showSearch","filterOption","search","handleFilterOptionHelper","dashboard","hasPerm","bulkSelectEnabled","openDashboardEditModal","favoriteStatus","saveFavoriteStatus","showThumbnails","handleBulkDashboardExport","onDelete","history","useHistory","canEdit","canDelete","canExport","thumbnailUrl","setThumbnailUrl","fetchingThumbnail","setFetchingThumbnail","useEffect","isFeatureEnabled","FeatureFlag","Thumbnails","thumbnail_url","SupersetClient","get","endpoint","then","json","menu","Menu","Item","EditAlt","Share","Trash","CardStyles","url","ListViewCard","loading","dashboard_title","certifiedBy","certified_by","certificationDetails","certification_details","titleRight","published","cover","undefined","linkComponent","Link","imgURL","imgFallbackURL","changed_on_delta_humanized","coverLeft","FacePile","users","actions","Actions","stopPropagation","FaveStar","itemId","saveFaveStar","isStarred","AntdDropdown","overlay","MoreVert","DashboardStatus","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","div","DASHBOARD_COLUMNS_TO_FETCH","withToasts","_user$userId","addDangerToast","addSuccessToast","user","roles","useSelector","state","canReadTag","findPermission","resourceCount","dashboardCount","resourceCollection","dashboards","setResourceCollection","setDashboards","fetchData","toggleBulkSelect","refreshData","useListViewResource","dashboardIds","useFavoriteStatus","dashboardToEdit","setDashboardToEdit","dashboardToDelete","setDashboardToDelete","importingDashboard","showImportModal","passwordFields","setPasswordFields","preparingExport","setPreparingExport","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","userKey","dangerouslyGetItemDoNotUse","toString","canCreate","initialSort","desc","handleDashboardEdit","edits","_json$result","changed_by_name","changed_by","json_metadata","tags","createErrorHandler","errMsg","dashboardsToExport","ids","handleResourceExport","Cell","row","original","Header","disableSortBy","size","hidden","dashboardTitle","to","CertifiedBadge","details","accessor","status","PUBLISHED","TagsList","tag","maxTags","TaggingSystem","cellProps","padding","changedOn","changedBy","ModifiedInfo","date","ConfirmStatusChange","onConfirm","handleDelete","handleDashboardDelete","confirmDelete","handleExport","handleEdit","QueryObjectColumns","ChangedBy","favoritesFilter","key","urlDisplay","input","operator","FilterOperator","DashboardIsFav","unfilteredLabel","selects","filters","TitleOrSlug","Equals","DashboardTagById","fetchSelects","loadTags","RelationManyMany","createFetchRelated","paginate","DashboardIsCertified","RelationOneMany","sortTypes","renderCard","useCallback","DashboardCard","thumbnails","subMenuButtons","buttonStyle","window","location","assign","Import","openDashboardImportModal","SubMenu","buttons","dashboardsToDelete","delete","rison","message","bulkActions","onSelect","PropertiesModal","onSubmit","DeleteModal","ListView","cardSortSelectOptions","count","data","disableBulkSelect","pageSize","defaultViewMode","ListviewsDefaultCardView","enableBulkTag","bulkTagResourceName","ImportModelsModal","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","handleDashboardImport","closeDashboardImportModal","Loading"],"sourceRoot":""}